[
  {
    "title": "Create API Keys",
    "path": "/public/v1/submit/create_api_keys",
    "method": "post",
    "description": "Add api keys to an existing User",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_API_KEYS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createApiKeysIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createApiKeysIntent object",
                    "childFields": [
                      {
                        "name": "apiKeys",
                        "type": "array",
                        "required": true,
                        "description": "A list of API Keys.",
                        "childFields": [
                          {
                            "name": "apiKeyName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for an API Key."
                          },
                          {
                            "name": "publicKey",
                            "type": "string",
                            "required": true,
                            "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                          },
                          {
                            "name": "expirationSeconds",
                            "type": "string",
                            "required": false,
                            "description": "Optional window (in seconds) indicating how long the API Key should last."
                          }
                        ]
                      },
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given User."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createApiKeysResult",
                    "type": "object",
                    "required": true,
                    "description": "The createApiKeysResult object",
                    "childFields": [
                      {
                        "name": "apiKeyIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of API Key IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_API_KEYS_V2",
              "description": "ACTIVITY_TYPE_CREATE_API_KEYS_V2 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "apiKeys",
              "type": "array",
              "required": true,
              "description": "A list of API Keys.",
              "childFields": [
                {
                  "name": "apiKeyName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for an API Key."
                },
                {
                  "name": "publicKey",
                  "type": "string",
                  "required": true,
                  "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                },
                {
                  "name": "curveType",
                  "type": "enum",
                  "required": true,
                  "description": "curveType field",
                  "enumOptions": [
                    {
                      "value": "API_KEY_CURVE_P256",
                      "description": "API_KEY_CURVE_P256 option"
                    },
                    {
                      "value": "API_KEY_CURVE_SECP256K1",
                      "description": "API_KEY_CURVE_SECP256K1 option"
                    },
                    {
                      "value": "API_KEY_CURVE_ED25519",
                      "description": "API_KEY_CURVE_ED25519 option"
                    }
                  ]
                },
                {
                  "name": "expirationSeconds",
                  "type": "string",
                  "required": false,
                  "description": "Optional window (in seconds) indicating how long the API Key should last."
                }
              ]
            },
            {
              "name": "userId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for a given User."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Authenticators",
    "path": "/public/v1/submit/create_authenticators",
    "method": "post",
    "description": "Create Authenticators to authenticate requests to Turnkey",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_AUTHENTICATORS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createAuthenticatorsIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createAuthenticatorsIntent object",
                    "childFields": [
                      {
                        "name": "authenticators",
                        "type": "array",
                        "required": true,
                        "description": "A list of Authenticators.",
                        "childFields": [
                          {
                            "name": "authenticatorName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for an Authenticator."
                          },
                          {
                            "name": "userId",
                            "type": "string",
                            "required": true,
                            "description": "Unique identifier for a given User."
                          },
                          {
                            "name": "attestation",
                            "type": "object",
                            "required": true,
                            "description": "attestation field",
                            "childFields": [
                              {
                                "name": "id",
                                "type": "string",
                                "required": true,
                                "description": "id field"
                              },
                              {
                                "name": "type",
                                "type": "enum",
                                "required": true,
                                "description": "type field",
                                "enumOptions": [
                                  {
                                    "value": "public-key",
                                    "description": "public-key option"
                                  }
                                ]
                              },
                              {
                                "name": "rawId",
                                "type": "string",
                                "required": true,
                                "description": "rawId field"
                              },
                              {
                                "name": "authenticatorAttachment",
                                "type": "enum",
                                "required": false,
                                "description": "authenticatorAttachment field",
                                "enumOptions": [
                                  {
                                    "value": "cross-platform",
                                    "description": "cross-platform option"
                                  },
                                  {
                                    "value": "platform",
                                    "description": "platform option"
                                  }
                                ]
                              },
                              {
                                "name": "response",
                                "type": "object",
                                "required": true,
                                "description": "response field",
                                "childFields": [
                                  {
                                    "name": "clientDataJson",
                                    "type": "string",
                                    "required": true,
                                    "description": "clientDataJson field"
                                  },
                                  {
                                    "name": "attestationObject",
                                    "type": "string",
                                    "required": true,
                                    "description": "attestationObject field"
                                  },
                                  {
                                    "name": "transports",
                                    "type": "array",
                                    "required": false,
                                    "description": "transports field",
                                    "childFields": [
                                      {
                                        "name": "item",
                                        "type": "enum",
                                        "required": true,
                                        "description": "item field",
                                        "enumOptions": [
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                            "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                            "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                            "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_USB",
                                            "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                            "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "name": "authenticatorAttachment",
                                    "type": "enum",
                                    "required": false,
                                    "description": "authenticatorAttachment field",
                                    "enumOptions": [
                                      {
                                        "value": "cross-platform",
                                        "description": "cross-platform option"
                                      },
                                      {
                                        "value": "platform",
                                        "description": "platform option"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "name": "clientExtensionResults",
                                "type": "object",
                                "required": true,
                                "description": "clientExtensionResults field",
                                "childFields": [
                                  {
                                    "name": "appid",
                                    "type": "boolean",
                                    "required": false,
                                    "description": "appid field"
                                  },
                                  {
                                    "name": "appidExclude",
                                    "type": "boolean",
                                    "required": false,
                                    "description": "appidExclude field"
                                  },
                                  {
                                    "name": "credProps",
                                    "type": "object",
                                    "required": false,
                                    "description": "credProps field",
                                    "childFields": [
                                      {
                                        "name": "rk",
                                        "type": "boolean",
                                        "required": true,
                                        "description": "rk field"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "name": "challenge",
                            "type": "string",
                            "required": true,
                            "description": "Challenge presented for authentication purposes."
                          }
                        ]
                      },
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given User."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createAuthenticatorsResult",
                    "type": "object",
                    "required": true,
                    "description": "The createAuthenticatorsResult object",
                    "childFields": [
                      {
                        "name": "authenticatorIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of Authenticator IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_AUTHENTICATORS_V2",
              "description": "ACTIVITY_TYPE_CREATE_AUTHENTICATORS_V2 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "authenticators",
              "type": "array",
              "required": true,
              "description": "A list of Authenticators.",
              "childFields": [
                {
                  "name": "authenticatorName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for an Authenticator."
                },
                {
                  "name": "challenge",
                  "type": "string",
                  "required": true,
                  "description": "Challenge presented for authentication purposes."
                },
                {
                  "name": "attestation",
                  "type": "object",
                  "required": true,
                  "description": "attestation field",
                  "childFields": [
                    {
                      "name": "credentialId",
                      "type": "string",
                      "required": true,
                      "description": "The cbor encoded then base64 url encoded id of the credential."
                    },
                    {
                      "name": "clientDataJson",
                      "type": "string",
                      "required": true,
                      "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                    },
                    {
                      "name": "attestationObject",
                      "type": "string",
                      "required": true,
                      "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                    },
                    {
                      "name": "transports",
                      "type": "array",
                      "required": true,
                      "description": "The type of authenticator transports.",
                      "childFields": [
                        {
                          "name": "item",
                          "type": "enum",
                          "required": true,
                          "description": "item field",
                          "enumOptions": [
                            {
                              "value": "AUTHENTICATOR_TRANSPORT_BLE",
                              "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                            },
                            {
                              "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                              "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                            },
                            {
                              "value": "AUTHENTICATOR_TRANSPORT_NFC",
                              "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                            },
                            {
                              "value": "AUTHENTICATOR_TRANSPORT_USB",
                              "description": "AUTHENTICATOR_TRANSPORT_USB option"
                            },
                            {
                              "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                              "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "userId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for a given User."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Invitations",
    "path": "/public/v1/submit/create_invitations",
    "method": "post",
    "description": "Create Invitations to join an existing Organization",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_INVITATIONS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createInvitationsIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createInvitationsIntent object",
                    "childFields": [
                      {
                        "name": "invitations",
                        "type": "array",
                        "required": true,
                        "description": "A list of Invitations.",
                        "childFields": [
                          {
                            "name": "receiverUserName",
                            "type": "string",
                            "required": true,
                            "description": "The name of the intended Invitation recipient."
                          },
                          {
                            "name": "receiverUserEmail",
                            "type": "string",
                            "required": true,
                            "description": "The email address of the intended Invitation recipient."
                          },
                          {
                            "name": "receiverUserTags",
                            "type": "array",
                            "required": true,
                            "description": "A list of tags assigned to the Invitation recipient. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "item",
                                "type": "string",
                                "required": true,
                                "description": "item field"
                              }
                            ]
                          },
                          {
                            "name": "accessType",
                            "type": "enum",
                            "required": true,
                            "description": "accessType field",
                            "enumOptions": [
                              {
                                "value": "ACCESS_TYPE_WEB",
                                "description": "ACCESS_TYPE_WEB option"
                              },
                              {
                                "value": "ACCESS_TYPE_API",
                                "description": "ACCESS_TYPE_API option"
                              },
                              {
                                "value": "ACCESS_TYPE_ALL",
                                "description": "ACCESS_TYPE_ALL option"
                              }
                            ]
                          },
                          {
                            "name": "senderUserId",
                            "type": "string",
                            "required": true,
                            "description": "Unique identifier for the Sender of an Invitation."
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createInvitationsResult",
                    "type": "object",
                    "required": true,
                    "description": "The createInvitationsResult object",
                    "childFields": [
                      {
                        "name": "invitationIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of Invitation IDs",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_INVITATIONS",
              "description": "ACTIVITY_TYPE_CREATE_INVITATIONS option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "invitations",
              "type": "array",
              "required": true,
              "description": "A list of Invitations.",
              "childFields": [
                {
                  "name": "receiverUserName",
                  "type": "string",
                  "required": true,
                  "description": "The name of the intended Invitation recipient."
                },
                {
                  "name": "receiverUserEmail",
                  "type": "string",
                  "required": true,
                  "description": "The email address of the intended Invitation recipient."
                },
                {
                  "name": "receiverUserTags",
                  "type": "array",
                  "required": true,
                  "description": "A list of tags assigned to the Invitation recipient. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "item",
                      "type": "string",
                      "required": true,
                      "description": "item field"
                    }
                  ]
                },
                {
                  "name": "accessType",
                  "type": "enum",
                  "required": true,
                  "description": "accessType field",
                  "enumOptions": [
                    {
                      "value": "ACCESS_TYPE_WEB",
                      "description": "ACCESS_TYPE_WEB option"
                    },
                    {
                      "value": "ACCESS_TYPE_API",
                      "description": "ACCESS_TYPE_API option"
                    },
                    {
                      "value": "ACCESS_TYPE_ALL",
                      "description": "ACCESS_TYPE_ALL option"
                    }
                  ]
                },
                {
                  "name": "senderUserId",
                  "type": "string",
                  "required": true,
                  "description": "Unique identifier for the Sender of an Invitation."
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Oauth Providers",
    "path": "/public/v1/submit/create_oauth_providers",
    "method": "post",
    "description": "Creates Oauth providers for a specified user - BETA",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_OAUTH_PROVIDERS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createOauthProvidersIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createOauthProvidersIntent object",
                    "childFields": [
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "The ID of the User to add an Oauth provider to"
                      },
                      {
                        "name": "oauthProviders",
                        "type": "array",
                        "required": true,
                        "description": "A list of Oauth providers.",
                        "childFields": [
                          {
                            "name": "providerName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name to identify a Provider."
                          },
                          {
                            "name": "oidcToken",
                            "type": "string",
                            "required": true,
                            "description": "Base64 encoded OIDC token"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createOauthProvidersResult",
                    "type": "object",
                    "required": true,
                    "description": "The createOauthProvidersResult object",
                    "childFields": [
                      {
                        "name": "providerIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of unique identifiers for Oauth Providers",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_OAUTH_PROVIDERS",
              "description": "ACTIVITY_TYPE_CREATE_OAUTH_PROVIDERS option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "userId",
              "type": "string",
              "required": true,
              "description": "The ID of the User to add an Oauth provider to"
            },
            {
              "name": "oauthProviders",
              "type": "array",
              "required": true,
              "description": "A list of Oauth providers.",
              "childFields": [
                {
                  "name": "providerName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name to identify a Provider."
                },
                {
                  "name": "oidcToken",
                  "type": "string",
                  "required": true,
                  "description": "Base64 encoded OIDC token"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Policies",
    "path": "/public/v1/submit/create_policies",
    "method": "post",
    "description": "Create new Policies",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_POLICIES"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createPoliciesIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createPoliciesIntent object",
                    "childFields": [
                      {
                        "name": "policies",
                        "type": "array",
                        "required": true,
                        "description": "An array of policy intents to be created.",
                        "childFields": [
                          {
                            "name": "policyName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for a Policy."
                          },
                          {
                            "name": "effect",
                            "type": "enum",
                            "required": true,
                            "description": "effect field",
                            "enumOptions": [
                              {
                                "value": "EFFECT_ALLOW",
                                "description": "EFFECT_ALLOW option"
                              },
                              {
                                "value": "EFFECT_DENY",
                                "description": "EFFECT_DENY option"
                              }
                            ]
                          },
                          {
                            "name": "condition",
                            "type": "string",
                            "required": false,
                            "description": "The condition expression that triggers the Effect"
                          },
                          {
                            "name": "consensus",
                            "type": "string",
                            "required": false,
                            "description": "The consensus expression that triggers the Effect"
                          },
                          {
                            "name": "notes",
                            "type": "string",
                            "required": false,
                            "description": "notes field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createPoliciesResult",
                    "type": "object",
                    "required": true,
                    "description": "The createPoliciesResult object",
                    "childFields": [
                      {
                        "name": "policyIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of unique identifiers for the created policies.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_POLICIES",
              "description": "ACTIVITY_TYPE_CREATE_POLICIES option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "policies",
              "type": "array",
              "required": true,
              "description": "An array of policy intents to be created.",
              "childFields": [
                {
                  "name": "policyName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a Policy."
                },
                {
                  "name": "effect",
                  "type": "enum",
                  "required": true,
                  "description": "effect field",
                  "enumOptions": [
                    {
                      "value": "EFFECT_ALLOW",
                      "description": "EFFECT_ALLOW option"
                    },
                    {
                      "value": "EFFECT_DENY",
                      "description": "EFFECT_DENY option"
                    }
                  ]
                },
                {
                  "name": "condition",
                  "type": "string",
                  "required": false,
                  "description": "The condition expression that triggers the Effect"
                },
                {
                  "name": "consensus",
                  "type": "string",
                  "required": false,
                  "description": "The consensus expression that triggers the Effect"
                },
                {
                  "name": "notes",
                  "type": "string",
                  "required": false,
                  "description": "notes field"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Policy",
    "path": "/public/v1/submit/create_policy",
    "method": "post",
    "description": "Create a new Policy",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_POLICY"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createPolicyIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createPolicyIntent object",
                    "childFields": [
                      {
                        "name": "policyName",
                        "type": "string",
                        "required": true,
                        "description": "Human-readable name for a Policy."
                      },
                      {
                        "name": "selectors",
                        "type": "array",
                        "required": true,
                        "description": "A list of simple functions each including a subject, target and boolean. See Policy Engine Language section for additional details.",
                        "childFields": [
                          {
                            "name": "subject",
                            "type": "string",
                            "required": false,
                            "description": "subject field"
                          },
                          {
                            "name": "operator",
                            "type": "enum",
                            "required": false,
                            "description": "operator field",
                            "enumOptions": [
                              {
                                "value": "OPERATOR_EQUAL",
                                "description": "OPERATOR_EQUAL option"
                              },
                              {
                                "value": "OPERATOR_MORE_THAN",
                                "description": "OPERATOR_MORE_THAN option"
                              },
                              {
                                "value": "OPERATOR_MORE_THAN_OR_EQUAL",
                                "description": "OPERATOR_MORE_THAN_OR_EQUAL option"
                              },
                              {
                                "value": "OPERATOR_LESS_THAN",
                                "description": "OPERATOR_LESS_THAN option"
                              },
                              {
                                "value": "OPERATOR_LESS_THAN_OR_EQUAL",
                                "description": "OPERATOR_LESS_THAN_OR_EQUAL option"
                              },
                              {
                                "value": "OPERATOR_CONTAINS",
                                "description": "OPERATOR_CONTAINS option"
                              },
                              {
                                "value": "OPERATOR_NOT_EQUAL",
                                "description": "OPERATOR_NOT_EQUAL option"
                              },
                              {
                                "value": "OPERATOR_IN",
                                "description": "OPERATOR_IN option"
                              },
                              {
                                "value": "OPERATOR_NOT_IN",
                                "description": "OPERATOR_NOT_IN option"
                              },
                              {
                                "value": "OPERATOR_CONTAINS_ONE",
                                "description": "OPERATOR_CONTAINS_ONE option"
                              },
                              {
                                "value": "OPERATOR_CONTAINS_ALL",
                                "description": "OPERATOR_CONTAINS_ALL option"
                              }
                            ]
                          },
                          {
                            "name": "target",
                            "type": "string",
                            "required": false,
                            "description": "target field"
                          }
                        ]
                      },
                      {
                        "name": "effect",
                        "type": "enum",
                        "required": true,
                        "description": "effect field",
                        "enumOptions": [
                          {
                            "value": "EFFECT_ALLOW",
                            "description": "EFFECT_ALLOW option"
                          },
                          {
                            "value": "EFFECT_DENY",
                            "description": "EFFECT_DENY option"
                          }
                        ]
                      },
                      {
                        "name": "notes",
                        "type": "string",
                        "required": false,
                        "description": "notes field"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createPolicyResult",
                    "type": "object",
                    "required": true,
                    "description": "The createPolicyResult object",
                    "childFields": [
                      {
                        "name": "policyId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Policy."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_POLICY_V3",
              "description": "ACTIVITY_TYPE_CREATE_POLICY_V3 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "policyName",
              "type": "string",
              "required": true,
              "description": "Human-readable name for a Policy."
            },
            {
              "name": "effect",
              "type": "enum",
              "required": true,
              "description": "effect field",
              "enumOptions": [
                {
                  "value": "EFFECT_ALLOW",
                  "description": "EFFECT_ALLOW option"
                },
                {
                  "value": "EFFECT_DENY",
                  "description": "EFFECT_DENY option"
                }
              ]
            },
            {
              "name": "condition",
              "type": "string",
              "required": false,
              "description": "The condition expression that triggers the Effect"
            },
            {
              "name": "consensus",
              "type": "string",
              "required": false,
              "description": "The consensus expression that triggers the Effect"
            },
            {
              "name": "notes",
              "type": "string",
              "required": false,
              "description": "notes field"
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Private Key Tag",
    "path": "/public/v1/submit/create_private_key_tag",
    "method": "post",
    "description": "Create a private key tag and add it to private keys.",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_PRIVATE_KEY_TAG"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createPrivateKeyTagIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createPrivateKeyTagIntent object",
                    "childFields": [
                      {
                        "name": "privateKeyTagName",
                        "type": "string",
                        "required": true,
                        "description": "Human-readable name for a Private Key Tag."
                      },
                      {
                        "name": "privateKeyIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of Private Key IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createPrivateKeyTagResult",
                    "type": "object",
                    "required": true,
                    "description": "The createPrivateKeyTagResult object",
                    "childFields": [
                      {
                        "name": "privateKeyTagId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Private Key Tag."
                      },
                      {
                        "name": "privateKeyIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of Private Key IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_PRIVATE_KEY_TAG",
              "description": "ACTIVITY_TYPE_CREATE_PRIVATE_KEY_TAG option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "privateKeyTagName",
              "type": "string",
              "required": true,
              "description": "Human-readable name for a Private Key Tag."
            },
            {
              "name": "privateKeyIds",
              "type": "array",
              "required": true,
              "description": "A list of Private Key IDs.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Private Keys",
    "path": "/public/v1/submit/create_private_keys",
    "method": "post",
    "description": "Create new Private Keys",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_PRIVATE_KEYS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createPrivateKeysIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createPrivateKeysIntent object",
                    "childFields": [
                      {
                        "name": "privateKeys",
                        "type": "array",
                        "required": true,
                        "description": "A list of Private Keys.",
                        "childFields": [
                          {
                            "name": "privateKeyName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for a Private Key."
                          },
                          {
                            "name": "curve",
                            "type": "enum",
                            "required": true,
                            "description": "curve field",
                            "enumOptions": [
                              {
                                "value": "CURVE_SECP256K1",
                                "description": "CURVE_SECP256K1 option"
                              },
                              {
                                "value": "CURVE_ED25519",
                                "description": "CURVE_ED25519 option"
                              }
                            ]
                          },
                          {
                            "name": "privateKeyTags",
                            "type": "array",
                            "required": true,
                            "description": "A list of Private Key Tag IDs. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "item",
                                "type": "string",
                                "required": true,
                                "description": "item field"
                              }
                            ]
                          },
                          {
                            "name": "addressFormats",
                            "type": "array",
                            "required": true,
                            "description": "Cryptocurrency-specific formats for a derived address (e.g., Ethereum).",
                            "childFields": [
                              {
                                "name": "item",
                                "type": "enum",
                                "required": true,
                                "description": "item field",
                                "enumOptions": [
                                  {
                                    "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                                    "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COMPRESSED",
                                    "description": "ADDRESS_FORMAT_COMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_ETHEREUM",
                                    "description": "ADDRESS_FORMAT_ETHEREUM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SOLANA",
                                    "description": "ADDRESS_FORMAT_SOLANA option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COSMOS",
                                    "description": "ADDRESS_FORMAT_COSMOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TRON",
                                    "description": "ADDRESS_FORMAT_TRON option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SUI",
                                    "description": "ADDRESS_FORMAT_SUI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_APTOS",
                                    "description": "ADDRESS_FORMAT_APTOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SEI",
                                    "description": "ADDRESS_FORMAT_SEI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XLM",
                                    "description": "ADDRESS_FORMAT_XLM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                                    "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                                    "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V3R2",
                                    "description": "ADDRESS_FORMAT_TON_V3R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V4R2",
                                    "description": "ADDRESS_FORMAT_TON_V4R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XRP",
                                    "description": "ADDRESS_FORMAT_XRP option"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createPrivateKeysResult",
                    "type": "object",
                    "required": true,
                    "description": "The createPrivateKeysResult object",
                    "childFields": [
                      {
                        "name": "privateKeyIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of Private Key IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_PRIVATE_KEYS_V2",
              "description": "ACTIVITY_TYPE_CREATE_PRIVATE_KEYS_V2 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "privateKeys",
              "type": "array",
              "required": true,
              "description": "A list of Private Keys.",
              "childFields": [
                {
                  "name": "privateKeyName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a Private Key."
                },
                {
                  "name": "curve",
                  "type": "enum",
                  "required": true,
                  "description": "curve field",
                  "enumOptions": [
                    {
                      "value": "CURVE_SECP256K1",
                      "description": "CURVE_SECP256K1 option"
                    },
                    {
                      "value": "CURVE_ED25519",
                      "description": "CURVE_ED25519 option"
                    }
                  ]
                },
                {
                  "name": "privateKeyTags",
                  "type": "array",
                  "required": true,
                  "description": "A list of Private Key Tag IDs. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "item",
                      "type": "string",
                      "required": true,
                      "description": "item field"
                    }
                  ]
                },
                {
                  "name": "addressFormats",
                  "type": "array",
                  "required": true,
                  "description": "Cryptocurrency-specific formats for a derived address (e.g., Ethereum).",
                  "childFields": [
                    {
                      "name": "item",
                      "type": "enum",
                      "required": true,
                      "description": "item field",
                      "enumOptions": [
                        {
                          "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                          "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COMPRESSED",
                          "description": "ADDRESS_FORMAT_COMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_ETHEREUM",
                          "description": "ADDRESS_FORMAT_ETHEREUM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SOLANA",
                          "description": "ADDRESS_FORMAT_SOLANA option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COSMOS",
                          "description": "ADDRESS_FORMAT_COSMOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TRON",
                          "description": "ADDRESS_FORMAT_TRON option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SUI",
                          "description": "ADDRESS_FORMAT_SUI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_APTOS",
                          "description": "ADDRESS_FORMAT_APTOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SEI",
                          "description": "ADDRESS_FORMAT_SEI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XLM",
                          "description": "ADDRESS_FORMAT_XLM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                          "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                          "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V3R2",
                          "description": "ADDRESS_FORMAT_TON_V3R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V4R2",
                          "description": "ADDRESS_FORMAT_TON_V4R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XRP",
                          "description": "ADDRESS_FORMAT_XRP option"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Private Keys",
    "path": "/public/v1/submit/create_private_keys",
    "method": "post",
    "description": "Create new Private Keys",
    "version": "2",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_PRIVATE_KEYS_V2"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createPrivateKeysIntentV2",
                    "type": "object",
                    "required": true,
                    "description": "The createPrivateKeysIntentV2 object",
                    "childFields": [
                      {
                        "name": "privateKeys",
                        "type": "array",
                        "required": true,
                        "description": "A list of Private Keys.",
                        "childFields": [
                          {
                            "name": "privateKeyName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for a Private Key."
                          },
                          {
                            "name": "curve",
                            "type": "enum",
                            "required": true,
                            "description": "curve field",
                            "enumOptions": [
                              {
                                "value": "CURVE_SECP256K1",
                                "description": "CURVE_SECP256K1 option"
                              },
                              {
                                "value": "CURVE_ED25519",
                                "description": "CURVE_ED25519 option"
                              }
                            ]
                          },
                          {
                            "name": "privateKeyTags",
                            "type": "array",
                            "required": true,
                            "description": "A list of Private Key Tag IDs. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "item",
                                "type": "string",
                                "required": true,
                                "description": "item field"
                              }
                            ]
                          },
                          {
                            "name": "addressFormats",
                            "type": "array",
                            "required": true,
                            "description": "Cryptocurrency-specific formats for a derived address (e.g., Ethereum).",
                            "childFields": [
                              {
                                "name": "item",
                                "type": "enum",
                                "required": true,
                                "description": "item field",
                                "enumOptions": [
                                  {
                                    "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                                    "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COMPRESSED",
                                    "description": "ADDRESS_FORMAT_COMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_ETHEREUM",
                                    "description": "ADDRESS_FORMAT_ETHEREUM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SOLANA",
                                    "description": "ADDRESS_FORMAT_SOLANA option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COSMOS",
                                    "description": "ADDRESS_FORMAT_COSMOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TRON",
                                    "description": "ADDRESS_FORMAT_TRON option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SUI",
                                    "description": "ADDRESS_FORMAT_SUI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_APTOS",
                                    "description": "ADDRESS_FORMAT_APTOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SEI",
                                    "description": "ADDRESS_FORMAT_SEI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XLM",
                                    "description": "ADDRESS_FORMAT_XLM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                                    "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                                    "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V3R2",
                                    "description": "ADDRESS_FORMAT_TON_V3R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V4R2",
                                    "description": "ADDRESS_FORMAT_TON_V4R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XRP",
                                    "description": "ADDRESS_FORMAT_XRP option"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createPrivateKeysResultV2",
                    "type": "object",
                    "required": true,
                    "description": "The createPrivateKeysResultV2 object",
                    "childFields": [
                      {
                        "name": "privateKeys",
                        "type": "array",
                        "required": true,
                        "description": "A list of Private Key IDs and addresses.",
                        "childFields": [
                          {
                            "name": "privateKeyId",
                            "type": "string",
                            "required": false,
                            "description": "privateKeyId field"
                          },
                          {
                            "name": "addresses",
                            "type": "array",
                            "required": false,
                            "description": "addresses field",
                            "childFields": [
                              {
                                "name": "format",
                                "type": "enum",
                                "required": false,
                                "description": "format field",
                                "enumOptions": [
                                  {
                                    "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                                    "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COMPRESSED",
                                    "description": "ADDRESS_FORMAT_COMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_ETHEREUM",
                                    "description": "ADDRESS_FORMAT_ETHEREUM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SOLANA",
                                    "description": "ADDRESS_FORMAT_SOLANA option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COSMOS",
                                    "description": "ADDRESS_FORMAT_COSMOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TRON",
                                    "description": "ADDRESS_FORMAT_TRON option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SUI",
                                    "description": "ADDRESS_FORMAT_SUI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_APTOS",
                                    "description": "ADDRESS_FORMAT_APTOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SEI",
                                    "description": "ADDRESS_FORMAT_SEI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XLM",
                                    "description": "ADDRESS_FORMAT_XLM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                                    "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                                    "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V3R2",
                                    "description": "ADDRESS_FORMAT_TON_V3R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V4R2",
                                    "description": "ADDRESS_FORMAT_TON_V4R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XRP",
                                    "description": "ADDRESS_FORMAT_XRP option"
                                  }
                                ]
                              },
                              {
                                "name": "address",
                                "type": "string",
                                "required": false,
                                "description": "address field"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_PRIVATE_KEYS_V2",
              "description": "ACTIVITY_TYPE_CREATE_PRIVATE_KEYS_V2 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "privateKeys",
              "type": "array",
              "required": true,
              "description": "A list of Private Keys.",
              "childFields": [
                {
                  "name": "privateKeyName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a Private Key."
                },
                {
                  "name": "curve",
                  "type": "enum",
                  "required": true,
                  "description": "curve field",
                  "enumOptions": [
                    {
                      "value": "CURVE_SECP256K1",
                      "description": "CURVE_SECP256K1 option"
                    },
                    {
                      "value": "CURVE_ED25519",
                      "description": "CURVE_ED25519 option"
                    }
                  ]
                },
                {
                  "name": "privateKeyTags",
                  "type": "array",
                  "required": true,
                  "description": "A list of Private Key Tag IDs. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "item",
                      "type": "string",
                      "required": true,
                      "description": "item field"
                    }
                  ]
                },
                {
                  "name": "addressFormats",
                  "type": "array",
                  "required": true,
                  "description": "Cryptocurrency-specific formats for a derived address (e.g., Ethereum).",
                  "childFields": [
                    {
                      "name": "item",
                      "type": "enum",
                      "required": true,
                      "description": "item field",
                      "enumOptions": [
                        {
                          "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                          "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COMPRESSED",
                          "description": "ADDRESS_FORMAT_COMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_ETHEREUM",
                          "description": "ADDRESS_FORMAT_ETHEREUM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SOLANA",
                          "description": "ADDRESS_FORMAT_SOLANA option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COSMOS",
                          "description": "ADDRESS_FORMAT_COSMOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TRON",
                          "description": "ADDRESS_FORMAT_TRON option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SUI",
                          "description": "ADDRESS_FORMAT_SUI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_APTOS",
                          "description": "ADDRESS_FORMAT_APTOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SEI",
                          "description": "ADDRESS_FORMAT_SEI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XLM",
                          "description": "ADDRESS_FORMAT_XLM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                          "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                          "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V3R2",
                          "description": "ADDRESS_FORMAT_TON_V3R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V4R2",
                          "description": "ADDRESS_FORMAT_TON_V4R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XRP",
                          "description": "ADDRESS_FORMAT_XRP option"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Read Only Session",
    "path": "/public/v1/submit/create_read_only_session",
    "method": "post",
    "description": "Create a read only session for a user (valid for 1 hour)",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_READ_ONLY_SESSION"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createReadOnlySessionIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createReadOnlySessionIntent object",
                    "childFields": []
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createReadOnlySessionResult",
                    "type": "object",
                    "required": true,
                    "description": "The createReadOnlySessionResult object",
                    "childFields": [
                      {
                        "name": "organizationId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Organization. If the request is being made by a user and their Sub-Organization ID is unknown, this can be the Parent Organization ID. However, using the Sub-Organization ID is preferred due to performance reasons."
                      },
                      {
                        "name": "organizationName",
                        "type": "string",
                        "required": true,
                        "description": "Human-readable name for an Organization."
                      },
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given User."
                      },
                      {
                        "name": "username",
                        "type": "string",
                        "required": true,
                        "description": "Human-readable name for a User."
                      },
                      {
                        "name": "session",
                        "type": "string",
                        "required": true,
                        "description": "String representing a read only session"
                      },
                      {
                        "name": "sessionExpiry",
                        "type": "string",
                        "required": true,
                        "description": "UTC timestamp in seconds representing the expiry time for the read only session."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_READ_ONLY_SESSION",
              "description": "ACTIVITY_TYPE_CREATE_READ_ONLY_SESSION option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field"
        }
      ]
    }
  },
  {
    "title": "Create Read Write Session",
    "path": "/public/v1/submit/create_read_write_session",
    "method": "post",
    "description": "Create a read write session for a user",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_READ_WRITE_SESSION"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createReadWriteSessionIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createReadWriteSessionIntent object",
                    "childFields": [
                      {
                        "name": "targetPublicKey",
                        "type": "string",
                        "required": true,
                        "description": "Client-side public key generated by the user, to which the read write session bundle (credentials) will be encrypted."
                      },
                      {
                        "name": "email",
                        "type": "string",
                        "required": true,
                        "description": "Email of the user to create a read write session for"
                      },
                      {
                        "name": "apiKeyName",
                        "type": "string",
                        "required": false,
                        "description": "Optional human-readable name for an API Key. If none provided, default to Read Write Session - <Timestamp>"
                      },
                      {
                        "name": "expirationSeconds",
                        "type": "string",
                        "required": false,
                        "description": "Expiration window (in seconds) indicating how long the API key is valid. If not provided, a default of 15 minutes will be used."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createReadWriteSessionResult",
                    "type": "object",
                    "required": true,
                    "description": "The createReadWriteSessionResult object",
                    "childFields": [
                      {
                        "name": "organizationId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Organization. If the request is being made by a user and their Sub-Organization ID is unknown, this can be the Parent Organization ID. However, using the Sub-Organization ID is preferred due to performance reasons."
                      },
                      {
                        "name": "organizationName",
                        "type": "string",
                        "required": true,
                        "description": "Human-readable name for an Organization."
                      },
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given User."
                      },
                      {
                        "name": "username",
                        "type": "string",
                        "required": true,
                        "description": "Human-readable name for a User."
                      },
                      {
                        "name": "apiKeyId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for the created API key."
                      },
                      {
                        "name": "credentialBundle",
                        "type": "string",
                        "required": true,
                        "description": "HPKE encrypted credential bundle"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_READ_WRITE_SESSION_V2",
              "description": "ACTIVITY_TYPE_CREATE_READ_WRITE_SESSION_V2 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "targetPublicKey",
              "type": "string",
              "required": true,
              "description": "Client-side public key generated by the user, to which the read write session bundle (credentials) will be encrypted."
            },
            {
              "name": "userId",
              "type": "string",
              "required": false,
              "description": "Unique identifier for a given User."
            },
            {
              "name": "apiKeyName",
              "type": "string",
              "required": false,
              "description": "Optional human-readable name for an API Key. If none provided, default to Read Write Session - <Timestamp>"
            },
            {
              "name": "expirationSeconds",
              "type": "string",
              "required": false,
              "description": "Expiration window (in seconds) indicating how long the API key is valid. If not provided, a default of 15 minutes will be used."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Read Write Session",
    "path": "/public/v1/submit/create_read_write_session",
    "method": "post",
    "description": "Create a read write session for a user",
    "version": "2",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_READ_WRITE_SESSION_V2"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createReadWriteSessionIntentV2",
                    "type": "object",
                    "required": true,
                    "description": "The createReadWriteSessionIntentV2 object",
                    "childFields": [
                      {
                        "name": "targetPublicKey",
                        "type": "string",
                        "required": true,
                        "description": "Client-side public key generated by the user, to which the read write session bundle (credentials) will be encrypted."
                      },
                      {
                        "name": "userId",
                        "type": "string",
                        "required": false,
                        "description": "Unique identifier for a given User."
                      },
                      {
                        "name": "apiKeyName",
                        "type": "string",
                        "required": false,
                        "description": "Optional human-readable name for an API Key. If none provided, default to Read Write Session - <Timestamp>"
                      },
                      {
                        "name": "expirationSeconds",
                        "type": "string",
                        "required": false,
                        "description": "Expiration window (in seconds) indicating how long the API key is valid. If not provided, a default of 15 minutes will be used."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createReadWriteSessionResultV2",
                    "type": "object",
                    "required": true,
                    "description": "The createReadWriteSessionResultV2 object",
                    "childFields": [
                      {
                        "name": "organizationId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Organization. If the request is being made by a user and their Sub-Organization ID is unknown, this can be the Parent Organization ID. However, using the Sub-Organization ID is preferred due to performance reasons."
                      },
                      {
                        "name": "organizationName",
                        "type": "string",
                        "required": true,
                        "description": "Human-readable name for an Organization."
                      },
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given User."
                      },
                      {
                        "name": "username",
                        "type": "string",
                        "required": true,
                        "description": "Human-readable name for a User."
                      },
                      {
                        "name": "apiKeyId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for the created API key."
                      },
                      {
                        "name": "credentialBundle",
                        "type": "string",
                        "required": true,
                        "description": "HPKE encrypted credential bundle"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_READ_WRITE_SESSION_V2",
              "description": "ACTIVITY_TYPE_CREATE_READ_WRITE_SESSION_V2 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "targetPublicKey",
              "type": "string",
              "required": true,
              "description": "Client-side public key generated by the user, to which the read write session bundle (credentials) will be encrypted."
            },
            {
              "name": "userId",
              "type": "string",
              "required": false,
              "description": "Unique identifier for a given User."
            },
            {
              "name": "apiKeyName",
              "type": "string",
              "required": false,
              "description": "Optional human-readable name for an API Key. If none provided, default to Read Write Session - <Timestamp>"
            },
            {
              "name": "expirationSeconds",
              "type": "string",
              "required": false,
              "description": "Expiration window (in seconds) indicating how long the API key is valid. If not provided, a default of 15 minutes will be used."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Sub-Organization",
    "path": "/public/v1/submit/create_sub_organization",
    "method": "post",
    "description": "Create a new Sub-Organization",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createSubOrganizationIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createSubOrganizationIntent object",
                    "childFields": [
                      {
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "description": "Name for this sub-organization"
                      },
                      {
                        "name": "rootAuthenticator",
                        "type": "object",
                        "required": true,
                        "description": "rootAuthenticator field",
                        "childFields": [
                          {
                            "name": "authenticatorName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for an Authenticator."
                          },
                          {
                            "name": "challenge",
                            "type": "string",
                            "required": true,
                            "description": "Challenge presented for authentication purposes."
                          },
                          {
                            "name": "attestation",
                            "type": "object",
                            "required": true,
                            "description": "attestation field",
                            "childFields": [
                              {
                                "name": "credentialId",
                                "type": "string",
                                "required": true,
                                "description": "The cbor encoded then base64 url encoded id of the credential."
                              },
                              {
                                "name": "clientDataJson",
                                "type": "string",
                                "required": true,
                                "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                              },
                              {
                                "name": "attestationObject",
                                "type": "string",
                                "required": true,
                                "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                              },
                              {
                                "name": "transports",
                                "type": "array",
                                "required": true,
                                "description": "The type of authenticator transports.",
                                "childFields": [
                                  {
                                    "name": "item",
                                    "type": "enum",
                                    "required": true,
                                    "description": "item field",
                                    "enumOptions": [
                                      {
                                        "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                        "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                      },
                                      {
                                        "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                        "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                      },
                                      {
                                        "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                        "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                      },
                                      {
                                        "value": "AUTHENTICATOR_TRANSPORT_USB",
                                        "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                      },
                                      {
                                        "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                        "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createSubOrganizationResult",
                    "type": "object",
                    "required": true,
                    "description": "The createSubOrganizationResult object",
                    "childFields": [
                      {
                        "name": "subOrganizationId",
                        "type": "string",
                        "required": true,
                        "description": "subOrganizationId field"
                      },
                      {
                        "name": "rootUserIds",
                        "type": "array",
                        "required": false,
                        "description": "rootUserIds field",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7",
              "description": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "subOrganizationName",
              "type": "string",
              "required": true,
              "description": "Name for this sub-organization"
            },
            {
              "name": "rootUsers",
              "type": "array",
              "required": true,
              "description": "Root users to create within this sub-organization",
              "childFields": [
                {
                  "name": "userName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a User."
                },
                {
                  "name": "userEmail",
                  "type": "string",
                  "required": false,
                  "description": "The user's email address."
                },
                {
                  "name": "userPhoneNumber",
                  "type": "string",
                  "required": false,
                  "description": "The user's phone number in E.164 format e.g. +13214567890"
                },
                {
                  "name": "apiKeys",
                  "type": "array",
                  "required": true,
                  "description": "A list of API Key parameters. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "apiKeyName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name for an API Key."
                    },
                    {
                      "name": "publicKey",
                      "type": "string",
                      "required": true,
                      "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                    },
                    {
                      "name": "curveType",
                      "type": "enum",
                      "required": true,
                      "description": "curveType field",
                      "enumOptions": [
                        {
                          "value": "API_KEY_CURVE_P256",
                          "description": "API_KEY_CURVE_P256 option"
                        },
                        {
                          "value": "API_KEY_CURVE_SECP256K1",
                          "description": "API_KEY_CURVE_SECP256K1 option"
                        },
                        {
                          "value": "API_KEY_CURVE_ED25519",
                          "description": "API_KEY_CURVE_ED25519 option"
                        }
                      ]
                    },
                    {
                      "name": "expirationSeconds",
                      "type": "string",
                      "required": false,
                      "description": "Optional window (in seconds) indicating how long the API Key should last."
                    }
                  ]
                },
                {
                  "name": "authenticators",
                  "type": "array",
                  "required": true,
                  "description": "A list of Authenticator parameters. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "authenticatorName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name for an Authenticator."
                    },
                    {
                      "name": "challenge",
                      "type": "string",
                      "required": true,
                      "description": "Challenge presented for authentication purposes."
                    },
                    {
                      "name": "attestation",
                      "type": "object",
                      "required": true,
                      "description": "attestation field",
                      "childFields": [
                        {
                          "name": "credentialId",
                          "type": "string",
                          "required": true,
                          "description": "The cbor encoded then base64 url encoded id of the credential."
                        },
                        {
                          "name": "clientDataJson",
                          "type": "string",
                          "required": true,
                          "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                        },
                        {
                          "name": "attestationObject",
                          "type": "string",
                          "required": true,
                          "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                        },
                        {
                          "name": "transports",
                          "type": "array",
                          "required": true,
                          "description": "The type of authenticator transports.",
                          "childFields": [
                            {
                              "name": "item",
                              "type": "enum",
                              "required": true,
                              "description": "item field",
                              "enumOptions": [
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                  "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                  "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                  "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_USB",
                                  "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                  "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "oauthProviders",
                  "type": "array",
                  "required": true,
                  "description": "A list of Oauth providers. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "providerName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name to identify a Provider."
                    },
                    {
                      "name": "oidcToken",
                      "type": "string",
                      "required": true,
                      "description": "Base64 encoded OIDC token"
                    }
                  ]
                }
              ]
            },
            {
              "name": "rootQuorumThreshold",
              "type": "number",
              "required": true,
              "description": "The threshold of unique approvals to reach root quorum. This value must be less than or equal to the number of root users"
            },
            {
              "name": "wallet",
              "type": "object",
              "required": false,
              "description": "wallet field",
              "childFields": [
                {
                  "name": "walletName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a Wallet."
                },
                {
                  "name": "accounts",
                  "type": "array",
                  "required": true,
                  "description": "A list of wallet Accounts. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "curve",
                      "type": "enum",
                      "required": true,
                      "description": "curve field",
                      "enumOptions": [
                        {
                          "value": "CURVE_SECP256K1",
                          "description": "CURVE_SECP256K1 option"
                        },
                        {
                          "value": "CURVE_ED25519",
                          "description": "CURVE_ED25519 option"
                        }
                      ]
                    },
                    {
                      "name": "pathFormat",
                      "type": "enum",
                      "required": true,
                      "description": "pathFormat field",
                      "enumOptions": [
                        {
                          "value": "PATH_FORMAT_BIP32",
                          "description": "PATH_FORMAT_BIP32 option"
                        }
                      ]
                    },
                    {
                      "name": "path",
                      "type": "string",
                      "required": true,
                      "description": "Path used to generate a wallet Account."
                    },
                    {
                      "name": "addressFormat",
                      "type": "enum",
                      "required": true,
                      "description": "addressFormat field",
                      "enumOptions": [
                        {
                          "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                          "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COMPRESSED",
                          "description": "ADDRESS_FORMAT_COMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_ETHEREUM",
                          "description": "ADDRESS_FORMAT_ETHEREUM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SOLANA",
                          "description": "ADDRESS_FORMAT_SOLANA option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COSMOS",
                          "description": "ADDRESS_FORMAT_COSMOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TRON",
                          "description": "ADDRESS_FORMAT_TRON option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SUI",
                          "description": "ADDRESS_FORMAT_SUI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_APTOS",
                          "description": "ADDRESS_FORMAT_APTOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SEI",
                          "description": "ADDRESS_FORMAT_SEI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XLM",
                          "description": "ADDRESS_FORMAT_XLM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                          "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                          "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V3R2",
                          "description": "ADDRESS_FORMAT_TON_V3R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V4R2",
                          "description": "ADDRESS_FORMAT_TON_V4R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XRP",
                          "description": "ADDRESS_FORMAT_XRP option"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "mnemonicLength",
                  "type": "number",
                  "required": false,
                  "description": "Length of mnemonic to generate the Wallet seed. Defaults to 12. Accepted values: 12, 15, 18, 21, 24."
                }
              ]
            },
            {
              "name": "disableEmailRecovery",
              "type": "boolean",
              "required": false,
              "description": "Disable email recovery for the sub-organization"
            },
            {
              "name": "disableEmailAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable email auth for the sub-organization"
            },
            {
              "name": "disableSmsAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable OTP SMS auth for the sub-organization"
            },
            {
              "name": "disableOtpEmailAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable OTP email auth for the sub-organization"
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Sub-Organization",
    "path": "/public/v1/submit/create_sub_organization",
    "method": "post",
    "description": "Create a new Sub-Organization",
    "version": "3",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V3"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createSubOrganizationIntentV3",
                    "type": "object",
                    "required": true,
                    "description": "The createSubOrganizationIntentV3 object",
                    "childFields": [
                      {
                        "name": "subOrganizationName",
                        "type": "string",
                        "required": true,
                        "description": "Name for this sub-organization"
                      },
                      {
                        "name": "rootUsers",
                        "type": "array",
                        "required": true,
                        "description": "Root users to create within this sub-organization",
                        "childFields": [
                          {
                            "name": "userName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for a User."
                          },
                          {
                            "name": "userEmail",
                            "type": "string",
                            "required": false,
                            "description": "The user's email address."
                          },
                          {
                            "name": "apiKeys",
                            "type": "array",
                            "required": true,
                            "description": "A list of API Key parameters. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "apiKeyName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name for an API Key."
                              },
                              {
                                "name": "publicKey",
                                "type": "string",
                                "required": true,
                                "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                              },
                              {
                                "name": "expirationSeconds",
                                "type": "string",
                                "required": false,
                                "description": "Optional window (in seconds) indicating how long the API Key should last."
                              }
                            ]
                          },
                          {
                            "name": "authenticators",
                            "type": "array",
                            "required": true,
                            "description": "A list of Authenticator parameters. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "authenticatorName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name for an Authenticator."
                              },
                              {
                                "name": "challenge",
                                "type": "string",
                                "required": true,
                                "description": "Challenge presented for authentication purposes."
                              },
                              {
                                "name": "attestation",
                                "type": "object",
                                "required": true,
                                "description": "attestation field",
                                "childFields": [
                                  {
                                    "name": "credentialId",
                                    "type": "string",
                                    "required": true,
                                    "description": "The cbor encoded then base64 url encoded id of the credential."
                                  },
                                  {
                                    "name": "clientDataJson",
                                    "type": "string",
                                    "required": true,
                                    "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                                  },
                                  {
                                    "name": "attestationObject",
                                    "type": "string",
                                    "required": true,
                                    "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                                  },
                                  {
                                    "name": "transports",
                                    "type": "array",
                                    "required": true,
                                    "description": "The type of authenticator transports.",
                                    "childFields": [
                                      {
                                        "name": "item",
                                        "type": "enum",
                                        "required": true,
                                        "description": "item field",
                                        "enumOptions": [
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                            "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                            "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                            "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_USB",
                                            "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                            "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "rootQuorumThreshold",
                        "type": "number",
                        "required": true,
                        "description": "The threshold of unique approvals to reach root quorum. This value must be less than or equal to the number of root users"
                      },
                      {
                        "name": "privateKeys",
                        "type": "array",
                        "required": true,
                        "description": "A list of Private Keys.",
                        "childFields": [
                          {
                            "name": "privateKeyName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for a Private Key."
                          },
                          {
                            "name": "curve",
                            "type": "enum",
                            "required": true,
                            "description": "curve field",
                            "enumOptions": [
                              {
                                "value": "CURVE_SECP256K1",
                                "description": "CURVE_SECP256K1 option"
                              },
                              {
                                "value": "CURVE_ED25519",
                                "description": "CURVE_ED25519 option"
                              }
                            ]
                          },
                          {
                            "name": "privateKeyTags",
                            "type": "array",
                            "required": true,
                            "description": "A list of Private Key Tag IDs. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "item",
                                "type": "string",
                                "required": true,
                                "description": "item field"
                              }
                            ]
                          },
                          {
                            "name": "addressFormats",
                            "type": "array",
                            "required": true,
                            "description": "Cryptocurrency-specific formats for a derived address (e.g., Ethereum).",
                            "childFields": [
                              {
                                "name": "item",
                                "type": "enum",
                                "required": true,
                                "description": "item field",
                                "enumOptions": [
                                  {
                                    "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                                    "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COMPRESSED",
                                    "description": "ADDRESS_FORMAT_COMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_ETHEREUM",
                                    "description": "ADDRESS_FORMAT_ETHEREUM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SOLANA",
                                    "description": "ADDRESS_FORMAT_SOLANA option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COSMOS",
                                    "description": "ADDRESS_FORMAT_COSMOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TRON",
                                    "description": "ADDRESS_FORMAT_TRON option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SUI",
                                    "description": "ADDRESS_FORMAT_SUI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_APTOS",
                                    "description": "ADDRESS_FORMAT_APTOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SEI",
                                    "description": "ADDRESS_FORMAT_SEI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XLM",
                                    "description": "ADDRESS_FORMAT_XLM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                                    "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                                    "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V3R2",
                                    "description": "ADDRESS_FORMAT_TON_V3R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V4R2",
                                    "description": "ADDRESS_FORMAT_TON_V4R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XRP",
                                    "description": "ADDRESS_FORMAT_XRP option"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createSubOrganizationResultV3",
                    "type": "object",
                    "required": true,
                    "description": "The createSubOrganizationResultV3 object",
                    "childFields": [
                      {
                        "name": "subOrganizationId",
                        "type": "string",
                        "required": true,
                        "description": "subOrganizationId field"
                      },
                      {
                        "name": "privateKeys",
                        "type": "array",
                        "required": true,
                        "description": "A list of Private Key IDs and addresses.",
                        "childFields": [
                          {
                            "name": "privateKeyId",
                            "type": "string",
                            "required": false,
                            "description": "privateKeyId field"
                          },
                          {
                            "name": "addresses",
                            "type": "array",
                            "required": false,
                            "description": "addresses field",
                            "childFields": [
                              {
                                "name": "format",
                                "type": "enum",
                                "required": false,
                                "description": "format field",
                                "enumOptions": [
                                  {
                                    "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                                    "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COMPRESSED",
                                    "description": "ADDRESS_FORMAT_COMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_ETHEREUM",
                                    "description": "ADDRESS_FORMAT_ETHEREUM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SOLANA",
                                    "description": "ADDRESS_FORMAT_SOLANA option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COSMOS",
                                    "description": "ADDRESS_FORMAT_COSMOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TRON",
                                    "description": "ADDRESS_FORMAT_TRON option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SUI",
                                    "description": "ADDRESS_FORMAT_SUI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_APTOS",
                                    "description": "ADDRESS_FORMAT_APTOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SEI",
                                    "description": "ADDRESS_FORMAT_SEI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XLM",
                                    "description": "ADDRESS_FORMAT_XLM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                                    "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                                    "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V3R2",
                                    "description": "ADDRESS_FORMAT_TON_V3R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V4R2",
                                    "description": "ADDRESS_FORMAT_TON_V4R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XRP",
                                    "description": "ADDRESS_FORMAT_XRP option"
                                  }
                                ]
                              },
                              {
                                "name": "address",
                                "type": "string",
                                "required": false,
                                "description": "address field"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "rootUserIds",
                        "type": "array",
                        "required": false,
                        "description": "rootUserIds field",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7",
              "description": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "subOrganizationName",
              "type": "string",
              "required": true,
              "description": "Name for this sub-organization"
            },
            {
              "name": "rootUsers",
              "type": "array",
              "required": true,
              "description": "Root users to create within this sub-organization",
              "childFields": [
                {
                  "name": "userName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a User."
                },
                {
                  "name": "userEmail",
                  "type": "string",
                  "required": false,
                  "description": "The user's email address."
                },
                {
                  "name": "userPhoneNumber",
                  "type": "string",
                  "required": false,
                  "description": "The user's phone number in E.164 format e.g. +13214567890"
                },
                {
                  "name": "apiKeys",
                  "type": "array",
                  "required": true,
                  "description": "A list of API Key parameters. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "apiKeyName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name for an API Key."
                    },
                    {
                      "name": "publicKey",
                      "type": "string",
                      "required": true,
                      "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                    },
                    {
                      "name": "curveType",
                      "type": "enum",
                      "required": true,
                      "description": "curveType field",
                      "enumOptions": [
                        {
                          "value": "API_KEY_CURVE_P256",
                          "description": "API_KEY_CURVE_P256 option"
                        },
                        {
                          "value": "API_KEY_CURVE_SECP256K1",
                          "description": "API_KEY_CURVE_SECP256K1 option"
                        },
                        {
                          "value": "API_KEY_CURVE_ED25519",
                          "description": "API_KEY_CURVE_ED25519 option"
                        }
                      ]
                    },
                    {
                      "name": "expirationSeconds",
                      "type": "string",
                      "required": false,
                      "description": "Optional window (in seconds) indicating how long the API Key should last."
                    }
                  ]
                },
                {
                  "name": "authenticators",
                  "type": "array",
                  "required": true,
                  "description": "A list of Authenticator parameters. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "authenticatorName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name for an Authenticator."
                    },
                    {
                      "name": "challenge",
                      "type": "string",
                      "required": true,
                      "description": "Challenge presented for authentication purposes."
                    },
                    {
                      "name": "attestation",
                      "type": "object",
                      "required": true,
                      "description": "attestation field",
                      "childFields": [
                        {
                          "name": "credentialId",
                          "type": "string",
                          "required": true,
                          "description": "The cbor encoded then base64 url encoded id of the credential."
                        },
                        {
                          "name": "clientDataJson",
                          "type": "string",
                          "required": true,
                          "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                        },
                        {
                          "name": "attestationObject",
                          "type": "string",
                          "required": true,
                          "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                        },
                        {
                          "name": "transports",
                          "type": "array",
                          "required": true,
                          "description": "The type of authenticator transports.",
                          "childFields": [
                            {
                              "name": "item",
                              "type": "enum",
                              "required": true,
                              "description": "item field",
                              "enumOptions": [
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                  "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                  "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                  "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_USB",
                                  "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                  "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "oauthProviders",
                  "type": "array",
                  "required": true,
                  "description": "A list of Oauth providers. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "providerName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name to identify a Provider."
                    },
                    {
                      "name": "oidcToken",
                      "type": "string",
                      "required": true,
                      "description": "Base64 encoded OIDC token"
                    }
                  ]
                }
              ]
            },
            {
              "name": "rootQuorumThreshold",
              "type": "number",
              "required": true,
              "description": "The threshold of unique approvals to reach root quorum. This value must be less than or equal to the number of root users"
            },
            {
              "name": "wallet",
              "type": "object",
              "required": false,
              "description": "wallet field",
              "childFields": [
                {
                  "name": "walletName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a Wallet."
                },
                {
                  "name": "accounts",
                  "type": "array",
                  "required": true,
                  "description": "A list of wallet Accounts. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "curve",
                      "type": "enum",
                      "required": true,
                      "description": "curve field",
                      "enumOptions": [
                        {
                          "value": "CURVE_SECP256K1",
                          "description": "CURVE_SECP256K1 option"
                        },
                        {
                          "value": "CURVE_ED25519",
                          "description": "CURVE_ED25519 option"
                        }
                      ]
                    },
                    {
                      "name": "pathFormat",
                      "type": "enum",
                      "required": true,
                      "description": "pathFormat field",
                      "enumOptions": [
                        {
                          "value": "PATH_FORMAT_BIP32",
                          "description": "PATH_FORMAT_BIP32 option"
                        }
                      ]
                    },
                    {
                      "name": "path",
                      "type": "string",
                      "required": true,
                      "description": "Path used to generate a wallet Account."
                    },
                    {
                      "name": "addressFormat",
                      "type": "enum",
                      "required": true,
                      "description": "addressFormat field",
                      "enumOptions": [
                        {
                          "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                          "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COMPRESSED",
                          "description": "ADDRESS_FORMAT_COMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_ETHEREUM",
                          "description": "ADDRESS_FORMAT_ETHEREUM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SOLANA",
                          "description": "ADDRESS_FORMAT_SOLANA option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COSMOS",
                          "description": "ADDRESS_FORMAT_COSMOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TRON",
                          "description": "ADDRESS_FORMAT_TRON option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SUI",
                          "description": "ADDRESS_FORMAT_SUI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_APTOS",
                          "description": "ADDRESS_FORMAT_APTOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SEI",
                          "description": "ADDRESS_FORMAT_SEI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XLM",
                          "description": "ADDRESS_FORMAT_XLM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                          "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                          "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V3R2",
                          "description": "ADDRESS_FORMAT_TON_V3R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V4R2",
                          "description": "ADDRESS_FORMAT_TON_V4R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XRP",
                          "description": "ADDRESS_FORMAT_XRP option"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "mnemonicLength",
                  "type": "number",
                  "required": false,
                  "description": "Length of mnemonic to generate the Wallet seed. Defaults to 12. Accepted values: 12, 15, 18, 21, 24."
                }
              ]
            },
            {
              "name": "disableEmailRecovery",
              "type": "boolean",
              "required": false,
              "description": "Disable email recovery for the sub-organization"
            },
            {
              "name": "disableEmailAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable email auth for the sub-organization"
            },
            {
              "name": "disableSmsAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable OTP SMS auth for the sub-organization"
            },
            {
              "name": "disableOtpEmailAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable OTP email auth for the sub-organization"
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Sub-Organization",
    "path": "/public/v1/submit/create_sub_organization",
    "method": "post",
    "description": "Create a new Sub-Organization",
    "version": "4",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V4"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createSubOrganizationIntentV4",
                    "type": "object",
                    "required": true,
                    "description": "The createSubOrganizationIntentV4 object",
                    "childFields": [
                      {
                        "name": "subOrganizationName",
                        "type": "string",
                        "required": true,
                        "description": "Name for this sub-organization"
                      },
                      {
                        "name": "rootUsers",
                        "type": "array",
                        "required": true,
                        "description": "Root users to create within this sub-organization",
                        "childFields": [
                          {
                            "name": "userName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for a User."
                          },
                          {
                            "name": "userEmail",
                            "type": "string",
                            "required": false,
                            "description": "The user's email address."
                          },
                          {
                            "name": "apiKeys",
                            "type": "array",
                            "required": true,
                            "description": "A list of API Key parameters. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "apiKeyName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name for an API Key."
                              },
                              {
                                "name": "publicKey",
                                "type": "string",
                                "required": true,
                                "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                              },
                              {
                                "name": "expirationSeconds",
                                "type": "string",
                                "required": false,
                                "description": "Optional window (in seconds) indicating how long the API Key should last."
                              }
                            ]
                          },
                          {
                            "name": "authenticators",
                            "type": "array",
                            "required": true,
                            "description": "A list of Authenticator parameters. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "authenticatorName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name for an Authenticator."
                              },
                              {
                                "name": "challenge",
                                "type": "string",
                                "required": true,
                                "description": "Challenge presented for authentication purposes."
                              },
                              {
                                "name": "attestation",
                                "type": "object",
                                "required": true,
                                "description": "attestation field",
                                "childFields": [
                                  {
                                    "name": "credentialId",
                                    "type": "string",
                                    "required": true,
                                    "description": "The cbor encoded then base64 url encoded id of the credential."
                                  },
                                  {
                                    "name": "clientDataJson",
                                    "type": "string",
                                    "required": true,
                                    "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                                  },
                                  {
                                    "name": "attestationObject",
                                    "type": "string",
                                    "required": true,
                                    "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                                  },
                                  {
                                    "name": "transports",
                                    "type": "array",
                                    "required": true,
                                    "description": "The type of authenticator transports.",
                                    "childFields": [
                                      {
                                        "name": "item",
                                        "type": "enum",
                                        "required": true,
                                        "description": "item field",
                                        "enumOptions": [
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                            "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                            "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                            "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_USB",
                                            "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                            "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "rootQuorumThreshold",
                        "type": "number",
                        "required": true,
                        "description": "The threshold of unique approvals to reach root quorum. This value must be less than or equal to the number of root users"
                      },
                      {
                        "name": "wallet",
                        "type": "object",
                        "required": false,
                        "description": "wallet field",
                        "childFields": [
                          {
                            "name": "walletName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for a Wallet."
                          },
                          {
                            "name": "accounts",
                            "type": "array",
                            "required": true,
                            "description": "A list of wallet Accounts. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "curve",
                                "type": "enum",
                                "required": true,
                                "description": "curve field",
                                "enumOptions": [
                                  {
                                    "value": "CURVE_SECP256K1",
                                    "description": "CURVE_SECP256K1 option"
                                  },
                                  {
                                    "value": "CURVE_ED25519",
                                    "description": "CURVE_ED25519 option"
                                  }
                                ]
                              },
                              {
                                "name": "pathFormat",
                                "type": "enum",
                                "required": true,
                                "description": "pathFormat field",
                                "enumOptions": [
                                  {
                                    "value": "PATH_FORMAT_BIP32",
                                    "description": "PATH_FORMAT_BIP32 option"
                                  }
                                ]
                              },
                              {
                                "name": "path",
                                "type": "string",
                                "required": true,
                                "description": "Path used to generate a wallet Account."
                              },
                              {
                                "name": "addressFormat",
                                "type": "enum",
                                "required": true,
                                "description": "addressFormat field",
                                "enumOptions": [
                                  {
                                    "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                                    "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COMPRESSED",
                                    "description": "ADDRESS_FORMAT_COMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_ETHEREUM",
                                    "description": "ADDRESS_FORMAT_ETHEREUM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SOLANA",
                                    "description": "ADDRESS_FORMAT_SOLANA option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COSMOS",
                                    "description": "ADDRESS_FORMAT_COSMOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TRON",
                                    "description": "ADDRESS_FORMAT_TRON option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SUI",
                                    "description": "ADDRESS_FORMAT_SUI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_APTOS",
                                    "description": "ADDRESS_FORMAT_APTOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SEI",
                                    "description": "ADDRESS_FORMAT_SEI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XLM",
                                    "description": "ADDRESS_FORMAT_XLM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                                    "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                                    "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V3R2",
                                    "description": "ADDRESS_FORMAT_TON_V3R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V4R2",
                                    "description": "ADDRESS_FORMAT_TON_V4R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XRP",
                                    "description": "ADDRESS_FORMAT_XRP option"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "name": "mnemonicLength",
                            "type": "number",
                            "required": false,
                            "description": "Length of mnemonic to generate the Wallet seed. Defaults to 12. Accepted values: 12, 15, 18, 21, 24."
                          }
                        ]
                      },
                      {
                        "name": "disableEmailRecovery",
                        "type": "boolean",
                        "required": false,
                        "description": "Disable email recovery for the sub-organization"
                      },
                      {
                        "name": "disableEmailAuth",
                        "type": "boolean",
                        "required": false,
                        "description": "Disable email auth for the sub-organization"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createSubOrganizationResultV4",
                    "type": "object",
                    "required": true,
                    "description": "The createSubOrganizationResultV4 object",
                    "childFields": [
                      {
                        "name": "subOrganizationId",
                        "type": "string",
                        "required": true,
                        "description": "subOrganizationId field"
                      },
                      {
                        "name": "wallet",
                        "type": "object",
                        "required": false,
                        "description": "wallet field",
                        "childFields": [
                          {
                            "name": "walletId",
                            "type": "string",
                            "required": true,
                            "description": "walletId field"
                          },
                          {
                            "name": "addresses",
                            "type": "array",
                            "required": true,
                            "description": "A list of account addresses.",
                            "childFields": [
                              {
                                "name": "item",
                                "type": "string",
                                "required": true,
                                "description": "item field"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "rootUserIds",
                        "type": "array",
                        "required": false,
                        "description": "rootUserIds field",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7",
              "description": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "subOrganizationName",
              "type": "string",
              "required": true,
              "description": "Name for this sub-organization"
            },
            {
              "name": "rootUsers",
              "type": "array",
              "required": true,
              "description": "Root users to create within this sub-organization",
              "childFields": [
                {
                  "name": "userName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a User."
                },
                {
                  "name": "userEmail",
                  "type": "string",
                  "required": false,
                  "description": "The user's email address."
                },
                {
                  "name": "userPhoneNumber",
                  "type": "string",
                  "required": false,
                  "description": "The user's phone number in E.164 format e.g. +13214567890"
                },
                {
                  "name": "apiKeys",
                  "type": "array",
                  "required": true,
                  "description": "A list of API Key parameters. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "apiKeyName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name for an API Key."
                    },
                    {
                      "name": "publicKey",
                      "type": "string",
                      "required": true,
                      "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                    },
                    {
                      "name": "curveType",
                      "type": "enum",
                      "required": true,
                      "description": "curveType field",
                      "enumOptions": [
                        {
                          "value": "API_KEY_CURVE_P256",
                          "description": "API_KEY_CURVE_P256 option"
                        },
                        {
                          "value": "API_KEY_CURVE_SECP256K1",
                          "description": "API_KEY_CURVE_SECP256K1 option"
                        },
                        {
                          "value": "API_KEY_CURVE_ED25519",
                          "description": "API_KEY_CURVE_ED25519 option"
                        }
                      ]
                    },
                    {
                      "name": "expirationSeconds",
                      "type": "string",
                      "required": false,
                      "description": "Optional window (in seconds) indicating how long the API Key should last."
                    }
                  ]
                },
                {
                  "name": "authenticators",
                  "type": "array",
                  "required": true,
                  "description": "A list of Authenticator parameters. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "authenticatorName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name for an Authenticator."
                    },
                    {
                      "name": "challenge",
                      "type": "string",
                      "required": true,
                      "description": "Challenge presented for authentication purposes."
                    },
                    {
                      "name": "attestation",
                      "type": "object",
                      "required": true,
                      "description": "attestation field",
                      "childFields": [
                        {
                          "name": "credentialId",
                          "type": "string",
                          "required": true,
                          "description": "The cbor encoded then base64 url encoded id of the credential."
                        },
                        {
                          "name": "clientDataJson",
                          "type": "string",
                          "required": true,
                          "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                        },
                        {
                          "name": "attestationObject",
                          "type": "string",
                          "required": true,
                          "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                        },
                        {
                          "name": "transports",
                          "type": "array",
                          "required": true,
                          "description": "The type of authenticator transports.",
                          "childFields": [
                            {
                              "name": "item",
                              "type": "enum",
                              "required": true,
                              "description": "item field",
                              "enumOptions": [
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                  "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                  "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                  "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_USB",
                                  "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                  "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "oauthProviders",
                  "type": "array",
                  "required": true,
                  "description": "A list of Oauth providers. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "providerName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name to identify a Provider."
                    },
                    {
                      "name": "oidcToken",
                      "type": "string",
                      "required": true,
                      "description": "Base64 encoded OIDC token"
                    }
                  ]
                }
              ]
            },
            {
              "name": "rootQuorumThreshold",
              "type": "number",
              "required": true,
              "description": "The threshold of unique approvals to reach root quorum. This value must be less than or equal to the number of root users"
            },
            {
              "name": "wallet",
              "type": "object",
              "required": false,
              "description": "wallet field",
              "childFields": [
                {
                  "name": "walletName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a Wallet."
                },
                {
                  "name": "accounts",
                  "type": "array",
                  "required": true,
                  "description": "A list of wallet Accounts. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "curve",
                      "type": "enum",
                      "required": true,
                      "description": "curve field",
                      "enumOptions": [
                        {
                          "value": "CURVE_SECP256K1",
                          "description": "CURVE_SECP256K1 option"
                        },
                        {
                          "value": "CURVE_ED25519",
                          "description": "CURVE_ED25519 option"
                        }
                      ]
                    },
                    {
                      "name": "pathFormat",
                      "type": "enum",
                      "required": true,
                      "description": "pathFormat field",
                      "enumOptions": [
                        {
                          "value": "PATH_FORMAT_BIP32",
                          "description": "PATH_FORMAT_BIP32 option"
                        }
                      ]
                    },
                    {
                      "name": "path",
                      "type": "string",
                      "required": true,
                      "description": "Path used to generate a wallet Account."
                    },
                    {
                      "name": "addressFormat",
                      "type": "enum",
                      "required": true,
                      "description": "addressFormat field",
                      "enumOptions": [
                        {
                          "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                          "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COMPRESSED",
                          "description": "ADDRESS_FORMAT_COMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_ETHEREUM",
                          "description": "ADDRESS_FORMAT_ETHEREUM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SOLANA",
                          "description": "ADDRESS_FORMAT_SOLANA option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COSMOS",
                          "description": "ADDRESS_FORMAT_COSMOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TRON",
                          "description": "ADDRESS_FORMAT_TRON option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SUI",
                          "description": "ADDRESS_FORMAT_SUI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_APTOS",
                          "description": "ADDRESS_FORMAT_APTOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SEI",
                          "description": "ADDRESS_FORMAT_SEI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XLM",
                          "description": "ADDRESS_FORMAT_XLM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                          "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                          "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V3R2",
                          "description": "ADDRESS_FORMAT_TON_V3R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V4R2",
                          "description": "ADDRESS_FORMAT_TON_V4R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XRP",
                          "description": "ADDRESS_FORMAT_XRP option"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "mnemonicLength",
                  "type": "number",
                  "required": false,
                  "description": "Length of mnemonic to generate the Wallet seed. Defaults to 12. Accepted values: 12, 15, 18, 21, 24."
                }
              ]
            },
            {
              "name": "disableEmailRecovery",
              "type": "boolean",
              "required": false,
              "description": "Disable email recovery for the sub-organization"
            },
            {
              "name": "disableEmailAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable email auth for the sub-organization"
            },
            {
              "name": "disableSmsAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable OTP SMS auth for the sub-organization"
            },
            {
              "name": "disableOtpEmailAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable OTP email auth for the sub-organization"
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Sub-Organization",
    "path": "/public/v1/submit/create_sub_organization",
    "method": "post",
    "description": "Create a new Sub-Organization",
    "version": "5",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V5"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createSubOrganizationIntentV5",
                    "type": "object",
                    "required": true,
                    "description": "The createSubOrganizationIntentV5 object",
                    "childFields": [
                      {
                        "name": "subOrganizationName",
                        "type": "string",
                        "required": true,
                        "description": "Name for this sub-organization"
                      },
                      {
                        "name": "rootUsers",
                        "type": "array",
                        "required": true,
                        "description": "Root users to create within this sub-organization",
                        "childFields": [
                          {
                            "name": "userName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for a User."
                          },
                          {
                            "name": "userEmail",
                            "type": "string",
                            "required": false,
                            "description": "The user's email address."
                          },
                          {
                            "name": "apiKeys",
                            "type": "array",
                            "required": true,
                            "description": "A list of API Key parameters. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "apiKeyName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name for an API Key."
                              },
                              {
                                "name": "publicKey",
                                "type": "string",
                                "required": true,
                                "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                              },
                              {
                                "name": "expirationSeconds",
                                "type": "string",
                                "required": false,
                                "description": "Optional window (in seconds) indicating how long the API Key should last."
                              }
                            ]
                          },
                          {
                            "name": "authenticators",
                            "type": "array",
                            "required": true,
                            "description": "A list of Authenticator parameters. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "authenticatorName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name for an Authenticator."
                              },
                              {
                                "name": "challenge",
                                "type": "string",
                                "required": true,
                                "description": "Challenge presented for authentication purposes."
                              },
                              {
                                "name": "attestation",
                                "type": "object",
                                "required": true,
                                "description": "attestation field",
                                "childFields": [
                                  {
                                    "name": "credentialId",
                                    "type": "string",
                                    "required": true,
                                    "description": "The cbor encoded then base64 url encoded id of the credential."
                                  },
                                  {
                                    "name": "clientDataJson",
                                    "type": "string",
                                    "required": true,
                                    "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                                  },
                                  {
                                    "name": "attestationObject",
                                    "type": "string",
                                    "required": true,
                                    "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                                  },
                                  {
                                    "name": "transports",
                                    "type": "array",
                                    "required": true,
                                    "description": "The type of authenticator transports.",
                                    "childFields": [
                                      {
                                        "name": "item",
                                        "type": "enum",
                                        "required": true,
                                        "description": "item field",
                                        "enumOptions": [
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                            "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                            "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                            "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_USB",
                                            "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                            "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "name": "oauthProviders",
                            "type": "array",
                            "required": true,
                            "description": "A list of Oauth providers. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "providerName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name to identify a Provider."
                              },
                              {
                                "name": "oidcToken",
                                "type": "string",
                                "required": true,
                                "description": "Base64 encoded OIDC token"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "rootQuorumThreshold",
                        "type": "number",
                        "required": true,
                        "description": "The threshold of unique approvals to reach root quorum. This value must be less than or equal to the number of root users"
                      },
                      {
                        "name": "wallet",
                        "type": "object",
                        "required": false,
                        "description": "wallet field",
                        "childFields": [
                          {
                            "name": "walletName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for a Wallet."
                          },
                          {
                            "name": "accounts",
                            "type": "array",
                            "required": true,
                            "description": "A list of wallet Accounts. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "curve",
                                "type": "enum",
                                "required": true,
                                "description": "curve field",
                                "enumOptions": [
                                  {
                                    "value": "CURVE_SECP256K1",
                                    "description": "CURVE_SECP256K1 option"
                                  },
                                  {
                                    "value": "CURVE_ED25519",
                                    "description": "CURVE_ED25519 option"
                                  }
                                ]
                              },
                              {
                                "name": "pathFormat",
                                "type": "enum",
                                "required": true,
                                "description": "pathFormat field",
                                "enumOptions": [
                                  {
                                    "value": "PATH_FORMAT_BIP32",
                                    "description": "PATH_FORMAT_BIP32 option"
                                  }
                                ]
                              },
                              {
                                "name": "path",
                                "type": "string",
                                "required": true,
                                "description": "Path used to generate a wallet Account."
                              },
                              {
                                "name": "addressFormat",
                                "type": "enum",
                                "required": true,
                                "description": "addressFormat field",
                                "enumOptions": [
                                  {
                                    "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                                    "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COMPRESSED",
                                    "description": "ADDRESS_FORMAT_COMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_ETHEREUM",
                                    "description": "ADDRESS_FORMAT_ETHEREUM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SOLANA",
                                    "description": "ADDRESS_FORMAT_SOLANA option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COSMOS",
                                    "description": "ADDRESS_FORMAT_COSMOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TRON",
                                    "description": "ADDRESS_FORMAT_TRON option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SUI",
                                    "description": "ADDRESS_FORMAT_SUI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_APTOS",
                                    "description": "ADDRESS_FORMAT_APTOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SEI",
                                    "description": "ADDRESS_FORMAT_SEI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XLM",
                                    "description": "ADDRESS_FORMAT_XLM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                                    "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                                    "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V3R2",
                                    "description": "ADDRESS_FORMAT_TON_V3R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V4R2",
                                    "description": "ADDRESS_FORMAT_TON_V4R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XRP",
                                    "description": "ADDRESS_FORMAT_XRP option"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "name": "mnemonicLength",
                            "type": "number",
                            "required": false,
                            "description": "Length of mnemonic to generate the Wallet seed. Defaults to 12. Accepted values: 12, 15, 18, 21, 24."
                          }
                        ]
                      },
                      {
                        "name": "disableEmailRecovery",
                        "type": "boolean",
                        "required": false,
                        "description": "Disable email recovery for the sub-organization"
                      },
                      {
                        "name": "disableEmailAuth",
                        "type": "boolean",
                        "required": false,
                        "description": "Disable email auth for the sub-organization"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createSubOrganizationResultV5",
                    "type": "object",
                    "required": true,
                    "description": "The createSubOrganizationResultV5 object",
                    "childFields": [
                      {
                        "name": "subOrganizationId",
                        "type": "string",
                        "required": true,
                        "description": "subOrganizationId field"
                      },
                      {
                        "name": "wallet",
                        "type": "object",
                        "required": false,
                        "description": "wallet field",
                        "childFields": [
                          {
                            "name": "walletId",
                            "type": "string",
                            "required": true,
                            "description": "walletId field"
                          },
                          {
                            "name": "addresses",
                            "type": "array",
                            "required": true,
                            "description": "A list of account addresses.",
                            "childFields": [
                              {
                                "name": "item",
                                "type": "string",
                                "required": true,
                                "description": "item field"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "rootUserIds",
                        "type": "array",
                        "required": false,
                        "description": "rootUserIds field",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7",
              "description": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "subOrganizationName",
              "type": "string",
              "required": true,
              "description": "Name for this sub-organization"
            },
            {
              "name": "rootUsers",
              "type": "array",
              "required": true,
              "description": "Root users to create within this sub-organization",
              "childFields": [
                {
                  "name": "userName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a User."
                },
                {
                  "name": "userEmail",
                  "type": "string",
                  "required": false,
                  "description": "The user's email address."
                },
                {
                  "name": "userPhoneNumber",
                  "type": "string",
                  "required": false,
                  "description": "The user's phone number in E.164 format e.g. +13214567890"
                },
                {
                  "name": "apiKeys",
                  "type": "array",
                  "required": true,
                  "description": "A list of API Key parameters. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "apiKeyName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name for an API Key."
                    },
                    {
                      "name": "publicKey",
                      "type": "string",
                      "required": true,
                      "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                    },
                    {
                      "name": "curveType",
                      "type": "enum",
                      "required": true,
                      "description": "curveType field",
                      "enumOptions": [
                        {
                          "value": "API_KEY_CURVE_P256",
                          "description": "API_KEY_CURVE_P256 option"
                        },
                        {
                          "value": "API_KEY_CURVE_SECP256K1",
                          "description": "API_KEY_CURVE_SECP256K1 option"
                        },
                        {
                          "value": "API_KEY_CURVE_ED25519",
                          "description": "API_KEY_CURVE_ED25519 option"
                        }
                      ]
                    },
                    {
                      "name": "expirationSeconds",
                      "type": "string",
                      "required": false,
                      "description": "Optional window (in seconds) indicating how long the API Key should last."
                    }
                  ]
                },
                {
                  "name": "authenticators",
                  "type": "array",
                  "required": true,
                  "description": "A list of Authenticator parameters. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "authenticatorName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name for an Authenticator."
                    },
                    {
                      "name": "challenge",
                      "type": "string",
                      "required": true,
                      "description": "Challenge presented for authentication purposes."
                    },
                    {
                      "name": "attestation",
                      "type": "object",
                      "required": true,
                      "description": "attestation field",
                      "childFields": [
                        {
                          "name": "credentialId",
                          "type": "string",
                          "required": true,
                          "description": "The cbor encoded then base64 url encoded id of the credential."
                        },
                        {
                          "name": "clientDataJson",
                          "type": "string",
                          "required": true,
                          "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                        },
                        {
                          "name": "attestationObject",
                          "type": "string",
                          "required": true,
                          "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                        },
                        {
                          "name": "transports",
                          "type": "array",
                          "required": true,
                          "description": "The type of authenticator transports.",
                          "childFields": [
                            {
                              "name": "item",
                              "type": "enum",
                              "required": true,
                              "description": "item field",
                              "enumOptions": [
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                  "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                  "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                  "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_USB",
                                  "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                  "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "oauthProviders",
                  "type": "array",
                  "required": true,
                  "description": "A list of Oauth providers. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "providerName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name to identify a Provider."
                    },
                    {
                      "name": "oidcToken",
                      "type": "string",
                      "required": true,
                      "description": "Base64 encoded OIDC token"
                    }
                  ]
                }
              ]
            },
            {
              "name": "rootQuorumThreshold",
              "type": "number",
              "required": true,
              "description": "The threshold of unique approvals to reach root quorum. This value must be less than or equal to the number of root users"
            },
            {
              "name": "wallet",
              "type": "object",
              "required": false,
              "description": "wallet field",
              "childFields": [
                {
                  "name": "walletName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a Wallet."
                },
                {
                  "name": "accounts",
                  "type": "array",
                  "required": true,
                  "description": "A list of wallet Accounts. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "curve",
                      "type": "enum",
                      "required": true,
                      "description": "curve field",
                      "enumOptions": [
                        {
                          "value": "CURVE_SECP256K1",
                          "description": "CURVE_SECP256K1 option"
                        },
                        {
                          "value": "CURVE_ED25519",
                          "description": "CURVE_ED25519 option"
                        }
                      ]
                    },
                    {
                      "name": "pathFormat",
                      "type": "enum",
                      "required": true,
                      "description": "pathFormat field",
                      "enumOptions": [
                        {
                          "value": "PATH_FORMAT_BIP32",
                          "description": "PATH_FORMAT_BIP32 option"
                        }
                      ]
                    },
                    {
                      "name": "path",
                      "type": "string",
                      "required": true,
                      "description": "Path used to generate a wallet Account."
                    },
                    {
                      "name": "addressFormat",
                      "type": "enum",
                      "required": true,
                      "description": "addressFormat field",
                      "enumOptions": [
                        {
                          "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                          "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COMPRESSED",
                          "description": "ADDRESS_FORMAT_COMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_ETHEREUM",
                          "description": "ADDRESS_FORMAT_ETHEREUM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SOLANA",
                          "description": "ADDRESS_FORMAT_SOLANA option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COSMOS",
                          "description": "ADDRESS_FORMAT_COSMOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TRON",
                          "description": "ADDRESS_FORMAT_TRON option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SUI",
                          "description": "ADDRESS_FORMAT_SUI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_APTOS",
                          "description": "ADDRESS_FORMAT_APTOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SEI",
                          "description": "ADDRESS_FORMAT_SEI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XLM",
                          "description": "ADDRESS_FORMAT_XLM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                          "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                          "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V3R2",
                          "description": "ADDRESS_FORMAT_TON_V3R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V4R2",
                          "description": "ADDRESS_FORMAT_TON_V4R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XRP",
                          "description": "ADDRESS_FORMAT_XRP option"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "mnemonicLength",
                  "type": "number",
                  "required": false,
                  "description": "Length of mnemonic to generate the Wallet seed. Defaults to 12. Accepted values: 12, 15, 18, 21, 24."
                }
              ]
            },
            {
              "name": "disableEmailRecovery",
              "type": "boolean",
              "required": false,
              "description": "Disable email recovery for the sub-organization"
            },
            {
              "name": "disableEmailAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable email auth for the sub-organization"
            },
            {
              "name": "disableSmsAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable OTP SMS auth for the sub-organization"
            },
            {
              "name": "disableOtpEmailAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable OTP email auth for the sub-organization"
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Sub-Organization",
    "path": "/public/v1/submit/create_sub_organization",
    "method": "post",
    "description": "Create a new Sub-Organization",
    "version": "6",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V6"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createSubOrganizationIntentV6",
                    "type": "object",
                    "required": true,
                    "description": "The createSubOrganizationIntentV6 object",
                    "childFields": [
                      {
                        "name": "subOrganizationName",
                        "type": "string",
                        "required": true,
                        "description": "Name for this sub-organization"
                      },
                      {
                        "name": "rootUsers",
                        "type": "array",
                        "required": true,
                        "description": "Root users to create within this sub-organization",
                        "childFields": [
                          {
                            "name": "userName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for a User."
                          },
                          {
                            "name": "userEmail",
                            "type": "string",
                            "required": false,
                            "description": "The user's email address."
                          },
                          {
                            "name": "apiKeys",
                            "type": "array",
                            "required": true,
                            "description": "A list of API Key parameters. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "apiKeyName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name for an API Key."
                              },
                              {
                                "name": "publicKey",
                                "type": "string",
                                "required": true,
                                "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                              },
                              {
                                "name": "curveType",
                                "type": "enum",
                                "required": true,
                                "description": "curveType field",
                                "enumOptions": [
                                  {
                                    "value": "API_KEY_CURVE_P256",
                                    "description": "API_KEY_CURVE_P256 option"
                                  },
                                  {
                                    "value": "API_KEY_CURVE_SECP256K1",
                                    "description": "API_KEY_CURVE_SECP256K1 option"
                                  },
                                  {
                                    "value": "API_KEY_CURVE_ED25519",
                                    "description": "API_KEY_CURVE_ED25519 option"
                                  }
                                ]
                              },
                              {
                                "name": "expirationSeconds",
                                "type": "string",
                                "required": false,
                                "description": "Optional window (in seconds) indicating how long the API Key should last."
                              }
                            ]
                          },
                          {
                            "name": "authenticators",
                            "type": "array",
                            "required": true,
                            "description": "A list of Authenticator parameters. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "authenticatorName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name for an Authenticator."
                              },
                              {
                                "name": "challenge",
                                "type": "string",
                                "required": true,
                                "description": "Challenge presented for authentication purposes."
                              },
                              {
                                "name": "attestation",
                                "type": "object",
                                "required": true,
                                "description": "attestation field",
                                "childFields": [
                                  {
                                    "name": "credentialId",
                                    "type": "string",
                                    "required": true,
                                    "description": "The cbor encoded then base64 url encoded id of the credential."
                                  },
                                  {
                                    "name": "clientDataJson",
                                    "type": "string",
                                    "required": true,
                                    "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                                  },
                                  {
                                    "name": "attestationObject",
                                    "type": "string",
                                    "required": true,
                                    "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                                  },
                                  {
                                    "name": "transports",
                                    "type": "array",
                                    "required": true,
                                    "description": "The type of authenticator transports.",
                                    "childFields": [
                                      {
                                        "name": "item",
                                        "type": "enum",
                                        "required": true,
                                        "description": "item field",
                                        "enumOptions": [
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                            "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                            "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                            "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_USB",
                                            "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                            "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "name": "oauthProviders",
                            "type": "array",
                            "required": true,
                            "description": "A list of Oauth providers. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "providerName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name to identify a Provider."
                              },
                              {
                                "name": "oidcToken",
                                "type": "string",
                                "required": true,
                                "description": "Base64 encoded OIDC token"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "rootQuorumThreshold",
                        "type": "number",
                        "required": true,
                        "description": "The threshold of unique approvals to reach root quorum. This value must be less than or equal to the number of root users"
                      },
                      {
                        "name": "wallet",
                        "type": "object",
                        "required": false,
                        "description": "wallet field",
                        "childFields": [
                          {
                            "name": "walletName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for a Wallet."
                          },
                          {
                            "name": "accounts",
                            "type": "array",
                            "required": true,
                            "description": "A list of wallet Accounts. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "curve",
                                "type": "enum",
                                "required": true,
                                "description": "curve field",
                                "enumOptions": [
                                  {
                                    "value": "CURVE_SECP256K1",
                                    "description": "CURVE_SECP256K1 option"
                                  },
                                  {
                                    "value": "CURVE_ED25519",
                                    "description": "CURVE_ED25519 option"
                                  }
                                ]
                              },
                              {
                                "name": "pathFormat",
                                "type": "enum",
                                "required": true,
                                "description": "pathFormat field",
                                "enumOptions": [
                                  {
                                    "value": "PATH_FORMAT_BIP32",
                                    "description": "PATH_FORMAT_BIP32 option"
                                  }
                                ]
                              },
                              {
                                "name": "path",
                                "type": "string",
                                "required": true,
                                "description": "Path used to generate a wallet Account."
                              },
                              {
                                "name": "addressFormat",
                                "type": "enum",
                                "required": true,
                                "description": "addressFormat field",
                                "enumOptions": [
                                  {
                                    "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                                    "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COMPRESSED",
                                    "description": "ADDRESS_FORMAT_COMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_ETHEREUM",
                                    "description": "ADDRESS_FORMAT_ETHEREUM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SOLANA",
                                    "description": "ADDRESS_FORMAT_SOLANA option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COSMOS",
                                    "description": "ADDRESS_FORMAT_COSMOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TRON",
                                    "description": "ADDRESS_FORMAT_TRON option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SUI",
                                    "description": "ADDRESS_FORMAT_SUI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_APTOS",
                                    "description": "ADDRESS_FORMAT_APTOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SEI",
                                    "description": "ADDRESS_FORMAT_SEI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XLM",
                                    "description": "ADDRESS_FORMAT_XLM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                                    "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                                    "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V3R2",
                                    "description": "ADDRESS_FORMAT_TON_V3R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V4R2",
                                    "description": "ADDRESS_FORMAT_TON_V4R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XRP",
                                    "description": "ADDRESS_FORMAT_XRP option"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "name": "mnemonicLength",
                            "type": "number",
                            "required": false,
                            "description": "Length of mnemonic to generate the Wallet seed. Defaults to 12. Accepted values: 12, 15, 18, 21, 24."
                          }
                        ]
                      },
                      {
                        "name": "disableEmailRecovery",
                        "type": "boolean",
                        "required": false,
                        "description": "Disable email recovery for the sub-organization"
                      },
                      {
                        "name": "disableEmailAuth",
                        "type": "boolean",
                        "required": false,
                        "description": "Disable email auth for the sub-organization"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createSubOrganizationResultV6",
                    "type": "object",
                    "required": true,
                    "description": "The createSubOrganizationResultV6 object",
                    "childFields": [
                      {
                        "name": "subOrganizationId",
                        "type": "string",
                        "required": true,
                        "description": "subOrganizationId field"
                      },
                      {
                        "name": "wallet",
                        "type": "object",
                        "required": false,
                        "description": "wallet field",
                        "childFields": [
                          {
                            "name": "walletId",
                            "type": "string",
                            "required": true,
                            "description": "walletId field"
                          },
                          {
                            "name": "addresses",
                            "type": "array",
                            "required": true,
                            "description": "A list of account addresses.",
                            "childFields": [
                              {
                                "name": "item",
                                "type": "string",
                                "required": true,
                                "description": "item field"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "rootUserIds",
                        "type": "array",
                        "required": false,
                        "description": "rootUserIds field",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7",
              "description": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "subOrganizationName",
              "type": "string",
              "required": true,
              "description": "Name for this sub-organization"
            },
            {
              "name": "rootUsers",
              "type": "array",
              "required": true,
              "description": "Root users to create within this sub-organization",
              "childFields": [
                {
                  "name": "userName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a User."
                },
                {
                  "name": "userEmail",
                  "type": "string",
                  "required": false,
                  "description": "The user's email address."
                },
                {
                  "name": "userPhoneNumber",
                  "type": "string",
                  "required": false,
                  "description": "The user's phone number in E.164 format e.g. +13214567890"
                },
                {
                  "name": "apiKeys",
                  "type": "array",
                  "required": true,
                  "description": "A list of API Key parameters. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "apiKeyName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name for an API Key."
                    },
                    {
                      "name": "publicKey",
                      "type": "string",
                      "required": true,
                      "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                    },
                    {
                      "name": "curveType",
                      "type": "enum",
                      "required": true,
                      "description": "curveType field",
                      "enumOptions": [
                        {
                          "value": "API_KEY_CURVE_P256",
                          "description": "API_KEY_CURVE_P256 option"
                        },
                        {
                          "value": "API_KEY_CURVE_SECP256K1",
                          "description": "API_KEY_CURVE_SECP256K1 option"
                        },
                        {
                          "value": "API_KEY_CURVE_ED25519",
                          "description": "API_KEY_CURVE_ED25519 option"
                        }
                      ]
                    },
                    {
                      "name": "expirationSeconds",
                      "type": "string",
                      "required": false,
                      "description": "Optional window (in seconds) indicating how long the API Key should last."
                    }
                  ]
                },
                {
                  "name": "authenticators",
                  "type": "array",
                  "required": true,
                  "description": "A list of Authenticator parameters. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "authenticatorName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name for an Authenticator."
                    },
                    {
                      "name": "challenge",
                      "type": "string",
                      "required": true,
                      "description": "Challenge presented for authentication purposes."
                    },
                    {
                      "name": "attestation",
                      "type": "object",
                      "required": true,
                      "description": "attestation field",
                      "childFields": [
                        {
                          "name": "credentialId",
                          "type": "string",
                          "required": true,
                          "description": "The cbor encoded then base64 url encoded id of the credential."
                        },
                        {
                          "name": "clientDataJson",
                          "type": "string",
                          "required": true,
                          "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                        },
                        {
                          "name": "attestationObject",
                          "type": "string",
                          "required": true,
                          "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                        },
                        {
                          "name": "transports",
                          "type": "array",
                          "required": true,
                          "description": "The type of authenticator transports.",
                          "childFields": [
                            {
                              "name": "item",
                              "type": "enum",
                              "required": true,
                              "description": "item field",
                              "enumOptions": [
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                  "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                  "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                  "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_USB",
                                  "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                  "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "oauthProviders",
                  "type": "array",
                  "required": true,
                  "description": "A list of Oauth providers. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "providerName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name to identify a Provider."
                    },
                    {
                      "name": "oidcToken",
                      "type": "string",
                      "required": true,
                      "description": "Base64 encoded OIDC token"
                    }
                  ]
                }
              ]
            },
            {
              "name": "rootQuorumThreshold",
              "type": "number",
              "required": true,
              "description": "The threshold of unique approvals to reach root quorum. This value must be less than or equal to the number of root users"
            },
            {
              "name": "wallet",
              "type": "object",
              "required": false,
              "description": "wallet field",
              "childFields": [
                {
                  "name": "walletName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a Wallet."
                },
                {
                  "name": "accounts",
                  "type": "array",
                  "required": true,
                  "description": "A list of wallet Accounts. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "curve",
                      "type": "enum",
                      "required": true,
                      "description": "curve field",
                      "enumOptions": [
                        {
                          "value": "CURVE_SECP256K1",
                          "description": "CURVE_SECP256K1 option"
                        },
                        {
                          "value": "CURVE_ED25519",
                          "description": "CURVE_ED25519 option"
                        }
                      ]
                    },
                    {
                      "name": "pathFormat",
                      "type": "enum",
                      "required": true,
                      "description": "pathFormat field",
                      "enumOptions": [
                        {
                          "value": "PATH_FORMAT_BIP32",
                          "description": "PATH_FORMAT_BIP32 option"
                        }
                      ]
                    },
                    {
                      "name": "path",
                      "type": "string",
                      "required": true,
                      "description": "Path used to generate a wallet Account."
                    },
                    {
                      "name": "addressFormat",
                      "type": "enum",
                      "required": true,
                      "description": "addressFormat field",
                      "enumOptions": [
                        {
                          "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                          "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COMPRESSED",
                          "description": "ADDRESS_FORMAT_COMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_ETHEREUM",
                          "description": "ADDRESS_FORMAT_ETHEREUM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SOLANA",
                          "description": "ADDRESS_FORMAT_SOLANA option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COSMOS",
                          "description": "ADDRESS_FORMAT_COSMOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TRON",
                          "description": "ADDRESS_FORMAT_TRON option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SUI",
                          "description": "ADDRESS_FORMAT_SUI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_APTOS",
                          "description": "ADDRESS_FORMAT_APTOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SEI",
                          "description": "ADDRESS_FORMAT_SEI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XLM",
                          "description": "ADDRESS_FORMAT_XLM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                          "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                          "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V3R2",
                          "description": "ADDRESS_FORMAT_TON_V3R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V4R2",
                          "description": "ADDRESS_FORMAT_TON_V4R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XRP",
                          "description": "ADDRESS_FORMAT_XRP option"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "mnemonicLength",
                  "type": "number",
                  "required": false,
                  "description": "Length of mnemonic to generate the Wallet seed. Defaults to 12. Accepted values: 12, 15, 18, 21, 24."
                }
              ]
            },
            {
              "name": "disableEmailRecovery",
              "type": "boolean",
              "required": false,
              "description": "Disable email recovery for the sub-organization"
            },
            {
              "name": "disableEmailAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable email auth for the sub-organization"
            },
            {
              "name": "disableSmsAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable OTP SMS auth for the sub-organization"
            },
            {
              "name": "disableOtpEmailAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable OTP email auth for the sub-organization"
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Sub-Organization",
    "path": "/public/v1/submit/create_sub_organization",
    "method": "post",
    "description": "Create a new Sub-Organization",
    "version": "7",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createSubOrganizationIntentV7",
                    "type": "object",
                    "required": true,
                    "description": "The createSubOrganizationIntentV7 object",
                    "childFields": [
                      {
                        "name": "subOrganizationName",
                        "type": "string",
                        "required": true,
                        "description": "Name for this sub-organization"
                      },
                      {
                        "name": "rootUsers",
                        "type": "array",
                        "required": true,
                        "description": "Root users to create within this sub-organization",
                        "childFields": [
                          {
                            "name": "userName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for a User."
                          },
                          {
                            "name": "userEmail",
                            "type": "string",
                            "required": false,
                            "description": "The user's email address."
                          },
                          {
                            "name": "userPhoneNumber",
                            "type": "string",
                            "required": false,
                            "description": "The user's phone number in E.164 format e.g. +13214567890"
                          },
                          {
                            "name": "apiKeys",
                            "type": "array",
                            "required": true,
                            "description": "A list of API Key parameters. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "apiKeyName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name for an API Key."
                              },
                              {
                                "name": "publicKey",
                                "type": "string",
                                "required": true,
                                "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                              },
                              {
                                "name": "curveType",
                                "type": "enum",
                                "required": true,
                                "description": "curveType field",
                                "enumOptions": [
                                  {
                                    "value": "API_KEY_CURVE_P256",
                                    "description": "API_KEY_CURVE_P256 option"
                                  },
                                  {
                                    "value": "API_KEY_CURVE_SECP256K1",
                                    "description": "API_KEY_CURVE_SECP256K1 option"
                                  },
                                  {
                                    "value": "API_KEY_CURVE_ED25519",
                                    "description": "API_KEY_CURVE_ED25519 option"
                                  }
                                ]
                              },
                              {
                                "name": "expirationSeconds",
                                "type": "string",
                                "required": false,
                                "description": "Optional window (in seconds) indicating how long the API Key should last."
                              }
                            ]
                          },
                          {
                            "name": "authenticators",
                            "type": "array",
                            "required": true,
                            "description": "A list of Authenticator parameters. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "authenticatorName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name for an Authenticator."
                              },
                              {
                                "name": "challenge",
                                "type": "string",
                                "required": true,
                                "description": "Challenge presented for authentication purposes."
                              },
                              {
                                "name": "attestation",
                                "type": "object",
                                "required": true,
                                "description": "attestation field",
                                "childFields": [
                                  {
                                    "name": "credentialId",
                                    "type": "string",
                                    "required": true,
                                    "description": "The cbor encoded then base64 url encoded id of the credential."
                                  },
                                  {
                                    "name": "clientDataJson",
                                    "type": "string",
                                    "required": true,
                                    "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                                  },
                                  {
                                    "name": "attestationObject",
                                    "type": "string",
                                    "required": true,
                                    "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                                  },
                                  {
                                    "name": "transports",
                                    "type": "array",
                                    "required": true,
                                    "description": "The type of authenticator transports.",
                                    "childFields": [
                                      {
                                        "name": "item",
                                        "type": "enum",
                                        "required": true,
                                        "description": "item field",
                                        "enumOptions": [
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                            "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                            "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                            "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_USB",
                                            "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                          },
                                          {
                                            "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                            "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "name": "oauthProviders",
                            "type": "array",
                            "required": true,
                            "description": "A list of Oauth providers. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "providerName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name to identify a Provider."
                              },
                              {
                                "name": "oidcToken",
                                "type": "string",
                                "required": true,
                                "description": "Base64 encoded OIDC token"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "rootQuorumThreshold",
                        "type": "number",
                        "required": true,
                        "description": "The threshold of unique approvals to reach root quorum. This value must be less than or equal to the number of root users"
                      },
                      {
                        "name": "wallet",
                        "type": "object",
                        "required": false,
                        "description": "wallet field",
                        "childFields": [
                          {
                            "name": "walletName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for a Wallet."
                          },
                          {
                            "name": "accounts",
                            "type": "array",
                            "required": true,
                            "description": "A list of wallet Accounts. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "curve",
                                "type": "enum",
                                "required": true,
                                "description": "curve field",
                                "enumOptions": [
                                  {
                                    "value": "CURVE_SECP256K1",
                                    "description": "CURVE_SECP256K1 option"
                                  },
                                  {
                                    "value": "CURVE_ED25519",
                                    "description": "CURVE_ED25519 option"
                                  }
                                ]
                              },
                              {
                                "name": "pathFormat",
                                "type": "enum",
                                "required": true,
                                "description": "pathFormat field",
                                "enumOptions": [
                                  {
                                    "value": "PATH_FORMAT_BIP32",
                                    "description": "PATH_FORMAT_BIP32 option"
                                  }
                                ]
                              },
                              {
                                "name": "path",
                                "type": "string",
                                "required": true,
                                "description": "Path used to generate a wallet Account."
                              },
                              {
                                "name": "addressFormat",
                                "type": "enum",
                                "required": true,
                                "description": "addressFormat field",
                                "enumOptions": [
                                  {
                                    "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                                    "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COMPRESSED",
                                    "description": "ADDRESS_FORMAT_COMPRESSED option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_ETHEREUM",
                                    "description": "ADDRESS_FORMAT_ETHEREUM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SOLANA",
                                    "description": "ADDRESS_FORMAT_SOLANA option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_COSMOS",
                                    "description": "ADDRESS_FORMAT_COSMOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TRON",
                                    "description": "ADDRESS_FORMAT_TRON option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SUI",
                                    "description": "ADDRESS_FORMAT_SUI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_APTOS",
                                    "description": "ADDRESS_FORMAT_APTOS option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                                    "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_SEI",
                                    "description": "ADDRESS_FORMAT_SEI option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XLM",
                                    "description": "ADDRESS_FORMAT_XLM option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                                    "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                                    "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V3R2",
                                    "description": "ADDRESS_FORMAT_TON_V3R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_TON_V4R2",
                                    "description": "ADDRESS_FORMAT_TON_V4R2 option"
                                  },
                                  {
                                    "value": "ADDRESS_FORMAT_XRP",
                                    "description": "ADDRESS_FORMAT_XRP option"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "name": "mnemonicLength",
                            "type": "number",
                            "required": false,
                            "description": "Length of mnemonic to generate the Wallet seed. Defaults to 12. Accepted values: 12, 15, 18, 21, 24."
                          }
                        ]
                      },
                      {
                        "name": "disableEmailRecovery",
                        "type": "boolean",
                        "required": false,
                        "description": "Disable email recovery for the sub-organization"
                      },
                      {
                        "name": "disableEmailAuth",
                        "type": "boolean",
                        "required": false,
                        "description": "Disable email auth for the sub-organization"
                      },
                      {
                        "name": "disableSmsAuth",
                        "type": "boolean",
                        "required": false,
                        "description": "Disable OTP SMS auth for the sub-organization"
                      },
                      {
                        "name": "disableOtpEmailAuth",
                        "type": "boolean",
                        "required": false,
                        "description": "Disable OTP email auth for the sub-organization"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createSubOrganizationResultV7",
                    "type": "object",
                    "required": true,
                    "description": "The createSubOrganizationResultV7 object",
                    "childFields": [
                      {
                        "name": "subOrganizationId",
                        "type": "string",
                        "required": true,
                        "description": "subOrganizationId field"
                      },
                      {
                        "name": "wallet",
                        "type": "object",
                        "required": false,
                        "description": "wallet field",
                        "childFields": [
                          {
                            "name": "walletId",
                            "type": "string",
                            "required": true,
                            "description": "walletId field"
                          },
                          {
                            "name": "addresses",
                            "type": "array",
                            "required": true,
                            "description": "A list of account addresses.",
                            "childFields": [
                              {
                                "name": "item",
                                "type": "string",
                                "required": true,
                                "description": "item field"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "rootUserIds",
                        "type": "array",
                        "required": false,
                        "description": "rootUserIds field",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7",
              "description": "ACTIVITY_TYPE_CREATE_SUB_ORGANIZATION_V7 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "subOrganizationName",
              "type": "string",
              "required": true,
              "description": "Name for this sub-organization"
            },
            {
              "name": "rootUsers",
              "type": "array",
              "required": true,
              "description": "Root users to create within this sub-organization",
              "childFields": [
                {
                  "name": "userName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a User."
                },
                {
                  "name": "userEmail",
                  "type": "string",
                  "required": false,
                  "description": "The user's email address."
                },
                {
                  "name": "userPhoneNumber",
                  "type": "string",
                  "required": false,
                  "description": "The user's phone number in E.164 format e.g. +13214567890"
                },
                {
                  "name": "apiKeys",
                  "type": "array",
                  "required": true,
                  "description": "A list of API Key parameters. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "apiKeyName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name for an API Key."
                    },
                    {
                      "name": "publicKey",
                      "type": "string",
                      "required": true,
                      "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                    },
                    {
                      "name": "curveType",
                      "type": "enum",
                      "required": true,
                      "description": "curveType field",
                      "enumOptions": [
                        {
                          "value": "API_KEY_CURVE_P256",
                          "description": "API_KEY_CURVE_P256 option"
                        },
                        {
                          "value": "API_KEY_CURVE_SECP256K1",
                          "description": "API_KEY_CURVE_SECP256K1 option"
                        },
                        {
                          "value": "API_KEY_CURVE_ED25519",
                          "description": "API_KEY_CURVE_ED25519 option"
                        }
                      ]
                    },
                    {
                      "name": "expirationSeconds",
                      "type": "string",
                      "required": false,
                      "description": "Optional window (in seconds) indicating how long the API Key should last."
                    }
                  ]
                },
                {
                  "name": "authenticators",
                  "type": "array",
                  "required": true,
                  "description": "A list of Authenticator parameters. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "authenticatorName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name for an Authenticator."
                    },
                    {
                      "name": "challenge",
                      "type": "string",
                      "required": true,
                      "description": "Challenge presented for authentication purposes."
                    },
                    {
                      "name": "attestation",
                      "type": "object",
                      "required": true,
                      "description": "attestation field",
                      "childFields": [
                        {
                          "name": "credentialId",
                          "type": "string",
                          "required": true,
                          "description": "The cbor encoded then base64 url encoded id of the credential."
                        },
                        {
                          "name": "clientDataJson",
                          "type": "string",
                          "required": true,
                          "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                        },
                        {
                          "name": "attestationObject",
                          "type": "string",
                          "required": true,
                          "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                        },
                        {
                          "name": "transports",
                          "type": "array",
                          "required": true,
                          "description": "The type of authenticator transports.",
                          "childFields": [
                            {
                              "name": "item",
                              "type": "enum",
                              "required": true,
                              "description": "item field",
                              "enumOptions": [
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                  "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                  "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                  "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_USB",
                                  "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                  "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "oauthProviders",
                  "type": "array",
                  "required": true,
                  "description": "A list of Oauth providers. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "providerName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name to identify a Provider."
                    },
                    {
                      "name": "oidcToken",
                      "type": "string",
                      "required": true,
                      "description": "Base64 encoded OIDC token"
                    }
                  ]
                }
              ]
            },
            {
              "name": "rootQuorumThreshold",
              "type": "number",
              "required": true,
              "description": "The threshold of unique approvals to reach root quorum. This value must be less than or equal to the number of root users"
            },
            {
              "name": "wallet",
              "type": "object",
              "required": false,
              "description": "wallet field",
              "childFields": [
                {
                  "name": "walletName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a Wallet."
                },
                {
                  "name": "accounts",
                  "type": "array",
                  "required": true,
                  "description": "A list of wallet Accounts. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "curve",
                      "type": "enum",
                      "required": true,
                      "description": "curve field",
                      "enumOptions": [
                        {
                          "value": "CURVE_SECP256K1",
                          "description": "CURVE_SECP256K1 option"
                        },
                        {
                          "value": "CURVE_ED25519",
                          "description": "CURVE_ED25519 option"
                        }
                      ]
                    },
                    {
                      "name": "pathFormat",
                      "type": "enum",
                      "required": true,
                      "description": "pathFormat field",
                      "enumOptions": [
                        {
                          "value": "PATH_FORMAT_BIP32",
                          "description": "PATH_FORMAT_BIP32 option"
                        }
                      ]
                    },
                    {
                      "name": "path",
                      "type": "string",
                      "required": true,
                      "description": "Path used to generate a wallet Account."
                    },
                    {
                      "name": "addressFormat",
                      "type": "enum",
                      "required": true,
                      "description": "addressFormat field",
                      "enumOptions": [
                        {
                          "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                          "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COMPRESSED",
                          "description": "ADDRESS_FORMAT_COMPRESSED option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_ETHEREUM",
                          "description": "ADDRESS_FORMAT_ETHEREUM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SOLANA",
                          "description": "ADDRESS_FORMAT_SOLANA option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_COSMOS",
                          "description": "ADDRESS_FORMAT_COSMOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TRON",
                          "description": "ADDRESS_FORMAT_TRON option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SUI",
                          "description": "ADDRESS_FORMAT_SUI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_APTOS",
                          "description": "ADDRESS_FORMAT_APTOS option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                          "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_SEI",
                          "description": "ADDRESS_FORMAT_SEI option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XLM",
                          "description": "ADDRESS_FORMAT_XLM option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                          "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                          "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V3R2",
                          "description": "ADDRESS_FORMAT_TON_V3R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_TON_V4R2",
                          "description": "ADDRESS_FORMAT_TON_V4R2 option"
                        },
                        {
                          "value": "ADDRESS_FORMAT_XRP",
                          "description": "ADDRESS_FORMAT_XRP option"
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "mnemonicLength",
                  "type": "number",
                  "required": false,
                  "description": "Length of mnemonic to generate the Wallet seed. Defaults to 12. Accepted values: 12, 15, 18, 21, 24."
                }
              ]
            },
            {
              "name": "disableEmailRecovery",
              "type": "boolean",
              "required": false,
              "description": "Disable email recovery for the sub-organization"
            },
            {
              "name": "disableEmailAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable email auth for the sub-organization"
            },
            {
              "name": "disableSmsAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable OTP SMS auth for the sub-organization"
            },
            {
              "name": "disableOtpEmailAuth",
              "type": "boolean",
              "required": false,
              "description": "Disable OTP email auth for the sub-organization"
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create User Tag",
    "path": "/public/v1/submit/create_user_tag",
    "method": "post",
    "description": "Create a user tag and add it to users.",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_USER_TAG"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createUserTagIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createUserTagIntent object",
                    "childFields": [
                      {
                        "name": "userTagName",
                        "type": "string",
                        "required": true,
                        "description": "Human-readable name for a User Tag."
                      },
                      {
                        "name": "userIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of User IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createUserTagResult",
                    "type": "object",
                    "required": true,
                    "description": "The createUserTagResult object",
                    "childFields": [
                      {
                        "name": "userTagId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given User Tag."
                      },
                      {
                        "name": "userIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of User IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_USER_TAG",
              "description": "ACTIVITY_TYPE_CREATE_USER_TAG option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "userTagName",
              "type": "string",
              "required": true,
              "description": "Human-readable name for a User Tag."
            },
            {
              "name": "userIds",
              "type": "array",
              "required": true,
              "description": "A list of User IDs.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Users",
    "path": "/public/v1/submit/create_users",
    "method": "post",
    "description": "Create Users in an existing Organization",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_USERS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createUsersIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createUsersIntent object",
                    "childFields": [
                      {
                        "name": "users",
                        "type": "array",
                        "required": true,
                        "description": "A list of Users.",
                        "childFields": [
                          {
                            "name": "userName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for a User."
                          },
                          {
                            "name": "userEmail",
                            "type": "string",
                            "required": false,
                            "description": "The user's email address."
                          },
                          {
                            "name": "accessType",
                            "type": "enum",
                            "required": true,
                            "description": "accessType field",
                            "enumOptions": [
                              {
                                "value": "ACCESS_TYPE_WEB",
                                "description": "ACCESS_TYPE_WEB option"
                              },
                              {
                                "value": "ACCESS_TYPE_API",
                                "description": "ACCESS_TYPE_API option"
                              },
                              {
                                "value": "ACCESS_TYPE_ALL",
                                "description": "ACCESS_TYPE_ALL option"
                              }
                            ]
                          },
                          {
                            "name": "apiKeys",
                            "type": "array",
                            "required": true,
                            "description": "A list of API Key parameters. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "apiKeyName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name for an API Key."
                              },
                              {
                                "name": "publicKey",
                                "type": "string",
                                "required": true,
                                "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                              },
                              {
                                "name": "expirationSeconds",
                                "type": "string",
                                "required": false,
                                "description": "Optional window (in seconds) indicating how long the API Key should last."
                              }
                            ]
                          },
                          {
                            "name": "authenticators",
                            "type": "array",
                            "required": true,
                            "description": "A list of Authenticator parameters. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "authenticatorName",
                                "type": "string",
                                "required": true,
                                "description": "Human-readable name for an Authenticator."
                              },
                              {
                                "name": "userId",
                                "type": "string",
                                "required": true,
                                "description": "Unique identifier for a given User."
                              },
                              {
                                "name": "attestation",
                                "type": "object",
                                "required": true,
                                "description": "attestation field",
                                "childFields": [
                                  {
                                    "name": "id",
                                    "type": "string",
                                    "required": true,
                                    "description": "id field"
                                  },
                                  {
                                    "name": "type",
                                    "type": "enum",
                                    "required": true,
                                    "description": "type field",
                                    "enumOptions": [
                                      {
                                        "value": "public-key",
                                        "description": "public-key option"
                                      }
                                    ]
                                  },
                                  {
                                    "name": "rawId",
                                    "type": "string",
                                    "required": true,
                                    "description": "rawId field"
                                  },
                                  {
                                    "name": "authenticatorAttachment",
                                    "type": "enum",
                                    "required": false,
                                    "description": "authenticatorAttachment field",
                                    "enumOptions": [
                                      {
                                        "value": "cross-platform",
                                        "description": "cross-platform option"
                                      },
                                      {
                                        "value": "platform",
                                        "description": "platform option"
                                      }
                                    ]
                                  },
                                  {
                                    "name": "response",
                                    "type": "object",
                                    "required": true,
                                    "description": "response field",
                                    "childFields": [
                                      {
                                        "name": "clientDataJson",
                                        "type": "string",
                                        "required": true,
                                        "description": "clientDataJson field"
                                      },
                                      {
                                        "name": "attestationObject",
                                        "type": "string",
                                        "required": true,
                                        "description": "attestationObject field"
                                      },
                                      {
                                        "name": "transports",
                                        "type": "array",
                                        "required": false,
                                        "description": "transports field",
                                        "childFields": [
                                          {
                                            "name": "item",
                                            "type": "enum",
                                            "required": true,
                                            "description": "item field",
                                            "enumOptions": [
                                              {
                                                "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                                "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                              },
                                              {
                                                "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                                "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                              },
                                              {
                                                "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                                "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                              },
                                              {
                                                "value": "AUTHENTICATOR_TRANSPORT_USB",
                                                "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                              },
                                              {
                                                "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                                "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "name": "authenticatorAttachment",
                                        "type": "enum",
                                        "required": false,
                                        "description": "authenticatorAttachment field",
                                        "enumOptions": [
                                          {
                                            "value": "cross-platform",
                                            "description": "cross-platform option"
                                          },
                                          {
                                            "value": "platform",
                                            "description": "platform option"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "name": "clientExtensionResults",
                                    "type": "object",
                                    "required": true,
                                    "description": "clientExtensionResults field",
                                    "childFields": [
                                      {
                                        "name": "appid",
                                        "type": "boolean",
                                        "required": false,
                                        "description": "appid field"
                                      },
                                      {
                                        "name": "appidExclude",
                                        "type": "boolean",
                                        "required": false,
                                        "description": "appidExclude field"
                                      },
                                      {
                                        "name": "credProps",
                                        "type": "object",
                                        "required": false,
                                        "description": "credProps field",
                                        "childFields": [
                                          {
                                            "name": "rk",
                                            "type": "boolean",
                                            "required": true,
                                            "description": "rk field"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "name": "challenge",
                                "type": "string",
                                "required": true,
                                "description": "Challenge presented for authentication purposes."
                              }
                            ]
                          },
                          {
                            "name": "userTags",
                            "type": "array",
                            "required": true,
                            "description": "A list of User Tag IDs. This field, if not needed, should be an empty array in your request body.",
                            "childFields": [
                              {
                                "name": "item",
                                "type": "string",
                                "required": true,
                                "description": "item field"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createUsersResult",
                    "type": "object",
                    "required": true,
                    "description": "The createUsersResult object",
                    "childFields": [
                      {
                        "name": "userIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of User IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_USERS_V2",
              "description": "ACTIVITY_TYPE_CREATE_USERS_V2 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "users",
              "type": "array",
              "required": true,
              "description": "A list of Users.",
              "childFields": [
                {
                  "name": "userName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for a User."
                },
                {
                  "name": "userEmail",
                  "type": "string",
                  "required": false,
                  "description": "The user's email address."
                },
                {
                  "name": "apiKeys",
                  "type": "array",
                  "required": true,
                  "description": "A list of API Key parameters. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "apiKeyName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name for an API Key."
                    },
                    {
                      "name": "publicKey",
                      "type": "string",
                      "required": true,
                      "description": "The public component of a cryptographic key pair used to sign messages and transactions."
                    },
                    {
                      "name": "expirationSeconds",
                      "type": "string",
                      "required": false,
                      "description": "Optional window (in seconds) indicating how long the API Key should last."
                    }
                  ]
                },
                {
                  "name": "authenticators",
                  "type": "array",
                  "required": true,
                  "description": "A list of Authenticator parameters. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "authenticatorName",
                      "type": "string",
                      "required": true,
                      "description": "Human-readable name for an Authenticator."
                    },
                    {
                      "name": "challenge",
                      "type": "string",
                      "required": true,
                      "description": "Challenge presented for authentication purposes."
                    },
                    {
                      "name": "attestation",
                      "type": "object",
                      "required": true,
                      "description": "attestation field",
                      "childFields": [
                        {
                          "name": "credentialId",
                          "type": "string",
                          "required": true,
                          "description": "The cbor encoded then base64 url encoded id of the credential."
                        },
                        {
                          "name": "clientDataJson",
                          "type": "string",
                          "required": true,
                          "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                        },
                        {
                          "name": "attestationObject",
                          "type": "string",
                          "required": true,
                          "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                        },
                        {
                          "name": "transports",
                          "type": "array",
                          "required": true,
                          "description": "The type of authenticator transports.",
                          "childFields": [
                            {
                              "name": "item",
                              "type": "enum",
                              "required": true,
                              "description": "item field",
                              "enumOptions": [
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                  "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                  "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                  "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_USB",
                                  "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                },
                                {
                                  "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                  "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "userTags",
                  "type": "array",
                  "required": true,
                  "description": "A list of User Tag IDs. This field, if not needed, should be an empty array in your request body.",
                  "childFields": [
                    {
                      "name": "item",
                      "type": "string",
                      "required": true,
                      "description": "item field"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Wallet",
    "path": "/public/v1/submit/create_wallet",
    "method": "post",
    "description": "Create a Wallet and derive addresses",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_WALLET"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createWalletIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createWalletIntent object",
                    "childFields": [
                      {
                        "name": "walletName",
                        "type": "string",
                        "required": true,
                        "description": "Human-readable name for a Wallet."
                      },
                      {
                        "name": "accounts",
                        "type": "array",
                        "required": true,
                        "description": "A list of wallet Accounts. This field, if not needed, should be an empty array in your request body.",
                        "childFields": [
                          {
                            "name": "curve",
                            "type": "enum",
                            "required": true,
                            "description": "curve field",
                            "enumOptions": [
                              {
                                "value": "CURVE_SECP256K1",
                                "description": "CURVE_SECP256K1 option"
                              },
                              {
                                "value": "CURVE_ED25519",
                                "description": "CURVE_ED25519 option"
                              }
                            ]
                          },
                          {
                            "name": "pathFormat",
                            "type": "enum",
                            "required": true,
                            "description": "pathFormat field",
                            "enumOptions": [
                              {
                                "value": "PATH_FORMAT_BIP32",
                                "description": "PATH_FORMAT_BIP32 option"
                              }
                            ]
                          },
                          {
                            "name": "path",
                            "type": "string",
                            "required": true,
                            "description": "Path used to generate a wallet Account."
                          },
                          {
                            "name": "addressFormat",
                            "type": "enum",
                            "required": true,
                            "description": "addressFormat field",
                            "enumOptions": [
                              {
                                "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                                "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_COMPRESSED",
                                "description": "ADDRESS_FORMAT_COMPRESSED option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_ETHEREUM",
                                "description": "ADDRESS_FORMAT_ETHEREUM option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SOLANA",
                                "description": "ADDRESS_FORMAT_SOLANA option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_COSMOS",
                                "description": "ADDRESS_FORMAT_COSMOS option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TRON",
                                "description": "ADDRESS_FORMAT_TRON option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SUI",
                                "description": "ADDRESS_FORMAT_SUI option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_APTOS",
                                "description": "ADDRESS_FORMAT_APTOS option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SEI",
                                "description": "ADDRESS_FORMAT_SEI option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_XLM",
                                "description": "ADDRESS_FORMAT_XLM option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                                "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                                "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TON_V3R2",
                                "description": "ADDRESS_FORMAT_TON_V3R2 option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TON_V4R2",
                                "description": "ADDRESS_FORMAT_TON_V4R2 option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_XRP",
                                "description": "ADDRESS_FORMAT_XRP option"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "mnemonicLength",
                        "type": "number",
                        "required": false,
                        "description": "Length of mnemonic to generate the Wallet seed. Defaults to 12. Accepted values: 12, 15, 18, 21, 24."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createWalletResult",
                    "type": "object",
                    "required": true,
                    "description": "The createWalletResult object",
                    "childFields": [
                      {
                        "name": "walletId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a Wallet."
                      },
                      {
                        "name": "addresses",
                        "type": "array",
                        "required": true,
                        "description": "A list of account addresses.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_WALLET",
              "description": "ACTIVITY_TYPE_CREATE_WALLET option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "walletName",
              "type": "string",
              "required": true,
              "description": "Human-readable name for a Wallet."
            },
            {
              "name": "accounts",
              "type": "array",
              "required": true,
              "description": "A list of wallet Accounts. This field, if not needed, should be an empty array in your request body.",
              "childFields": [
                {
                  "name": "curve",
                  "type": "enum",
                  "required": true,
                  "description": "curve field",
                  "enumOptions": [
                    {
                      "value": "CURVE_SECP256K1",
                      "description": "CURVE_SECP256K1 option"
                    },
                    {
                      "value": "CURVE_ED25519",
                      "description": "CURVE_ED25519 option"
                    }
                  ]
                },
                {
                  "name": "pathFormat",
                  "type": "enum",
                  "required": true,
                  "description": "pathFormat field",
                  "enumOptions": [
                    {
                      "value": "PATH_FORMAT_BIP32",
                      "description": "PATH_FORMAT_BIP32 option"
                    }
                  ]
                },
                {
                  "name": "path",
                  "type": "string",
                  "required": true,
                  "description": "Path used to generate a wallet Account."
                },
                {
                  "name": "addressFormat",
                  "type": "enum",
                  "required": true,
                  "description": "addressFormat field",
                  "enumOptions": [
                    {
                      "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                      "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_COMPRESSED",
                      "description": "ADDRESS_FORMAT_COMPRESSED option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_ETHEREUM",
                      "description": "ADDRESS_FORMAT_ETHEREUM option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_SOLANA",
                      "description": "ADDRESS_FORMAT_SOLANA option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_COSMOS",
                      "description": "ADDRESS_FORMAT_COSMOS option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_TRON",
                      "description": "ADDRESS_FORMAT_TRON option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_SUI",
                      "description": "ADDRESS_FORMAT_SUI option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_APTOS",
                      "description": "ADDRESS_FORMAT_APTOS option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_SEI",
                      "description": "ADDRESS_FORMAT_SEI option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_XLM",
                      "description": "ADDRESS_FORMAT_XLM option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                      "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                      "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_TON_V3R2",
                      "description": "ADDRESS_FORMAT_TON_V3R2 option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_TON_V4R2",
                      "description": "ADDRESS_FORMAT_TON_V4R2 option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_XRP",
                      "description": "ADDRESS_FORMAT_XRP option"
                    }
                  ]
                }
              ]
            },
            {
              "name": "mnemonicLength",
              "type": "number",
              "required": false,
              "description": "Length of mnemonic to generate the Wallet seed. Defaults to 12. Accepted values: 12, 15, 18, 21, 24."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Create Wallet Accounts",
    "path": "/public/v1/submit/create_wallet_accounts",
    "method": "post",
    "description": "Derive additional addresses using an existing wallet",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_CREATE_WALLET_ACCOUNTS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "createWalletAccountsIntent",
                    "type": "object",
                    "required": true,
                    "description": "The createWalletAccountsIntent object",
                    "childFields": [
                      {
                        "name": "walletId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Wallet."
                      },
                      {
                        "name": "accounts",
                        "type": "array",
                        "required": true,
                        "description": "A list of wallet Accounts.",
                        "childFields": [
                          {
                            "name": "curve",
                            "type": "enum",
                            "required": true,
                            "description": "curve field",
                            "enumOptions": [
                              {
                                "value": "CURVE_SECP256K1",
                                "description": "CURVE_SECP256K1 option"
                              },
                              {
                                "value": "CURVE_ED25519",
                                "description": "CURVE_ED25519 option"
                              }
                            ]
                          },
                          {
                            "name": "pathFormat",
                            "type": "enum",
                            "required": true,
                            "description": "pathFormat field",
                            "enumOptions": [
                              {
                                "value": "PATH_FORMAT_BIP32",
                                "description": "PATH_FORMAT_BIP32 option"
                              }
                            ]
                          },
                          {
                            "name": "path",
                            "type": "string",
                            "required": true,
                            "description": "Path used to generate a wallet Account."
                          },
                          {
                            "name": "addressFormat",
                            "type": "enum",
                            "required": true,
                            "description": "addressFormat field",
                            "enumOptions": [
                              {
                                "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                                "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_COMPRESSED",
                                "description": "ADDRESS_FORMAT_COMPRESSED option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_ETHEREUM",
                                "description": "ADDRESS_FORMAT_ETHEREUM option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SOLANA",
                                "description": "ADDRESS_FORMAT_SOLANA option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_COSMOS",
                                "description": "ADDRESS_FORMAT_COSMOS option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TRON",
                                "description": "ADDRESS_FORMAT_TRON option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SUI",
                                "description": "ADDRESS_FORMAT_SUI option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_APTOS",
                                "description": "ADDRESS_FORMAT_APTOS option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SEI",
                                "description": "ADDRESS_FORMAT_SEI option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_XLM",
                                "description": "ADDRESS_FORMAT_XLM option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                                "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                                "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TON_V3R2",
                                "description": "ADDRESS_FORMAT_TON_V3R2 option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TON_V4R2",
                                "description": "ADDRESS_FORMAT_TON_V4R2 option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_XRP",
                                "description": "ADDRESS_FORMAT_XRP option"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "createWalletAccountsResult",
                    "type": "object",
                    "required": true,
                    "description": "The createWalletAccountsResult object",
                    "childFields": [
                      {
                        "name": "addresses",
                        "type": "array",
                        "required": true,
                        "description": "A list of derived addresses.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_CREATE_WALLET_ACCOUNTS",
              "description": "ACTIVITY_TYPE_CREATE_WALLET_ACCOUNTS option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "walletId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for a given Wallet."
            },
            {
              "name": "accounts",
              "type": "array",
              "required": true,
              "description": "A list of wallet Accounts.",
              "childFields": [
                {
                  "name": "curve",
                  "type": "enum",
                  "required": true,
                  "description": "curve field",
                  "enumOptions": [
                    {
                      "value": "CURVE_SECP256K1",
                      "description": "CURVE_SECP256K1 option"
                    },
                    {
                      "value": "CURVE_ED25519",
                      "description": "CURVE_ED25519 option"
                    }
                  ]
                },
                {
                  "name": "pathFormat",
                  "type": "enum",
                  "required": true,
                  "description": "pathFormat field",
                  "enumOptions": [
                    {
                      "value": "PATH_FORMAT_BIP32",
                      "description": "PATH_FORMAT_BIP32 option"
                    }
                  ]
                },
                {
                  "name": "path",
                  "type": "string",
                  "required": true,
                  "description": "Path used to generate a wallet Account."
                },
                {
                  "name": "addressFormat",
                  "type": "enum",
                  "required": true,
                  "description": "addressFormat field",
                  "enumOptions": [
                    {
                      "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                      "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_COMPRESSED",
                      "description": "ADDRESS_FORMAT_COMPRESSED option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_ETHEREUM",
                      "description": "ADDRESS_FORMAT_ETHEREUM option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_SOLANA",
                      "description": "ADDRESS_FORMAT_SOLANA option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_COSMOS",
                      "description": "ADDRESS_FORMAT_COSMOS option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_TRON",
                      "description": "ADDRESS_FORMAT_TRON option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_SUI",
                      "description": "ADDRESS_FORMAT_SUI option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_APTOS",
                      "description": "ADDRESS_FORMAT_APTOS option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_SEI",
                      "description": "ADDRESS_FORMAT_SEI option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_XLM",
                      "description": "ADDRESS_FORMAT_XLM option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                      "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                      "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_TON_V3R2",
                      "description": "ADDRESS_FORMAT_TON_V3R2 option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_TON_V4R2",
                      "description": "ADDRESS_FORMAT_TON_V4R2 option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_XRP",
                      "description": "ADDRESS_FORMAT_XRP option"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Delete API Keys",
    "path": "/public/v1/submit/delete_api_keys",
    "method": "post",
    "description": "Remove api keys from a User",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_DELETE_API_KEYS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "deleteApiKeysIntent",
                    "type": "object",
                    "required": true,
                    "description": "The deleteApiKeysIntent object",
                    "childFields": [
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given User."
                      },
                      {
                        "name": "apiKeyIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of API Key IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "deleteApiKeysResult",
                    "type": "object",
                    "required": true,
                    "description": "The deleteApiKeysResult object",
                    "childFields": [
                      {
                        "name": "apiKeyIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of API Key IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_DELETE_API_KEYS",
              "description": "ACTIVITY_TYPE_DELETE_API_KEYS option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "userId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for a given User."
            },
            {
              "name": "apiKeyIds",
              "type": "array",
              "required": true,
              "description": "A list of API Key IDs.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Delete Authenticators",
    "path": "/public/v1/submit/delete_authenticators",
    "method": "post",
    "description": "Remove authenticators from a User",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_DELETE_AUTHENTICATORS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "deleteAuthenticatorsIntent",
                    "type": "object",
                    "required": true,
                    "description": "The deleteAuthenticatorsIntent object",
                    "childFields": [
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given User."
                      },
                      {
                        "name": "authenticatorIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of Authenticator IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "deleteAuthenticatorsResult",
                    "type": "object",
                    "required": true,
                    "description": "The deleteAuthenticatorsResult object",
                    "childFields": [
                      {
                        "name": "authenticatorIds",
                        "type": "array",
                        "required": true,
                        "description": "Unique identifier for a given Authenticator.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_DELETE_AUTHENTICATORS",
              "description": "ACTIVITY_TYPE_DELETE_AUTHENTICATORS option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "userId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for a given User."
            },
            {
              "name": "authenticatorIds",
              "type": "array",
              "required": true,
              "description": "A list of Authenticator IDs.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Delete Invitation",
    "path": "/public/v1/submit/delete_invitation",
    "method": "post",
    "description": "Delete an existing Invitation",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_DELETE_INVITATION"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "deleteInvitationIntent",
                    "type": "object",
                    "required": true,
                    "description": "The deleteInvitationIntent object",
                    "childFields": [
                      {
                        "name": "invitationId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Invitation object."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "deleteInvitationResult",
                    "type": "object",
                    "required": true,
                    "description": "The deleteInvitationResult object",
                    "childFields": [
                      {
                        "name": "invitationId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Invitation."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_DELETE_INVITATION",
              "description": "ACTIVITY_TYPE_DELETE_INVITATION option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "invitationId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for a given Invitation object."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Delete Oauth Providers",
    "path": "/public/v1/submit/delete_oauth_providers",
    "method": "post",
    "description": "Removes Oauth providers for a specified user - BETA",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_DELETE_OAUTH_PROVIDERS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "deleteOauthProvidersIntent",
                    "type": "object",
                    "required": true,
                    "description": "The deleteOauthProvidersIntent object",
                    "childFields": [
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "The ID of the User to remove an Oauth provider from"
                      },
                      {
                        "name": "providerIds",
                        "type": "array",
                        "required": true,
                        "description": "Unique identifier for a given Provider.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "deleteOauthProvidersResult",
                    "type": "object",
                    "required": true,
                    "description": "The deleteOauthProvidersResult object",
                    "childFields": [
                      {
                        "name": "providerIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of unique identifiers for Oauth Providers",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_DELETE_OAUTH_PROVIDERS",
              "description": "ACTIVITY_TYPE_DELETE_OAUTH_PROVIDERS option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "userId",
              "type": "string",
              "required": true,
              "description": "The ID of the User to remove an Oauth provider from"
            },
            {
              "name": "providerIds",
              "type": "array",
              "required": true,
              "description": "Unique identifier for a given Provider.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Delete Policy",
    "path": "/public/v1/submit/delete_policy",
    "method": "post",
    "description": "Delete an existing Policy",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_DELETE_POLICY"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "deletePolicyIntent",
                    "type": "object",
                    "required": true,
                    "description": "The deletePolicyIntent object",
                    "childFields": [
                      {
                        "name": "policyId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Policy."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "deletePolicyResult",
                    "type": "object",
                    "required": true,
                    "description": "The deletePolicyResult object",
                    "childFields": [
                      {
                        "name": "policyId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Policy."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_DELETE_POLICY",
              "description": "ACTIVITY_TYPE_DELETE_POLICY option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "policyId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for a given Policy."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Delete Private Key Tags",
    "path": "/public/v1/submit/delete_private_key_tags",
    "method": "post",
    "description": "Delete Private Key Tags within an Organization",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_DELETE_PRIVATE_KEY_TAGS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "deletePrivateKeyTagsIntent",
                    "type": "object",
                    "required": true,
                    "description": "The deletePrivateKeyTagsIntent object",
                    "childFields": [
                      {
                        "name": "privateKeyTagIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of Private Key Tag IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "deletePrivateKeyTagsResult",
                    "type": "object",
                    "required": true,
                    "description": "The deletePrivateKeyTagsResult object",
                    "childFields": [
                      {
                        "name": "privateKeyTagIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of Private Key Tag IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      },
                      {
                        "name": "privateKeyIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of Private Key IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_DELETE_PRIVATE_KEY_TAGS",
              "description": "ACTIVITY_TYPE_DELETE_PRIVATE_KEY_TAGS option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "privateKeyTagIds",
              "type": "array",
              "required": true,
              "description": "A list of Private Key Tag IDs.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Delete Private Keys",
    "path": "/public/v1/submit/delete_private_keys",
    "method": "post",
    "description": "Deletes private keys for an organization",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_DELETE_PRIVATE_KEYS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "deletePrivateKeysIntent",
                    "type": "object",
                    "required": true,
                    "description": "The deletePrivateKeysIntent object",
                    "childFields": [
                      {
                        "name": "privateKeyIds",
                        "type": "array",
                        "required": true,
                        "description": "List of unique identifiers for private keys within an organization",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      },
                      {
                        "name": "deleteWithoutExport",
                        "type": "boolean",
                        "required": false,
                        "description": "Optional parameter for deleting the private keys, even if any have not been previously exported. If they have been exported, this field is ignored."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "deletePrivateKeysResult",
                    "type": "object",
                    "required": true,
                    "description": "The deletePrivateKeysResult object",
                    "childFields": [
                      {
                        "name": "privateKeyIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of private key unique identifiers that were removed",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_DELETE_PRIVATE_KEYS",
              "description": "ACTIVITY_TYPE_DELETE_PRIVATE_KEYS option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "privateKeyIds",
              "type": "array",
              "required": true,
              "description": "List of unique identifiers for private keys within an organization",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            },
            {
              "name": "deleteWithoutExport",
              "type": "boolean",
              "required": false,
              "description": "Optional parameter for deleting the private keys, even if any have not been previously exported. If they have been exported, this field is ignored."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Delete Sub Organization",
    "path": "/public/v1/submit/delete_sub_organization",
    "method": "post",
    "description": "Deletes a sub organization",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_DELETE_SUB_ORGANIZATION"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "deleteSubOrganizationIntent",
                    "type": "object",
                    "required": true,
                    "description": "The deleteSubOrganizationIntent object",
                    "childFields": [
                      {
                        "name": "deleteWithoutExport",
                        "type": "boolean",
                        "required": false,
                        "description": "Sub-organization deletion, by default, requires associated wallets and private keys to be exported for security reasons. Set this boolean to true to force sub-organization deletion even if some wallets or private keys within it have not been exported yet. Default: false."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "deleteSubOrganizationResult",
                    "type": "object",
                    "required": true,
                    "description": "The deleteSubOrganizationResult object",
                    "childFields": [
                      {
                        "name": "subOrganizationUuid",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier of the sub organization that was removed"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_DELETE_SUB_ORGANIZATION",
              "description": "ACTIVITY_TYPE_DELETE_SUB_ORGANIZATION option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "deleteWithoutExport",
              "type": "boolean",
              "required": false,
              "description": "Sub-organization deletion, by default, requires associated wallets and private keys to be exported for security reasons. Set this boolean to true to force sub-organization deletion even if some wallets or private keys within it have not been exported yet. Default: false."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Delete User Tags",
    "path": "/public/v1/submit/delete_user_tags",
    "method": "post",
    "description": "Delete User Tags within an Organization",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_DELETE_USER_TAGS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "deleteUserTagsIntent",
                    "type": "object",
                    "required": true,
                    "description": "The deleteUserTagsIntent object",
                    "childFields": [
                      {
                        "name": "userTagIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of User Tag IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "deleteUserTagsResult",
                    "type": "object",
                    "required": true,
                    "description": "The deleteUserTagsResult object",
                    "childFields": [
                      {
                        "name": "userTagIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of User Tag IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      },
                      {
                        "name": "userIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of User IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_DELETE_USER_TAGS",
              "description": "ACTIVITY_TYPE_DELETE_USER_TAGS option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "userTagIds",
              "type": "array",
              "required": true,
              "description": "A list of User Tag IDs.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Delete Users",
    "path": "/public/v1/submit/delete_users",
    "method": "post",
    "description": "Delete Users within an Organization",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_DELETE_USERS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "deleteUsersIntent",
                    "type": "object",
                    "required": true,
                    "description": "The deleteUsersIntent object",
                    "childFields": [
                      {
                        "name": "userIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of User IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "deleteUsersResult",
                    "type": "object",
                    "required": true,
                    "description": "The deleteUsersResult object",
                    "childFields": [
                      {
                        "name": "userIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of User IDs.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_DELETE_USERS",
              "description": "ACTIVITY_TYPE_DELETE_USERS option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "userIds",
              "type": "array",
              "required": true,
              "description": "A list of User IDs.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Delete Wallets",
    "path": "/public/v1/submit/delete_wallets",
    "method": "post",
    "description": "Deletes wallets for an organization",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_DELETE_WALLETS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "deleteWalletsIntent",
                    "type": "object",
                    "required": true,
                    "description": "The deleteWalletsIntent object",
                    "childFields": [
                      {
                        "name": "walletIds",
                        "type": "array",
                        "required": true,
                        "description": "List of unique identifiers for wallets within an organization",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      },
                      {
                        "name": "deleteWithoutExport",
                        "type": "boolean",
                        "required": false,
                        "description": "Optional parameter for deleting the wallets, even if any have not been previously exported. If they have been exported, this field is ignored."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "deleteWalletsResult",
                    "type": "object",
                    "required": true,
                    "description": "The deleteWalletsResult object",
                    "childFields": [
                      {
                        "name": "walletIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of wallet unique identifiers that were removed",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_DELETE_WALLETS",
              "description": "ACTIVITY_TYPE_DELETE_WALLETS option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "walletIds",
              "type": "array",
              "required": true,
              "description": "List of unique identifiers for wallets within an organization",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            },
            {
              "name": "deleteWithoutExport",
              "type": "boolean",
              "required": false,
              "description": "Optional parameter for deleting the wallets, even if any have not been previously exported. If they have been exported, this field is ignored."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Perform Email Auth",
    "path": "/public/v1/submit/email_auth",
    "method": "post",
    "description": "Authenticate a user via Email",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_EMAIL_AUTH"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "emailAuthIntent",
                    "type": "object",
                    "required": true,
                    "description": "The emailAuthIntent object",
                    "childFields": [
                      {
                        "name": "email",
                        "type": "string",
                        "required": true,
                        "description": "Email of the authenticating user."
                      },
                      {
                        "name": "targetPublicKey",
                        "type": "string",
                        "required": true,
                        "description": "Client-side public key generated by the user, to which the email auth bundle (credentials) will be encrypted."
                      },
                      {
                        "name": "apiKeyName",
                        "type": "string",
                        "required": false,
                        "description": "Optional human-readable name for an API Key. If none provided, default to Email Auth - <Timestamp>"
                      },
                      {
                        "name": "expirationSeconds",
                        "type": "string",
                        "required": false,
                        "description": "Expiration window (in seconds) indicating how long the API key is valid. If not provided, a default of 15 minutes will be used."
                      },
                      {
                        "name": "emailCustomization",
                        "type": "object",
                        "required": false,
                        "description": "emailCustomization field",
                        "childFields": [
                          {
                            "name": "appName",
                            "type": "string",
                            "required": false,
                            "description": "The name of the application."
                          },
                          {
                            "name": "logoUrl",
                            "type": "string",
                            "required": false,
                            "description": "A URL pointing to a logo in PNG format. Note this logo will be resized to fit into 340px x 124px."
                          },
                          {
                            "name": "magicLinkTemplate",
                            "type": "string",
                            "required": false,
                            "description": "A template for the URL to be used in a magic link button, e.g. `https://dapp.xyz/%s`. The auth bundle will be interpolated into the `%s`."
                          },
                          {
                            "name": "templateVariables",
                            "type": "string",
                            "required": false,
                            "description": "JSON object containing key/value pairs to be used with custom templates."
                          },
                          {
                            "name": "templateId",
                            "type": "string",
                            "required": false,
                            "description": "Unique identifier for a given Email Template. If not specified, the default is the most recent Email Template."
                          }
                        ]
                      },
                      {
                        "name": "invalidateExisting",
                        "type": "boolean",
                        "required": false,
                        "description": "Invalidate all other previously generated Email Auth API keys"
                      },
                      {
                        "name": "sendFromEmailAddress",
                        "type": "string",
                        "required": false,
                        "description": "Optional custom email address from which to send the email"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "emailAuthResult",
                    "type": "object",
                    "required": true,
                    "description": "The emailAuthResult object",
                    "childFields": [
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for the authenticating User."
                      },
                      {
                        "name": "apiKeyId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for the created API key."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_EMAIL_AUTH_V2",
              "description": "ACTIVITY_TYPE_EMAIL_AUTH_V2 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "email",
              "type": "string",
              "required": true,
              "description": "Email of the authenticating user."
            },
            {
              "name": "targetPublicKey",
              "type": "string",
              "required": true,
              "description": "Client-side public key generated by the user, to which the email auth bundle (credentials) will be encrypted."
            },
            {
              "name": "apiKeyName",
              "type": "string",
              "required": false,
              "description": "Optional human-readable name for an API Key. If none provided, default to Email Auth - <Timestamp>"
            },
            {
              "name": "expirationSeconds",
              "type": "string",
              "required": false,
              "description": "Expiration window (in seconds) indicating how long the API key is valid. If not provided, a default of 15 minutes will be used."
            },
            {
              "name": "emailCustomization",
              "type": "object",
              "required": false,
              "description": "emailCustomization field",
              "childFields": [
                {
                  "name": "appName",
                  "type": "string",
                  "required": false,
                  "description": "The name of the application."
                },
                {
                  "name": "logoUrl",
                  "type": "string",
                  "required": false,
                  "description": "A URL pointing to a logo in PNG format. Note this logo will be resized to fit into 340px x 124px."
                },
                {
                  "name": "magicLinkTemplate",
                  "type": "string",
                  "required": false,
                  "description": "A template for the URL to be used in a magic link button, e.g. `https://dapp.xyz/%s`. The auth bundle will be interpolated into the `%s`."
                },
                {
                  "name": "templateVariables",
                  "type": "string",
                  "required": false,
                  "description": "JSON object containing key/value pairs to be used with custom templates."
                },
                {
                  "name": "templateId",
                  "type": "string",
                  "required": false,
                  "description": "Unique identifier for a given Email Template. If not specified, the default is the most recent Email Template."
                }
              ]
            },
            {
              "name": "invalidateExisting",
              "type": "boolean",
              "required": false,
              "description": "Invalidate all other previously generated Email Auth API keys"
            },
            {
              "name": "sendFromEmailAddress",
              "type": "string",
              "required": false,
              "description": "Optional custom email address from which to send the email"
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Export Private Key",
    "path": "/public/v1/submit/export_private_key",
    "method": "post",
    "description": "Exports a Private Key",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_EXPORT_PRIVATE_KEY"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "exportPrivateKeyIntent",
                    "type": "object",
                    "required": true,
                    "description": "The exportPrivateKeyIntent object",
                    "childFields": [
                      {
                        "name": "privateKeyId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Private Key."
                      },
                      {
                        "name": "targetPublicKey",
                        "type": "string",
                        "required": true,
                        "description": "Client-side public key generated by the user, to which the export bundle will be encrypted."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "exportPrivateKeyResult",
                    "type": "object",
                    "required": true,
                    "description": "The exportPrivateKeyResult object",
                    "childFields": [
                      {
                        "name": "privateKeyId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Private Key."
                      },
                      {
                        "name": "exportBundle",
                        "type": "string",
                        "required": true,
                        "description": "Export bundle containing a private key encrypted to the client's target public key."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_EXPORT_PRIVATE_KEY",
              "description": "ACTIVITY_TYPE_EXPORT_PRIVATE_KEY option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "privateKeyId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for a given Private Key."
            },
            {
              "name": "targetPublicKey",
              "type": "string",
              "required": true,
              "description": "Client-side public key generated by the user, to which the export bundle will be encrypted."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Export Wallet",
    "path": "/public/v1/submit/export_wallet",
    "method": "post",
    "description": "Exports a Wallet",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_EXPORT_WALLET"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "exportWalletIntent",
                    "type": "object",
                    "required": true,
                    "description": "The exportWalletIntent object",
                    "childFields": [
                      {
                        "name": "walletId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Wallet."
                      },
                      {
                        "name": "targetPublicKey",
                        "type": "string",
                        "required": true,
                        "description": "Client-side public key generated by the user, to which the export bundle will be encrypted."
                      },
                      {
                        "name": "language",
                        "type": "enum",
                        "required": false,
                        "description": "language field",
                        "enumOptions": [
                          {
                            "value": "MNEMONIC_LANGUAGE_ENGLISH",
                            "description": "MNEMONIC_LANGUAGE_ENGLISH option"
                          },
                          {
                            "value": "MNEMONIC_LANGUAGE_SIMPLIFIED_CHINESE",
                            "description": "MNEMONIC_LANGUAGE_SIMPLIFIED_CHINESE option"
                          },
                          {
                            "value": "MNEMONIC_LANGUAGE_TRADITIONAL_CHINESE",
                            "description": "MNEMONIC_LANGUAGE_TRADITIONAL_CHINESE option"
                          },
                          {
                            "value": "MNEMONIC_LANGUAGE_CZECH",
                            "description": "MNEMONIC_LANGUAGE_CZECH option"
                          },
                          {
                            "value": "MNEMONIC_LANGUAGE_FRENCH",
                            "description": "MNEMONIC_LANGUAGE_FRENCH option"
                          },
                          {
                            "value": "MNEMONIC_LANGUAGE_ITALIAN",
                            "description": "MNEMONIC_LANGUAGE_ITALIAN option"
                          },
                          {
                            "value": "MNEMONIC_LANGUAGE_JAPANESE",
                            "description": "MNEMONIC_LANGUAGE_JAPANESE option"
                          },
                          {
                            "value": "MNEMONIC_LANGUAGE_KOREAN",
                            "description": "MNEMONIC_LANGUAGE_KOREAN option"
                          },
                          {
                            "value": "MNEMONIC_LANGUAGE_SPANISH",
                            "description": "MNEMONIC_LANGUAGE_SPANISH option"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "exportWalletResult",
                    "type": "object",
                    "required": true,
                    "description": "The exportWalletResult object",
                    "childFields": [
                      {
                        "name": "walletId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Wallet."
                      },
                      {
                        "name": "exportBundle",
                        "type": "string",
                        "required": true,
                        "description": "Export bundle containing a wallet mnemonic + optional newline passphrase encrypted by the client's target public key."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_EXPORT_WALLET",
              "description": "ACTIVITY_TYPE_EXPORT_WALLET option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "walletId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for a given Wallet."
            },
            {
              "name": "targetPublicKey",
              "type": "string",
              "required": true,
              "description": "Client-side public key generated by the user, to which the export bundle will be encrypted."
            },
            {
              "name": "language",
              "type": "enum",
              "required": false,
              "description": "language field",
              "enumOptions": [
                {
                  "value": "MNEMONIC_LANGUAGE_ENGLISH",
                  "description": "MNEMONIC_LANGUAGE_ENGLISH option"
                },
                {
                  "value": "MNEMONIC_LANGUAGE_SIMPLIFIED_CHINESE",
                  "description": "MNEMONIC_LANGUAGE_SIMPLIFIED_CHINESE option"
                },
                {
                  "value": "MNEMONIC_LANGUAGE_TRADITIONAL_CHINESE",
                  "description": "MNEMONIC_LANGUAGE_TRADITIONAL_CHINESE option"
                },
                {
                  "value": "MNEMONIC_LANGUAGE_CZECH",
                  "description": "MNEMONIC_LANGUAGE_CZECH option"
                },
                {
                  "value": "MNEMONIC_LANGUAGE_FRENCH",
                  "description": "MNEMONIC_LANGUAGE_FRENCH option"
                },
                {
                  "value": "MNEMONIC_LANGUAGE_ITALIAN",
                  "description": "MNEMONIC_LANGUAGE_ITALIAN option"
                },
                {
                  "value": "MNEMONIC_LANGUAGE_JAPANESE",
                  "description": "MNEMONIC_LANGUAGE_JAPANESE option"
                },
                {
                  "value": "MNEMONIC_LANGUAGE_KOREAN",
                  "description": "MNEMONIC_LANGUAGE_KOREAN option"
                },
                {
                  "value": "MNEMONIC_LANGUAGE_SPANISH",
                  "description": "MNEMONIC_LANGUAGE_SPANISH option"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Export Wallet Account",
    "path": "/public/v1/submit/export_wallet_account",
    "method": "post",
    "description": "Exports a Wallet Account",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_EXPORT_WALLET_ACCOUNT"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "exportWalletAccountIntent",
                    "type": "object",
                    "required": true,
                    "description": "The exportWalletAccountIntent object",
                    "childFields": [
                      {
                        "name": "address",
                        "type": "string",
                        "required": true,
                        "description": "Address to identify Wallet Account."
                      },
                      {
                        "name": "targetPublicKey",
                        "type": "string",
                        "required": true,
                        "description": "Client-side public key generated by the user, to which the export bundle will be encrypted."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "exportWalletAccountResult",
                    "type": "object",
                    "required": true,
                    "description": "The exportWalletAccountResult object",
                    "childFields": [
                      {
                        "name": "address",
                        "type": "string",
                        "required": true,
                        "description": "Address to identify Wallet Account."
                      },
                      {
                        "name": "exportBundle",
                        "type": "string",
                        "required": true,
                        "description": "Export bundle containing a private key encrypted by the client's target public key."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_EXPORT_WALLET_ACCOUNT",
              "description": "ACTIVITY_TYPE_EXPORT_WALLET_ACCOUNT option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "address",
              "type": "string",
              "required": true,
              "description": "Address to identify Wallet Account."
            },
            {
              "name": "targetPublicKey",
              "type": "string",
              "required": true,
              "description": "Client-side public key generated by the user, to which the export bundle will be encrypted."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Import Private Key",
    "path": "/public/v1/submit/import_private_key",
    "method": "post",
    "description": "Imports a private key",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_IMPORT_PRIVATE_KEY"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "importPrivateKeyIntent",
                    "type": "object",
                    "required": true,
                    "description": "The importPrivateKeyIntent object",
                    "childFields": [
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "The ID of the User importing a Private Key."
                      },
                      {
                        "name": "privateKeyName",
                        "type": "string",
                        "required": true,
                        "description": "Human-readable name for a Private Key."
                      },
                      {
                        "name": "encryptedBundle",
                        "type": "string",
                        "required": true,
                        "description": "Bundle containing a raw private key encrypted to the enclave's target public key."
                      },
                      {
                        "name": "curve",
                        "type": "enum",
                        "required": true,
                        "description": "curve field",
                        "enumOptions": [
                          {
                            "value": "CURVE_SECP256K1",
                            "description": "CURVE_SECP256K1 option"
                          },
                          {
                            "value": "CURVE_ED25519",
                            "description": "CURVE_ED25519 option"
                          }
                        ]
                      },
                      {
                        "name": "addressFormats",
                        "type": "array",
                        "required": true,
                        "description": "Cryptocurrency-specific formats for a derived address (e.g., Ethereum).",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "enum",
                            "required": true,
                            "description": "item field",
                            "enumOptions": [
                              {
                                "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                                "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_COMPRESSED",
                                "description": "ADDRESS_FORMAT_COMPRESSED option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_ETHEREUM",
                                "description": "ADDRESS_FORMAT_ETHEREUM option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SOLANA",
                                "description": "ADDRESS_FORMAT_SOLANA option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_COSMOS",
                                "description": "ADDRESS_FORMAT_COSMOS option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TRON",
                                "description": "ADDRESS_FORMAT_TRON option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SUI",
                                "description": "ADDRESS_FORMAT_SUI option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_APTOS",
                                "description": "ADDRESS_FORMAT_APTOS option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SEI",
                                "description": "ADDRESS_FORMAT_SEI option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_XLM",
                                "description": "ADDRESS_FORMAT_XLM option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                                "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                                "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TON_V3R2",
                                "description": "ADDRESS_FORMAT_TON_V3R2 option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TON_V4R2",
                                "description": "ADDRESS_FORMAT_TON_V4R2 option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_XRP",
                                "description": "ADDRESS_FORMAT_XRP option"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "importPrivateKeyResult",
                    "type": "object",
                    "required": true,
                    "description": "The importPrivateKeyResult object",
                    "childFields": [
                      {
                        "name": "privateKeyId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a Private Key."
                      },
                      {
                        "name": "addresses",
                        "type": "array",
                        "required": true,
                        "description": "A list of addresses.",
                        "childFields": [
                          {
                            "name": "format",
                            "type": "enum",
                            "required": false,
                            "description": "format field",
                            "enumOptions": [
                              {
                                "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                                "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_COMPRESSED",
                                "description": "ADDRESS_FORMAT_COMPRESSED option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_ETHEREUM",
                                "description": "ADDRESS_FORMAT_ETHEREUM option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SOLANA",
                                "description": "ADDRESS_FORMAT_SOLANA option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_COSMOS",
                                "description": "ADDRESS_FORMAT_COSMOS option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TRON",
                                "description": "ADDRESS_FORMAT_TRON option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SUI",
                                "description": "ADDRESS_FORMAT_SUI option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_APTOS",
                                "description": "ADDRESS_FORMAT_APTOS option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SEI",
                                "description": "ADDRESS_FORMAT_SEI option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_XLM",
                                "description": "ADDRESS_FORMAT_XLM option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                                "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                                "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TON_V3R2",
                                "description": "ADDRESS_FORMAT_TON_V3R2 option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TON_V4R2",
                                "description": "ADDRESS_FORMAT_TON_V4R2 option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_XRP",
                                "description": "ADDRESS_FORMAT_XRP option"
                              }
                            ]
                          },
                          {
                            "name": "address",
                            "type": "string",
                            "required": false,
                            "description": "address field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_IMPORT_PRIVATE_KEY",
              "description": "ACTIVITY_TYPE_IMPORT_PRIVATE_KEY option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "userId",
              "type": "string",
              "required": true,
              "description": "The ID of the User importing a Private Key."
            },
            {
              "name": "privateKeyName",
              "type": "string",
              "required": true,
              "description": "Human-readable name for a Private Key."
            },
            {
              "name": "encryptedBundle",
              "type": "string",
              "required": true,
              "description": "Bundle containing a raw private key encrypted to the enclave's target public key."
            },
            {
              "name": "curve",
              "type": "enum",
              "required": true,
              "description": "curve field",
              "enumOptions": [
                {
                  "value": "CURVE_SECP256K1",
                  "description": "CURVE_SECP256K1 option"
                },
                {
                  "value": "CURVE_ED25519",
                  "description": "CURVE_ED25519 option"
                }
              ]
            },
            {
              "name": "addressFormats",
              "type": "array",
              "required": true,
              "description": "Cryptocurrency-specific formats for a derived address (e.g., Ethereum).",
              "childFields": [
                {
                  "name": "item",
                  "type": "enum",
                  "required": true,
                  "description": "item field",
                  "enumOptions": [
                    {
                      "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                      "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_COMPRESSED",
                      "description": "ADDRESS_FORMAT_COMPRESSED option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_ETHEREUM",
                      "description": "ADDRESS_FORMAT_ETHEREUM option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_SOLANA",
                      "description": "ADDRESS_FORMAT_SOLANA option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_COSMOS",
                      "description": "ADDRESS_FORMAT_COSMOS option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_TRON",
                      "description": "ADDRESS_FORMAT_TRON option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_SUI",
                      "description": "ADDRESS_FORMAT_SUI option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_APTOS",
                      "description": "ADDRESS_FORMAT_APTOS option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_SEI",
                      "description": "ADDRESS_FORMAT_SEI option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_XLM",
                      "description": "ADDRESS_FORMAT_XLM option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                      "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                      "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_TON_V3R2",
                      "description": "ADDRESS_FORMAT_TON_V3R2 option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_TON_V4R2",
                      "description": "ADDRESS_FORMAT_TON_V4R2 option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_XRP",
                      "description": "ADDRESS_FORMAT_XRP option"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Import Wallet",
    "path": "/public/v1/submit/import_wallet",
    "method": "post",
    "description": "Imports a wallet",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_IMPORT_WALLET"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "importWalletIntent",
                    "type": "object",
                    "required": true,
                    "description": "The importWalletIntent object",
                    "childFields": [
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "The ID of the User importing a Wallet."
                      },
                      {
                        "name": "walletName",
                        "type": "string",
                        "required": true,
                        "description": "Human-readable name for a Wallet."
                      },
                      {
                        "name": "encryptedBundle",
                        "type": "string",
                        "required": true,
                        "description": "Bundle containing a wallet mnemonic encrypted to the enclave's target public key."
                      },
                      {
                        "name": "accounts",
                        "type": "array",
                        "required": true,
                        "description": "A list of wallet Accounts.",
                        "childFields": [
                          {
                            "name": "curve",
                            "type": "enum",
                            "required": true,
                            "description": "curve field",
                            "enumOptions": [
                              {
                                "value": "CURVE_SECP256K1",
                                "description": "CURVE_SECP256K1 option"
                              },
                              {
                                "value": "CURVE_ED25519",
                                "description": "CURVE_ED25519 option"
                              }
                            ]
                          },
                          {
                            "name": "pathFormat",
                            "type": "enum",
                            "required": true,
                            "description": "pathFormat field",
                            "enumOptions": [
                              {
                                "value": "PATH_FORMAT_BIP32",
                                "description": "PATH_FORMAT_BIP32 option"
                              }
                            ]
                          },
                          {
                            "name": "path",
                            "type": "string",
                            "required": true,
                            "description": "Path used to generate a wallet Account."
                          },
                          {
                            "name": "addressFormat",
                            "type": "enum",
                            "required": true,
                            "description": "addressFormat field",
                            "enumOptions": [
                              {
                                "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                                "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_COMPRESSED",
                                "description": "ADDRESS_FORMAT_COMPRESSED option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_ETHEREUM",
                                "description": "ADDRESS_FORMAT_ETHEREUM option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SOLANA",
                                "description": "ADDRESS_FORMAT_SOLANA option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_COSMOS",
                                "description": "ADDRESS_FORMAT_COSMOS option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TRON",
                                "description": "ADDRESS_FORMAT_TRON option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SUI",
                                "description": "ADDRESS_FORMAT_SUI option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_APTOS",
                                "description": "ADDRESS_FORMAT_APTOS option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                                "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_SEI",
                                "description": "ADDRESS_FORMAT_SEI option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_XLM",
                                "description": "ADDRESS_FORMAT_XLM option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                                "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                                "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TON_V3R2",
                                "description": "ADDRESS_FORMAT_TON_V3R2 option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_TON_V4R2",
                                "description": "ADDRESS_FORMAT_TON_V4R2 option"
                              },
                              {
                                "value": "ADDRESS_FORMAT_XRP",
                                "description": "ADDRESS_FORMAT_XRP option"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "importWalletResult",
                    "type": "object",
                    "required": true,
                    "description": "The importWalletResult object",
                    "childFields": [
                      {
                        "name": "walletId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a Wallet."
                      },
                      {
                        "name": "addresses",
                        "type": "array",
                        "required": true,
                        "description": "A list of account addresses.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_IMPORT_WALLET",
              "description": "ACTIVITY_TYPE_IMPORT_WALLET option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "userId",
              "type": "string",
              "required": true,
              "description": "The ID of the User importing a Wallet."
            },
            {
              "name": "walletName",
              "type": "string",
              "required": true,
              "description": "Human-readable name for a Wallet."
            },
            {
              "name": "encryptedBundle",
              "type": "string",
              "required": true,
              "description": "Bundle containing a wallet mnemonic encrypted to the enclave's target public key."
            },
            {
              "name": "accounts",
              "type": "array",
              "required": true,
              "description": "A list of wallet Accounts.",
              "childFields": [
                {
                  "name": "curve",
                  "type": "enum",
                  "required": true,
                  "description": "curve field",
                  "enumOptions": [
                    {
                      "value": "CURVE_SECP256K1",
                      "description": "CURVE_SECP256K1 option"
                    },
                    {
                      "value": "CURVE_ED25519",
                      "description": "CURVE_ED25519 option"
                    }
                  ]
                },
                {
                  "name": "pathFormat",
                  "type": "enum",
                  "required": true,
                  "description": "pathFormat field",
                  "enumOptions": [
                    {
                      "value": "PATH_FORMAT_BIP32",
                      "description": "PATH_FORMAT_BIP32 option"
                    }
                  ]
                },
                {
                  "name": "path",
                  "type": "string",
                  "required": true,
                  "description": "Path used to generate a wallet Account."
                },
                {
                  "name": "addressFormat",
                  "type": "enum",
                  "required": true,
                  "description": "addressFormat field",
                  "enumOptions": [
                    {
                      "value": "ADDRESS_FORMAT_UNCOMPRESSED",
                      "description": "ADDRESS_FORMAT_UNCOMPRESSED option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_COMPRESSED",
                      "description": "ADDRESS_FORMAT_COMPRESSED option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_ETHEREUM",
                      "description": "ADDRESS_FORMAT_ETHEREUM option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_SOLANA",
                      "description": "ADDRESS_FORMAT_SOLANA option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_COSMOS",
                      "description": "ADDRESS_FORMAT_COSMOS option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_TRON",
                      "description": "ADDRESS_FORMAT_TRON option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_SUI",
                      "description": "ADDRESS_FORMAT_SUI option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_APTOS",
                      "description": "ADDRESS_FORMAT_APTOS option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
                      "description": "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_SEI",
                      "description": "ADDRESS_FORMAT_SEI option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_XLM",
                      "description": "ADDRESS_FORMAT_XLM option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_DOGE_MAINNET",
                      "description": "ADDRESS_FORMAT_DOGE_MAINNET option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_DOGE_TESTNET",
                      "description": "ADDRESS_FORMAT_DOGE_TESTNET option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_TON_V3R2",
                      "description": "ADDRESS_FORMAT_TON_V3R2 option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_TON_V4R2",
                      "description": "ADDRESS_FORMAT_TON_V4R2 option"
                    },
                    {
                      "value": "ADDRESS_FORMAT_XRP",
                      "description": "ADDRESS_FORMAT_XRP option"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Init Import Private Key",
    "path": "/public/v1/submit/init_import_private_key",
    "method": "post",
    "description": "Initializes a new private key import",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_INIT_IMPORT_PRIVATE_KEY"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "initImportPrivateKeyIntent",
                    "type": "object",
                    "required": true,
                    "description": "The initImportPrivateKeyIntent object",
                    "childFields": [
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "The ID of the User importing a Private Key."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "initImportPrivateKeyResult",
                    "type": "object",
                    "required": true,
                    "description": "The initImportPrivateKeyResult object",
                    "childFields": [
                      {
                        "name": "importBundle",
                        "type": "string",
                        "required": true,
                        "description": "Import bundle containing a public key and signature to use for importing client data."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_INIT_IMPORT_PRIVATE_KEY",
              "description": "ACTIVITY_TYPE_INIT_IMPORT_PRIVATE_KEY option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "userId",
              "type": "string",
              "required": true,
              "description": "The ID of the User importing a Private Key."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Init Import Wallet",
    "path": "/public/v1/submit/init_import_wallet",
    "method": "post",
    "description": "Initializes a new wallet import",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_INIT_IMPORT_WALLET"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "initImportWalletIntent",
                    "type": "object",
                    "required": true,
                    "description": "The initImportWalletIntent object",
                    "childFields": [
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "The ID of the User importing a Wallet."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "initImportWalletResult",
                    "type": "object",
                    "required": true,
                    "description": "The initImportWalletResult object",
                    "childFields": [
                      {
                        "name": "importBundle",
                        "type": "string",
                        "required": true,
                        "description": "Import bundle containing a public key and signature to use for importing client data."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_INIT_IMPORT_WALLET",
              "description": "ACTIVITY_TYPE_INIT_IMPORT_WALLET option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "userId",
              "type": "string",
              "required": true,
              "description": "The ID of the User importing a Wallet."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Init OTP auth",
    "path": "/public/v1/submit/init_otp_auth",
    "method": "post",
    "description": "Initiate an OTP auth activity",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_INIT_OTP_AUTH"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "initOtpAuthIntent",
                    "type": "object",
                    "required": true,
                    "description": "The initOtpAuthIntent object",
                    "childFields": [
                      {
                        "name": "otpType",
                        "type": "string",
                        "required": true,
                        "description": "Enum to specifiy whether to send OTP via SMS or email"
                      },
                      {
                        "name": "contact",
                        "type": "string",
                        "required": true,
                        "description": "Email or phone number to send the OTP code to"
                      },
                      {
                        "name": "emailCustomization",
                        "type": "object",
                        "required": false,
                        "description": "emailCustomization field",
                        "childFields": [
                          {
                            "name": "appName",
                            "type": "string",
                            "required": false,
                            "description": "The name of the application."
                          },
                          {
                            "name": "logoUrl",
                            "type": "string",
                            "required": false,
                            "description": "A URL pointing to a logo in PNG format. Note this logo will be resized to fit into 340px x 124px."
                          },
                          {
                            "name": "magicLinkTemplate",
                            "type": "string",
                            "required": false,
                            "description": "A template for the URL to be used in a magic link button, e.g. `https://dapp.xyz/%s`. The auth bundle will be interpolated into the `%s`."
                          },
                          {
                            "name": "templateVariables",
                            "type": "string",
                            "required": false,
                            "description": "JSON object containing key/value pairs to be used with custom templates."
                          },
                          {
                            "name": "templateId",
                            "type": "string",
                            "required": false,
                            "description": "Unique identifier for a given Email Template. If not specified, the default is the most recent Email Template."
                          }
                        ]
                      },
                      {
                        "name": "smsCustomization",
                        "type": "object",
                        "required": false,
                        "description": "smsCustomization field",
                        "childFields": [
                          {
                            "name": "template",
                            "type": "string",
                            "required": false,
                            "description": "Template containing references to .OtpCode i.e Your OTP is {{.OtpCode}}"
                          }
                        ]
                      },
                      {
                        "name": "userIdentifier",
                        "type": "string",
                        "required": false,
                        "description": "Optional client-generated user identifier to enable per-user rate limiting for SMS auth. We recommend using a hash of the client-side IP address."
                      },
                      {
                        "name": "sendFromEmailAddress",
                        "type": "string",
                        "required": false,
                        "description": "Optional custom email address from which to send the OTP email"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "initOtpAuthResult",
                    "type": "object",
                    "required": true,
                    "description": "The initOtpAuthResult object",
                    "childFields": [
                      {
                        "name": "otpId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for an OTP authentication"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_INIT_OTP_AUTH",
              "description": "ACTIVITY_TYPE_INIT_OTP_AUTH option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "otpType",
              "type": "string",
              "required": true,
              "description": "Enum to specifiy whether to send OTP via SMS or email"
            },
            {
              "name": "contact",
              "type": "string",
              "required": true,
              "description": "Email or phone number to send the OTP code to"
            },
            {
              "name": "emailCustomization",
              "type": "object",
              "required": false,
              "description": "emailCustomization field",
              "childFields": [
                {
                  "name": "appName",
                  "type": "string",
                  "required": false,
                  "description": "The name of the application."
                },
                {
                  "name": "logoUrl",
                  "type": "string",
                  "required": false,
                  "description": "A URL pointing to a logo in PNG format. Note this logo will be resized to fit into 340px x 124px."
                },
                {
                  "name": "magicLinkTemplate",
                  "type": "string",
                  "required": false,
                  "description": "A template for the URL to be used in a magic link button, e.g. `https://dapp.xyz/%s`. The auth bundle will be interpolated into the `%s`."
                },
                {
                  "name": "templateVariables",
                  "type": "string",
                  "required": false,
                  "description": "JSON object containing key/value pairs to be used with custom templates."
                },
                {
                  "name": "templateId",
                  "type": "string",
                  "required": false,
                  "description": "Unique identifier for a given Email Template. If not specified, the default is the most recent Email Template."
                }
              ]
            },
            {
              "name": "smsCustomization",
              "type": "object",
              "required": false,
              "description": "smsCustomization field",
              "childFields": [
                {
                  "name": "template",
                  "type": "string",
                  "required": false,
                  "description": "Template containing references to .OtpCode i.e Your OTP is {{.OtpCode}}"
                }
              ]
            },
            {
              "name": "userIdentifier",
              "type": "string",
              "required": false,
              "description": "Optional client-generated user identifier to enable per-user rate limiting for SMS auth. We recommend using a hash of the client-side IP address."
            },
            {
              "name": "sendFromEmailAddress",
              "type": "string",
              "required": false,
              "description": "Optional custom email address from which to send the OTP email"
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Init Email Recovery",
    "path": "/public/v1/submit/init_user_email_recovery",
    "method": "post",
    "description": "Initializes a new email recovery",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_INIT_USER_EMAIL_RECOVERY"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "initUserEmailRecoveryIntent",
                    "type": "object",
                    "required": true,
                    "description": "The initUserEmailRecoveryIntent object",
                    "childFields": [
                      {
                        "name": "email",
                        "type": "string",
                        "required": true,
                        "description": "Email of the user starting recovery"
                      },
                      {
                        "name": "targetPublicKey",
                        "type": "string",
                        "required": true,
                        "description": "Client-side public key generated by the user, to which the recovery bundle will be encrypted."
                      },
                      {
                        "name": "expirationSeconds",
                        "type": "string",
                        "required": false,
                        "description": "Expiration window (in seconds) indicating how long the recovery credential is valid. If not provided, a default of 15 minutes will be used."
                      },
                      {
                        "name": "emailCustomization",
                        "type": "object",
                        "required": false,
                        "description": "emailCustomization field",
                        "childFields": [
                          {
                            "name": "appName",
                            "type": "string",
                            "required": false,
                            "description": "The name of the application."
                          },
                          {
                            "name": "logoUrl",
                            "type": "string",
                            "required": false,
                            "description": "A URL pointing to a logo in PNG format. Note this logo will be resized to fit into 340px x 124px."
                          },
                          {
                            "name": "magicLinkTemplate",
                            "type": "string",
                            "required": false,
                            "description": "A template for the URL to be used in a magic link button, e.g. `https://dapp.xyz/%s`. The auth bundle will be interpolated into the `%s`."
                          },
                          {
                            "name": "templateVariables",
                            "type": "string",
                            "required": false,
                            "description": "JSON object containing key/value pairs to be used with custom templates."
                          },
                          {
                            "name": "templateId",
                            "type": "string",
                            "required": false,
                            "description": "Unique identifier for a given Email Template. If not specified, the default is the most recent Email Template."
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "initUserEmailRecoveryResult",
                    "type": "object",
                    "required": true,
                    "description": "The initUserEmailRecoveryResult object",
                    "childFields": [
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for the user being recovered."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_INIT_USER_EMAIL_RECOVERY",
              "description": "ACTIVITY_TYPE_INIT_USER_EMAIL_RECOVERY option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "email",
              "type": "string",
              "required": true,
              "description": "Email of the user starting recovery"
            },
            {
              "name": "targetPublicKey",
              "type": "string",
              "required": true,
              "description": "Client-side public key generated by the user, to which the recovery bundle will be encrypted."
            },
            {
              "name": "expirationSeconds",
              "type": "string",
              "required": false,
              "description": "Expiration window (in seconds) indicating how long the recovery credential is valid. If not provided, a default of 15 minutes will be used."
            },
            {
              "name": "emailCustomization",
              "type": "object",
              "required": false,
              "description": "emailCustomization field",
              "childFields": [
                {
                  "name": "appName",
                  "type": "string",
                  "required": false,
                  "description": "The name of the application."
                },
                {
                  "name": "logoUrl",
                  "type": "string",
                  "required": false,
                  "description": "A URL pointing to a logo in PNG format. Note this logo will be resized to fit into 340px x 124px."
                },
                {
                  "name": "magicLinkTemplate",
                  "type": "string",
                  "required": false,
                  "description": "A template for the URL to be used in a magic link button, e.g. `https://dapp.xyz/%s`. The auth bundle will be interpolated into the `%s`."
                },
                {
                  "name": "templateVariables",
                  "type": "string",
                  "required": false,
                  "description": "JSON object containing key/value pairs to be used with custom templates."
                },
                {
                  "name": "templateId",
                  "type": "string",
                  "required": false,
                  "description": "Unique identifier for a given Email Template. If not specified, the default is the most recent Email Template."
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Oauth",
    "path": "/public/v1/submit/oauth",
    "method": "post",
    "description": "Authenticate a user with an Oidc token (Oauth) - BETA",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_OAUTH"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "oauthIntent",
                    "type": "object",
                    "required": true,
                    "description": "The oauthIntent object",
                    "childFields": [
                      {
                        "name": "oidcToken",
                        "type": "string",
                        "required": true,
                        "description": "Base64 encoded OIDC token"
                      },
                      {
                        "name": "targetPublicKey",
                        "type": "string",
                        "required": true,
                        "description": "Client-side public key generated by the user, to which the oauth bundle (credentials) will be encrypted."
                      },
                      {
                        "name": "apiKeyName",
                        "type": "string",
                        "required": false,
                        "description": "Optional human-readable name for an API Key. If none provided, default to Oauth - <Timestamp>"
                      },
                      {
                        "name": "expirationSeconds",
                        "type": "string",
                        "required": false,
                        "description": "Expiration window (in seconds) indicating how long the API key is valid. If not provided, a default of 15 minutes will be used."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "oauthResult",
                    "type": "object",
                    "required": true,
                    "description": "The oauthResult object",
                    "childFields": [
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for the authenticating User."
                      },
                      {
                        "name": "apiKeyId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for the created API key."
                      },
                      {
                        "name": "credentialBundle",
                        "type": "string",
                        "required": true,
                        "description": "HPKE encrypted credential bundle"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_OAUTH",
              "description": "ACTIVITY_TYPE_OAUTH option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "oidcToken",
              "type": "string",
              "required": true,
              "description": "Base64 encoded OIDC token"
            },
            {
              "name": "targetPublicKey",
              "type": "string",
              "required": true,
              "description": "Client-side public key generated by the user, to which the oauth bundle (credentials) will be encrypted."
            },
            {
              "name": "apiKeyName",
              "type": "string",
              "required": false,
              "description": "Optional human-readable name for an API Key. If none provided, default to Oauth - <Timestamp>"
            },
            {
              "name": "expirationSeconds",
              "type": "string",
              "required": false,
              "description": "Expiration window (in seconds) indicating how long the API key is valid. If not provided, a default of 15 minutes will be used."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "OTP auth",
    "path": "/public/v1/submit/otp_auth",
    "method": "post",
    "description": "Authenticate a user with an OTP code sent via email or SMS",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_OTP_AUTH"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "otpAuthIntent",
                    "type": "object",
                    "required": true,
                    "description": "The otpAuthIntent object",
                    "childFields": [
                      {
                        "name": "otpId",
                        "type": "string",
                        "required": true,
                        "description": "ID representing the result of an init OTP activity."
                      },
                      {
                        "name": "otpCode",
                        "type": "string",
                        "required": true,
                        "description": "6 digit OTP code sent out to a user's contact (email or SMS)"
                      },
                      {
                        "name": "targetPublicKey",
                        "type": "string",
                        "required": false,
                        "description": "Client-side public key generated by the user, to which the OTP bundle (credentials) will be encrypted."
                      },
                      {
                        "name": "apiKeyName",
                        "type": "string",
                        "required": false,
                        "description": "Optional human-readable name for an API Key. If none provided, default to OTP Auth - <Timestamp>"
                      },
                      {
                        "name": "expirationSeconds",
                        "type": "string",
                        "required": false,
                        "description": "Expiration window (in seconds) indicating how long the API key is valid. If not provided, a default of 15 minutes will be used."
                      },
                      {
                        "name": "invalidateExisting",
                        "type": "boolean",
                        "required": false,
                        "description": "Invalidate all other previously generated OTP Auth API keys"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "otpAuthResult",
                    "type": "object",
                    "required": true,
                    "description": "The otpAuthResult object",
                    "childFields": [
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for the authenticating User."
                      },
                      {
                        "name": "apiKeyId",
                        "type": "string",
                        "required": false,
                        "description": "Unique identifier for the created API key."
                      },
                      {
                        "name": "credentialBundle",
                        "type": "string",
                        "required": false,
                        "description": "HPKE encrypted credential bundle"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_OTP_AUTH",
              "description": "ACTIVITY_TYPE_OTP_AUTH option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "otpId",
              "type": "string",
              "required": true,
              "description": "ID representing the result of an init OTP activity."
            },
            {
              "name": "otpCode",
              "type": "string",
              "required": true,
              "description": "6 digit OTP code sent out to a user's contact (email or SMS)"
            },
            {
              "name": "targetPublicKey",
              "type": "string",
              "required": false,
              "description": "Client-side public key generated by the user, to which the OTP bundle (credentials) will be encrypted."
            },
            {
              "name": "apiKeyName",
              "type": "string",
              "required": false,
              "description": "Optional human-readable name for an API Key. If none provided, default to OTP Auth - <Timestamp>"
            },
            {
              "name": "expirationSeconds",
              "type": "string",
              "required": false,
              "description": "Expiration window (in seconds) indicating how long the API key is valid. If not provided, a default of 15 minutes will be used."
            },
            {
              "name": "invalidateExisting",
              "type": "boolean",
              "required": false,
              "description": "Invalidate all other previously generated OTP Auth API keys"
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Recover a user",
    "path": "/public/v1/submit/recover_user",
    "method": "post",
    "description": "Completes the process of recovering a user by adding an authenticator",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_RECOVER_USER"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "recoverUserIntent",
                    "type": "object",
                    "required": true,
                    "description": "The recoverUserIntent object",
                    "childFields": [
                      {
                        "name": "authenticator",
                        "type": "object",
                        "required": true,
                        "description": "authenticator field",
                        "childFields": [
                          {
                            "name": "authenticatorName",
                            "type": "string",
                            "required": true,
                            "description": "Human-readable name for an Authenticator."
                          },
                          {
                            "name": "challenge",
                            "type": "string",
                            "required": true,
                            "description": "Challenge presented for authentication purposes."
                          },
                          {
                            "name": "attestation",
                            "type": "object",
                            "required": true,
                            "description": "attestation field",
                            "childFields": [
                              {
                                "name": "credentialId",
                                "type": "string",
                                "required": true,
                                "description": "The cbor encoded then base64 url encoded id of the credential."
                              },
                              {
                                "name": "clientDataJson",
                                "type": "string",
                                "required": true,
                                "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                              },
                              {
                                "name": "attestationObject",
                                "type": "string",
                                "required": true,
                                "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                              },
                              {
                                "name": "transports",
                                "type": "array",
                                "required": true,
                                "description": "The type of authenticator transports.",
                                "childFields": [
                                  {
                                    "name": "item",
                                    "type": "enum",
                                    "required": true,
                                    "description": "item field",
                                    "enumOptions": [
                                      {
                                        "value": "AUTHENTICATOR_TRANSPORT_BLE",
                                        "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                                      },
                                      {
                                        "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                                        "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                                      },
                                      {
                                        "value": "AUTHENTICATOR_TRANSPORT_NFC",
                                        "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                                      },
                                      {
                                        "value": "AUTHENTICATOR_TRANSPORT_USB",
                                        "description": "AUTHENTICATOR_TRANSPORT_USB option"
                                      },
                                      {
                                        "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                                        "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for the user performing recovery."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "recoverUserResult",
                    "type": "object",
                    "required": true,
                    "description": "The recoverUserResult object",
                    "childFields": [
                      {
                        "name": "authenticatorId",
                        "type": "array",
                        "required": true,
                        "description": "ID of the authenticator created.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_RECOVER_USER",
              "description": "ACTIVITY_TYPE_RECOVER_USER option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "authenticator",
              "type": "object",
              "required": true,
              "description": "authenticator field",
              "childFields": [
                {
                  "name": "authenticatorName",
                  "type": "string",
                  "required": true,
                  "description": "Human-readable name for an Authenticator."
                },
                {
                  "name": "challenge",
                  "type": "string",
                  "required": true,
                  "description": "Challenge presented for authentication purposes."
                },
                {
                  "name": "attestation",
                  "type": "object",
                  "required": true,
                  "description": "attestation field",
                  "childFields": [
                    {
                      "name": "credentialId",
                      "type": "string",
                      "required": true,
                      "description": "The cbor encoded then base64 url encoded id of the credential."
                    },
                    {
                      "name": "clientDataJson",
                      "type": "string",
                      "required": true,
                      "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
                    },
                    {
                      "name": "attestationObject",
                      "type": "string",
                      "required": true,
                      "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
                    },
                    {
                      "name": "transports",
                      "type": "array",
                      "required": true,
                      "description": "The type of authenticator transports.",
                      "childFields": [
                        {
                          "name": "item",
                          "type": "enum",
                          "required": true,
                          "description": "item field",
                          "enumOptions": [
                            {
                              "value": "AUTHENTICATOR_TRANSPORT_BLE",
                              "description": "AUTHENTICATOR_TRANSPORT_BLE option"
                            },
                            {
                              "value": "AUTHENTICATOR_TRANSPORT_INTERNAL",
                              "description": "AUTHENTICATOR_TRANSPORT_INTERNAL option"
                            },
                            {
                              "value": "AUTHENTICATOR_TRANSPORT_NFC",
                              "description": "AUTHENTICATOR_TRANSPORT_NFC option"
                            },
                            {
                              "value": "AUTHENTICATOR_TRANSPORT_USB",
                              "description": "AUTHENTICATOR_TRANSPORT_USB option"
                            },
                            {
                              "value": "AUTHENTICATOR_TRANSPORT_HYBRID",
                              "description": "AUTHENTICATOR_TRANSPORT_HYBRID option"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "userId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for the user performing recovery."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Remove Organization Feature",
    "path": "/public/v1/submit/remove_organization_feature",
    "method": "post",
    "description": "Removes an organization feature. This activity must be approved by the current root quorum.",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_REMOVE_ORGANIZATION_FEATURE"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "removeOrganizationFeatureIntent",
                    "type": "object",
                    "required": true,
                    "description": "The removeOrganizationFeatureIntent object",
                    "childFields": [
                      {
                        "name": "name",
                        "type": "enum",
                        "required": true,
                        "description": "name field",
                        "enumOptions": [
                          {
                            "value": "FEATURE_NAME_ROOT_USER_EMAIL_RECOVERY",
                            "description": "FEATURE_NAME_ROOT_USER_EMAIL_RECOVERY option"
                          },
                          {
                            "value": "FEATURE_NAME_WEBAUTHN_ORIGINS",
                            "description": "FEATURE_NAME_WEBAUTHN_ORIGINS option"
                          },
                          {
                            "value": "FEATURE_NAME_EMAIL_AUTH",
                            "description": "FEATURE_NAME_EMAIL_AUTH option"
                          },
                          {
                            "value": "FEATURE_NAME_EMAIL_RECOVERY",
                            "description": "FEATURE_NAME_EMAIL_RECOVERY option"
                          },
                          {
                            "value": "FEATURE_NAME_WEBHOOK",
                            "description": "FEATURE_NAME_WEBHOOK option"
                          },
                          {
                            "value": "FEATURE_NAME_SMS_AUTH",
                            "description": "FEATURE_NAME_SMS_AUTH option"
                          },
                          {
                            "value": "FEATURE_NAME_OTP_EMAIL_AUTH",
                            "description": "FEATURE_NAME_OTP_EMAIL_AUTH option"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "removeOrganizationFeatureResult",
                    "type": "object",
                    "required": true,
                    "description": "The removeOrganizationFeatureResult object",
                    "childFields": [
                      {
                        "name": "features",
                        "type": "array",
                        "required": true,
                        "description": "Resulting list of organization features.",
                        "childFields": [
                          {
                            "name": "name",
                            "type": "enum",
                            "required": false,
                            "description": "name field",
                            "enumOptions": [
                              {
                                "value": "FEATURE_NAME_ROOT_USER_EMAIL_RECOVERY",
                                "description": "FEATURE_NAME_ROOT_USER_EMAIL_RECOVERY option"
                              },
                              {
                                "value": "FEATURE_NAME_WEBAUTHN_ORIGINS",
                                "description": "FEATURE_NAME_WEBAUTHN_ORIGINS option"
                              },
                              {
                                "value": "FEATURE_NAME_EMAIL_AUTH",
                                "description": "FEATURE_NAME_EMAIL_AUTH option"
                              },
                              {
                                "value": "FEATURE_NAME_EMAIL_RECOVERY",
                                "description": "FEATURE_NAME_EMAIL_RECOVERY option"
                              },
                              {
                                "value": "FEATURE_NAME_WEBHOOK",
                                "description": "FEATURE_NAME_WEBHOOK option"
                              },
                              {
                                "value": "FEATURE_NAME_SMS_AUTH",
                                "description": "FEATURE_NAME_SMS_AUTH option"
                              },
                              {
                                "value": "FEATURE_NAME_OTP_EMAIL_AUTH",
                                "description": "FEATURE_NAME_OTP_EMAIL_AUTH option"
                              }
                            ]
                          },
                          {
                            "name": "value",
                            "type": "string",
                            "required": false,
                            "description": "value field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_REMOVE_ORGANIZATION_FEATURE",
              "description": "ACTIVITY_TYPE_REMOVE_ORGANIZATION_FEATURE option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "name",
              "type": "enum",
              "required": true,
              "description": "name field",
              "enumOptions": [
                {
                  "value": "FEATURE_NAME_ROOT_USER_EMAIL_RECOVERY",
                  "description": "FEATURE_NAME_ROOT_USER_EMAIL_RECOVERY option"
                },
                {
                  "value": "FEATURE_NAME_WEBAUTHN_ORIGINS",
                  "description": "FEATURE_NAME_WEBAUTHN_ORIGINS option"
                },
                {
                  "value": "FEATURE_NAME_EMAIL_AUTH",
                  "description": "FEATURE_NAME_EMAIL_AUTH option"
                },
                {
                  "value": "FEATURE_NAME_EMAIL_RECOVERY",
                  "description": "FEATURE_NAME_EMAIL_RECOVERY option"
                },
                {
                  "value": "FEATURE_NAME_WEBHOOK",
                  "description": "FEATURE_NAME_WEBHOOK option"
                },
                {
                  "value": "FEATURE_NAME_SMS_AUTH",
                  "description": "FEATURE_NAME_SMS_AUTH option"
                },
                {
                  "value": "FEATURE_NAME_OTP_EMAIL_AUTH",
                  "description": "FEATURE_NAME_OTP_EMAIL_AUTH option"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Set Organization Feature",
    "path": "/public/v1/submit/set_organization_feature",
    "method": "post",
    "description": "Sets an organization feature. This activity must be approved by the current root quorum.",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_SET_ORGANIZATION_FEATURE"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "setOrganizationFeatureIntent",
                    "type": "object",
                    "required": true,
                    "description": "The setOrganizationFeatureIntent object",
                    "childFields": [
                      {
                        "name": "name",
                        "type": "enum",
                        "required": true,
                        "description": "name field",
                        "enumOptions": [
                          {
                            "value": "FEATURE_NAME_ROOT_USER_EMAIL_RECOVERY",
                            "description": "FEATURE_NAME_ROOT_USER_EMAIL_RECOVERY option"
                          },
                          {
                            "value": "FEATURE_NAME_WEBAUTHN_ORIGINS",
                            "description": "FEATURE_NAME_WEBAUTHN_ORIGINS option"
                          },
                          {
                            "value": "FEATURE_NAME_EMAIL_AUTH",
                            "description": "FEATURE_NAME_EMAIL_AUTH option"
                          },
                          {
                            "value": "FEATURE_NAME_EMAIL_RECOVERY",
                            "description": "FEATURE_NAME_EMAIL_RECOVERY option"
                          },
                          {
                            "value": "FEATURE_NAME_WEBHOOK",
                            "description": "FEATURE_NAME_WEBHOOK option"
                          },
                          {
                            "value": "FEATURE_NAME_SMS_AUTH",
                            "description": "FEATURE_NAME_SMS_AUTH option"
                          },
                          {
                            "value": "FEATURE_NAME_OTP_EMAIL_AUTH",
                            "description": "FEATURE_NAME_OTP_EMAIL_AUTH option"
                          }
                        ]
                      },
                      {
                        "name": "value",
                        "type": "string",
                        "required": true,
                        "description": "Optional value for the feature. Will override existing values if feature is already set."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "setOrganizationFeatureResult",
                    "type": "object",
                    "required": true,
                    "description": "The setOrganizationFeatureResult object",
                    "childFields": [
                      {
                        "name": "features",
                        "type": "array",
                        "required": true,
                        "description": "Resulting list of organization features.",
                        "childFields": [
                          {
                            "name": "name",
                            "type": "enum",
                            "required": false,
                            "description": "name field",
                            "enumOptions": [
                              {
                                "value": "FEATURE_NAME_ROOT_USER_EMAIL_RECOVERY",
                                "description": "FEATURE_NAME_ROOT_USER_EMAIL_RECOVERY option"
                              },
                              {
                                "value": "FEATURE_NAME_WEBAUTHN_ORIGINS",
                                "description": "FEATURE_NAME_WEBAUTHN_ORIGINS option"
                              },
                              {
                                "value": "FEATURE_NAME_EMAIL_AUTH",
                                "description": "FEATURE_NAME_EMAIL_AUTH option"
                              },
                              {
                                "value": "FEATURE_NAME_EMAIL_RECOVERY",
                                "description": "FEATURE_NAME_EMAIL_RECOVERY option"
                              },
                              {
                                "value": "FEATURE_NAME_WEBHOOK",
                                "description": "FEATURE_NAME_WEBHOOK option"
                              },
                              {
                                "value": "FEATURE_NAME_SMS_AUTH",
                                "description": "FEATURE_NAME_SMS_AUTH option"
                              },
                              {
                                "value": "FEATURE_NAME_OTP_EMAIL_AUTH",
                                "description": "FEATURE_NAME_OTP_EMAIL_AUTH option"
                              }
                            ]
                          },
                          {
                            "name": "value",
                            "type": "string",
                            "required": false,
                            "description": "value field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_SET_ORGANIZATION_FEATURE",
              "description": "ACTIVITY_TYPE_SET_ORGANIZATION_FEATURE option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "name",
              "type": "enum",
              "required": true,
              "description": "name field",
              "enumOptions": [
                {
                  "value": "FEATURE_NAME_ROOT_USER_EMAIL_RECOVERY",
                  "description": "FEATURE_NAME_ROOT_USER_EMAIL_RECOVERY option"
                },
                {
                  "value": "FEATURE_NAME_WEBAUTHN_ORIGINS",
                  "description": "FEATURE_NAME_WEBAUTHN_ORIGINS option"
                },
                {
                  "value": "FEATURE_NAME_EMAIL_AUTH",
                  "description": "FEATURE_NAME_EMAIL_AUTH option"
                },
                {
                  "value": "FEATURE_NAME_EMAIL_RECOVERY",
                  "description": "FEATURE_NAME_EMAIL_RECOVERY option"
                },
                {
                  "value": "FEATURE_NAME_WEBHOOK",
                  "description": "FEATURE_NAME_WEBHOOK option"
                },
                {
                  "value": "FEATURE_NAME_SMS_AUTH",
                  "description": "FEATURE_NAME_SMS_AUTH option"
                },
                {
                  "value": "FEATURE_NAME_OTP_EMAIL_AUTH",
                  "description": "FEATURE_NAME_OTP_EMAIL_AUTH option"
                }
              ]
            },
            {
              "name": "value",
              "type": "string",
              "required": true,
              "description": "Optional value for the feature. Will override existing values if feature is already set."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Sign Raw Payload",
    "path": "/public/v1/submit/sign_raw_payload",
    "method": "post",
    "description": "Sign a raw payload",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_SIGN_RAW_PAYLOAD"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "signRawPayloadIntent",
                    "type": "object",
                    "required": true,
                    "description": "The signRawPayloadIntent object",
                    "childFields": [
                      {
                        "name": "privateKeyId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Private Key."
                      },
                      {
                        "name": "payload",
                        "type": "string",
                        "required": true,
                        "description": "Raw unsigned payload to be signed."
                      },
                      {
                        "name": "encoding",
                        "type": "enum",
                        "required": true,
                        "description": "encoding field",
                        "enumOptions": [
                          {
                            "value": "PAYLOAD_ENCODING_HEXADECIMAL",
                            "description": "PAYLOAD_ENCODING_HEXADECIMAL option"
                          },
                          {
                            "value": "PAYLOAD_ENCODING_TEXT_UTF8",
                            "description": "PAYLOAD_ENCODING_TEXT_UTF8 option"
                          }
                        ]
                      },
                      {
                        "name": "hashFunction",
                        "type": "enum",
                        "required": true,
                        "description": "hashFunction field",
                        "enumOptions": [
                          {
                            "value": "HASH_FUNCTION_NO_OP",
                            "description": "HASH_FUNCTION_NO_OP option"
                          },
                          {
                            "value": "HASH_FUNCTION_SHA256",
                            "description": "HASH_FUNCTION_SHA256 option"
                          },
                          {
                            "value": "HASH_FUNCTION_KECCAK256",
                            "description": "HASH_FUNCTION_KECCAK256 option"
                          },
                          {
                            "value": "HASH_FUNCTION_NOT_APPLICABLE",
                            "description": "HASH_FUNCTION_NOT_APPLICABLE option"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "signRawPayloadResult",
                    "type": "object",
                    "required": true,
                    "description": "The signRawPayloadResult object",
                    "childFields": [
                      {
                        "name": "r",
                        "type": "string",
                        "required": true,
                        "description": "Component of an ECSDA signature."
                      },
                      {
                        "name": "s",
                        "type": "string",
                        "required": true,
                        "description": "Component of an ECSDA signature."
                      },
                      {
                        "name": "v",
                        "type": "string",
                        "required": true,
                        "description": "Component of an ECSDA signature."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_SIGN_RAW_PAYLOAD_V2",
              "description": "ACTIVITY_TYPE_SIGN_RAW_PAYLOAD_V2 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "signWith",
              "type": "string",
              "required": true,
              "description": "A Wallet account address, Private Key address, or Private Key identifier."
            },
            {
              "name": "payload",
              "type": "string",
              "required": true,
              "description": "Raw unsigned payload to be signed."
            },
            {
              "name": "encoding",
              "type": "enum",
              "required": true,
              "description": "encoding field",
              "enumOptions": [
                {
                  "value": "PAYLOAD_ENCODING_HEXADECIMAL",
                  "description": "PAYLOAD_ENCODING_HEXADECIMAL option"
                },
                {
                  "value": "PAYLOAD_ENCODING_TEXT_UTF8",
                  "description": "PAYLOAD_ENCODING_TEXT_UTF8 option"
                }
              ]
            },
            {
              "name": "hashFunction",
              "type": "enum",
              "required": true,
              "description": "hashFunction field",
              "enumOptions": [
                {
                  "value": "HASH_FUNCTION_NO_OP",
                  "description": "HASH_FUNCTION_NO_OP option"
                },
                {
                  "value": "HASH_FUNCTION_SHA256",
                  "description": "HASH_FUNCTION_SHA256 option"
                },
                {
                  "value": "HASH_FUNCTION_KECCAK256",
                  "description": "HASH_FUNCTION_KECCAK256 option"
                },
                {
                  "value": "HASH_FUNCTION_NOT_APPLICABLE",
                  "description": "HASH_FUNCTION_NOT_APPLICABLE option"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Sign Raw Payloads",
    "path": "/public/v1/submit/sign_raw_payloads",
    "method": "post",
    "description": "Sign multiple raw payloads with the same signing parameters",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_SIGN_RAW_PAYLOADS"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "signRawPayloadsIntent",
                    "type": "object",
                    "required": true,
                    "description": "The signRawPayloadsIntent object",
                    "childFields": [
                      {
                        "name": "signWith",
                        "type": "string",
                        "required": true,
                        "description": "A Wallet account address, Private Key address, or Private Key identifier."
                      },
                      {
                        "name": "payloads",
                        "type": "array",
                        "required": true,
                        "description": "An array of raw unsigned payloads to be signed.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      },
                      {
                        "name": "encoding",
                        "type": "enum",
                        "required": true,
                        "description": "encoding field",
                        "enumOptions": [
                          {
                            "value": "PAYLOAD_ENCODING_HEXADECIMAL",
                            "description": "PAYLOAD_ENCODING_HEXADECIMAL option"
                          },
                          {
                            "value": "PAYLOAD_ENCODING_TEXT_UTF8",
                            "description": "PAYLOAD_ENCODING_TEXT_UTF8 option"
                          }
                        ]
                      },
                      {
                        "name": "hashFunction",
                        "type": "enum",
                        "required": true,
                        "description": "hashFunction field",
                        "enumOptions": [
                          {
                            "value": "HASH_FUNCTION_NO_OP",
                            "description": "HASH_FUNCTION_NO_OP option"
                          },
                          {
                            "value": "HASH_FUNCTION_SHA256",
                            "description": "HASH_FUNCTION_SHA256 option"
                          },
                          {
                            "value": "HASH_FUNCTION_KECCAK256",
                            "description": "HASH_FUNCTION_KECCAK256 option"
                          },
                          {
                            "value": "HASH_FUNCTION_NOT_APPLICABLE",
                            "description": "HASH_FUNCTION_NOT_APPLICABLE option"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "signRawPayloadsResult",
                    "type": "object",
                    "required": true,
                    "description": "The signRawPayloadsResult object",
                    "childFields": [
                      {
                        "name": "signatures",
                        "type": "array",
                        "required": false,
                        "description": "signatures field",
                        "childFields": [
                          {
                            "name": "r",
                            "type": "string",
                            "required": true,
                            "description": "Component of an ECSDA signature."
                          },
                          {
                            "name": "s",
                            "type": "string",
                            "required": true,
                            "description": "Component of an ECSDA signature."
                          },
                          {
                            "name": "v",
                            "type": "string",
                            "required": true,
                            "description": "Component of an ECSDA signature."
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_SIGN_RAW_PAYLOADS",
              "description": "ACTIVITY_TYPE_SIGN_RAW_PAYLOADS option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "signWith",
              "type": "string",
              "required": true,
              "description": "A Wallet account address, Private Key address, or Private Key identifier."
            },
            {
              "name": "payloads",
              "type": "array",
              "required": true,
              "description": "An array of raw unsigned payloads to be signed.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            },
            {
              "name": "encoding",
              "type": "enum",
              "required": true,
              "description": "encoding field",
              "enumOptions": [
                {
                  "value": "PAYLOAD_ENCODING_HEXADECIMAL",
                  "description": "PAYLOAD_ENCODING_HEXADECIMAL option"
                },
                {
                  "value": "PAYLOAD_ENCODING_TEXT_UTF8",
                  "description": "PAYLOAD_ENCODING_TEXT_UTF8 option"
                }
              ]
            },
            {
              "name": "hashFunction",
              "type": "enum",
              "required": true,
              "description": "hashFunction field",
              "enumOptions": [
                {
                  "value": "HASH_FUNCTION_NO_OP",
                  "description": "HASH_FUNCTION_NO_OP option"
                },
                {
                  "value": "HASH_FUNCTION_SHA256",
                  "description": "HASH_FUNCTION_SHA256 option"
                },
                {
                  "value": "HASH_FUNCTION_KECCAK256",
                  "description": "HASH_FUNCTION_KECCAK256 option"
                },
                {
                  "value": "HASH_FUNCTION_NOT_APPLICABLE",
                  "description": "HASH_FUNCTION_NOT_APPLICABLE option"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Sign Transaction",
    "path": "/public/v1/submit/sign_transaction",
    "method": "post",
    "description": "Sign a transaction",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_SIGN_TRANSACTION"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "signTransactionIntent",
                    "type": "object",
                    "required": true,
                    "description": "The signTransactionIntent object",
                    "childFields": [
                      {
                        "name": "privateKeyId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Private Key."
                      },
                      {
                        "name": "unsignedTransaction",
                        "type": "string",
                        "required": true,
                        "description": "Raw unsigned transaction to be signed by a particular Private Key."
                      },
                      {
                        "name": "type",
                        "type": "enum",
                        "required": true,
                        "description": "type field",
                        "enumOptions": [
                          {
                            "value": "TRANSACTION_TYPE_ETHEREUM",
                            "description": "TRANSACTION_TYPE_ETHEREUM option"
                          },
                          {
                            "value": "TRANSACTION_TYPE_SOLANA",
                            "description": "TRANSACTION_TYPE_SOLANA option"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "signTransactionResult",
                    "type": "object",
                    "required": true,
                    "description": "The signTransactionResult object",
                    "childFields": [
                      {
                        "name": "signedTransaction",
                        "type": "string",
                        "required": true,
                        "description": "signedTransaction field"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_SIGN_TRANSACTION_V2",
              "description": "ACTIVITY_TYPE_SIGN_TRANSACTION_V2 option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "signWith",
              "type": "string",
              "required": true,
              "description": "A Wallet account address, Private Key address, or Private Key identifier."
            },
            {
              "name": "unsignedTransaction",
              "type": "string",
              "required": true,
              "description": "Raw unsigned transaction to be signed"
            },
            {
              "name": "type",
              "type": "enum",
              "required": true,
              "description": "type field",
              "enumOptions": [
                {
                  "value": "TRANSACTION_TYPE_ETHEREUM",
                  "description": "TRANSACTION_TYPE_ETHEREUM option"
                },
                {
                  "value": "TRANSACTION_TYPE_SOLANA",
                  "description": "TRANSACTION_TYPE_SOLANA option"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Update Policy",
    "path": "/public/v1/submit/update_policy",
    "method": "post",
    "description": "Update an existing Policy",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_UPDATE_POLICY"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "updatePolicyIntent",
                    "type": "object",
                    "required": true,
                    "description": "The updatePolicyIntent object",
                    "childFields": [
                      {
                        "name": "policyId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Policy."
                      },
                      {
                        "name": "policyName",
                        "type": "string",
                        "required": false,
                        "description": "Human-readable name for a Policy."
                      },
                      {
                        "name": "policyEffect",
                        "type": "enum",
                        "required": false,
                        "description": "policyEffect field",
                        "enumOptions": [
                          {
                            "value": "EFFECT_ALLOW",
                            "description": "EFFECT_ALLOW option"
                          },
                          {
                            "value": "EFFECT_DENY",
                            "description": "EFFECT_DENY option"
                          }
                        ]
                      },
                      {
                        "name": "policyCondition",
                        "type": "string",
                        "required": false,
                        "description": "The condition expression that triggers the Effect (optional)."
                      },
                      {
                        "name": "policyConsensus",
                        "type": "string",
                        "required": false,
                        "description": "The consensus expression that triggers the Effect (optional)."
                      },
                      {
                        "name": "policyNotes",
                        "type": "string",
                        "required": false,
                        "description": "Accompanying notes for a Policy (optional)."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "updatePolicyResult",
                    "type": "object",
                    "required": true,
                    "description": "The updatePolicyResult object",
                    "childFields": [
                      {
                        "name": "policyId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Policy."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_UPDATE_POLICY",
              "description": "ACTIVITY_TYPE_UPDATE_POLICY option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "policyId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for a given Policy."
            },
            {
              "name": "policyName",
              "type": "string",
              "required": false,
              "description": "Human-readable name for a Policy."
            },
            {
              "name": "policyEffect",
              "type": "enum",
              "required": false,
              "description": "policyEffect field",
              "enumOptions": [
                {
                  "value": "EFFECT_ALLOW",
                  "description": "EFFECT_ALLOW option"
                },
                {
                  "value": "EFFECT_DENY",
                  "description": "EFFECT_DENY option"
                }
              ]
            },
            {
              "name": "policyCondition",
              "type": "string",
              "required": false,
              "description": "The condition expression that triggers the Effect (optional)."
            },
            {
              "name": "policyConsensus",
              "type": "string",
              "required": false,
              "description": "The consensus expression that triggers the Effect (optional)."
            },
            {
              "name": "policyNotes",
              "type": "string",
              "required": false,
              "description": "Accompanying notes for a Policy (optional)."
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Update Private Key Tag",
    "path": "/public/v1/submit/update_private_key_tag",
    "method": "post",
    "description": "Update human-readable name or associated private keys. Note that this activity is atomic: all of the updates will succeed at once, or all of them will fail.",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_UPDATE_PRIVATE_KEY_TAG"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "updatePrivateKeyTagIntent",
                    "type": "object",
                    "required": true,
                    "description": "The updatePrivateKeyTagIntent object",
                    "childFields": [
                      {
                        "name": "privateKeyTagId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Private Key Tag."
                      },
                      {
                        "name": "newPrivateKeyTagName",
                        "type": "string",
                        "required": false,
                        "description": "The new, human-readable name for the tag with the given ID."
                      },
                      {
                        "name": "addPrivateKeyIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of Private Keys IDs to add this tag to.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      },
                      {
                        "name": "removePrivateKeyIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of Private Key IDs to remove this tag from.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "updatePrivateKeyTagResult",
                    "type": "object",
                    "required": true,
                    "description": "The updatePrivateKeyTagResult object",
                    "childFields": [
                      {
                        "name": "privateKeyTagId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Private Key Tag."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_UPDATE_PRIVATE_KEY_TAG",
              "description": "ACTIVITY_TYPE_UPDATE_PRIVATE_KEY_TAG option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "privateKeyTagId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for a given Private Key Tag."
            },
            {
              "name": "newPrivateKeyTagName",
              "type": "string",
              "required": false,
              "description": "The new, human-readable name for the tag with the given ID."
            },
            {
              "name": "addPrivateKeyIds",
              "type": "array",
              "required": true,
              "description": "A list of Private Keys IDs to add this tag to.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            },
            {
              "name": "removePrivateKeyIds",
              "type": "array",
              "required": true,
              "description": "A list of Private Key IDs to remove this tag from.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Update Root Quorum",
    "path": "/public/v1/submit/update_root_quorum",
    "method": "post",
    "description": "Set the threshold and members of the root quorum. This activity must be approved by the current root quorum.",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_UPDATE_ROOT_QUORUM"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "updateRootQuorumIntent",
                    "type": "object",
                    "required": true,
                    "description": "The updateRootQuorumIntent object",
                    "childFields": [
                      {
                        "name": "threshold",
                        "type": "number",
                        "required": true,
                        "description": "The threshold of unique approvals to reach quorum."
                      },
                      {
                        "name": "userIds",
                        "type": "array",
                        "required": true,
                        "description": "The unique identifiers of users who comprise the quorum set.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "updateRootQuorumResult",
                    "type": "object",
                    "required": true,
                    "description": "The updateRootQuorumResult object",
                    "childFields": []
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_UPDATE_ROOT_QUORUM",
              "description": "ACTIVITY_TYPE_UPDATE_ROOT_QUORUM option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "threshold",
              "type": "number",
              "required": true,
              "description": "The threshold of unique approvals to reach quorum."
            },
            {
              "name": "userIds",
              "type": "array",
              "required": true,
              "description": "The unique identifiers of users who comprise the quorum set.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Update User",
    "path": "/public/v1/submit/update_user",
    "method": "post",
    "description": "Update a User in an existing Organization",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_UPDATE_USER_TAG"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "updateUserIntent",
                    "type": "object",
                    "required": true,
                    "description": "The updateUserIntent object",
                    "childFields": [
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given User."
                      },
                      {
                        "name": "userName",
                        "type": "string",
                        "required": false,
                        "description": "Human-readable name for a User."
                      },
                      {
                        "name": "userEmail",
                        "type": "string",
                        "required": false,
                        "description": "The user's email address."
                      },
                      {
                        "name": "userTagIds",
                        "type": "array",
                        "required": false,
                        "description": "An updated list of User Tags to apply to this User. This field, if not needed, should be an empty array in your request body.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      },
                      {
                        "name": "userPhoneNumber",
                        "type": "string",
                        "required": false,
                        "description": "The user's phone number in E.164 format e.g. +13214567890"
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "updateUserResult",
                    "type": "object",
                    "required": true,
                    "description": "The updateUserResult object",
                    "childFields": [
                      {
                        "name": "userId",
                        "type": "string",
                        "required": true,
                        "description": "A User ID."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_UPDATE_USER",
              "description": "ACTIVITY_TYPE_UPDATE_USER option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "userId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for a given User."
            },
            {
              "name": "userName",
              "type": "string",
              "required": false,
              "description": "Human-readable name for a User."
            },
            {
              "name": "userEmail",
              "type": "string",
              "required": false,
              "description": "The user's email address."
            },
            {
              "name": "userTagIds",
              "type": "array",
              "required": false,
              "description": "An updated list of User Tags to apply to this User. This field, if not needed, should be an empty array in your request body.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            },
            {
              "name": "userPhoneNumber",
              "type": "string",
              "required": false,
              "description": "The user's phone number in E.164 format e.g. +13214567890"
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Update User Tag",
    "path": "/public/v1/submit/update_user_tag",
    "method": "post",
    "description": "Update human-readable name or associated users. Note that this activity is atomic: all of the updates will succeed at once, or all of them will fail.",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_UPDATE_USER_TAG"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "updateUserTagIntent",
                    "type": "object",
                    "required": true,
                    "description": "The updateUserTagIntent object",
                    "childFields": [
                      {
                        "name": "userTagId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given User Tag."
                      },
                      {
                        "name": "newUserTagName",
                        "type": "string",
                        "required": false,
                        "description": "The new, human-readable name for the tag with the given ID."
                      },
                      {
                        "name": "addUserIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of User IDs to add this tag to.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      },
                      {
                        "name": "removeUserIds",
                        "type": "array",
                        "required": true,
                        "description": "A list of User IDs to remove this tag from.",
                        "childFields": [
                          {
                            "name": "item",
                            "type": "string",
                            "required": true,
                            "description": "item field"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "updateUserTagResult",
                    "type": "object",
                    "required": true,
                    "description": "The updateUserTagResult object",
                    "childFields": [
                      {
                        "name": "userTagId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given User Tag."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_UPDATE_USER_TAG",
              "description": "ACTIVITY_TYPE_UPDATE_USER_TAG option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "userTagId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for a given User Tag."
            },
            {
              "name": "newUserTagName",
              "type": "string",
              "required": false,
              "description": "The new, human-readable name for the tag with the given ID."
            },
            {
              "name": "addUserIds",
              "type": "array",
              "required": true,
              "description": "A list of User IDs to add this tag to.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            },
            {
              "name": "removeUserIds",
              "type": "array",
              "required": true,
              "description": "A list of User IDs to remove this tag from.",
              "childFields": [
                {
                  "name": "item",
                  "type": "string",
                  "required": true,
                  "description": "item field"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "title": "Update Wallet",
    "path": "/public/v1/submit/update_wallet",
    "method": "post",
    "description": "Update a wallet for an organization",
    "version": "1",
    "type": "activity",
    "responses": [
      {
        "statusCode": 200,
        "contentType": "application/json",
        "fields": [
          {
            "name": "activity",
            "type": "object",
            "required": true,
            "description": "The activity object containing type, intent, and result",
            "childFields": [
              {
                "name": "type",
                "type": "string",
                "required": true,
                "description": "The activity type",
                "defaultValue": "ACTIVITY_TYPE_UPDATE_WALLET"
              },
              {
                "name": "intent",
                "type": "object",
                "required": true,
                "description": "The intent of the activity",
                "childFields": [
                  {
                    "name": "updateWalletIntent",
                    "type": "object",
                    "required": true,
                    "description": "The updateWalletIntent object",
                    "childFields": [
                      {
                        "name": "walletId",
                        "type": "string",
                        "required": true,
                        "description": "Unique identifier for a given Wallet."
                      },
                      {
                        "name": "walletName",
                        "type": "string",
                        "required": false,
                        "description": "Human-readable name for a Wallet."
                      }
                    ]
                  }
                ]
              },
              {
                "name": "result",
                "type": "object",
                "required": true,
                "description": "The result of the activity",
                "childFields": [
                  {
                    "name": "updateWalletResult",
                    "type": "object",
                    "required": true,
                    "description": "The updateWalletResult object",
                    "childFields": [
                      {
                        "name": "walletId",
                        "type": "string",
                        "required": true,
                        "description": "A Wallet ID."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "requestBody": {
      "contentType": "application/json",
      "fields": [
        {
          "name": "type",
          "type": "enum",
          "required": true,
          "description": "type field",
          "enumOptions": [
            {
              "value": "ACTIVITY_TYPE_UPDATE_WALLET",
              "description": "ACTIVITY_TYPE_UPDATE_WALLET option"
            }
          ]
        },
        {
          "name": "timestampMs",
          "type": "string",
          "required": true,
          "description": "Timestamp (in milliseconds) of the request, used to verify liveness of user requests."
        },
        {
          "name": "organizationId",
          "type": "string",
          "required": true,
          "description": "Unique identifier for a given Organization."
        },
        {
          "name": "parameters",
          "type": "object",
          "required": true,
          "description": "parameters field",
          "childFields": [
            {
              "name": "walletId",
              "type": "string",
              "required": true,
              "description": "Unique identifier for a given Wallet."
            },
            {
              "name": "walletName",
              "type": "string",
              "required": false,
              "description": "Human-readable name for a Wallet."
            }
          ]
        }
      ]
    }
  }
]